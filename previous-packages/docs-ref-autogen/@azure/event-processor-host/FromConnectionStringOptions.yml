### YamlMime:TSType
name: FromConnectionStringOptions
uid: '@azure/event-processor-host.FromConnectionStringOptions'
package: '@azure/event-processor-host'
summary: >-
  Describes the optional parameters that can be provided for creating an
  EventProcessorHost while

  creating from the eventhub connection string.
fullName: FromConnectionStringOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: consumerGroup
    uid: '@azure/event-processor-host.FromConnectionStringOptions.consumerGroup'
    package: '@azure/event-processor-host'
    summary: >-
      {string} [consumerGroup] The name of the consumer group within the Event
      Hub. Default

      value: **`"$default"`**.
    fullName: consumerGroup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'consumerGroup?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: dataTransformer
    uid: '@azure/event-processor-host.FromConnectionStringOptions.dataTransformer'
    package: '@azure/event-processor-host'
    summary: >-
      {DataTransformer} [dataTransformer] The data transformer that will be used
      to encode

      and decode the sent and received messages respectively. If not provided
      then we will use the

      DefaultDataTransformer. The default transformer should handle majority of
      the cases. This

      option needs to be used only for specialized scenarios.
    fullName: dataTransformer
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dataTransformer?: DataTransformer'
      return:
        type: DataTransformer
        description: ''
  - name: eventHubPath
    uid: '@azure/event-processor-host.FromConnectionStringOptions.eventHubPath'
    package: '@azure/event-processor-host'
    summary: >-
      {string} [eventHubPath] The name of the EventHub. This is optional if the

      EventHub connection string contains EntityPath=hub-name else an Error will
      be thrown.
    fullName: eventHubPath
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'eventHubPath?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: fastScanInterval
    uid: '@azure/event-processor-host.FromConnectionStringOptions.fastScanInterval'
    package: '@azure/event-processor-host'
    summary: >-
      {number} [fastScanInterval] There are two possible interval times between
      scans for

      available partitions, fast and slow. The fast (short) interval **`in
      seconds`** is used after

      a scan in which lease stealing has occurred, to promote quicker
      rebalancing.

      Default: **`3` seconds**.
    fullName: fastScanInterval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fastScanInterval?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: initialOffset
    uid: '@azure/event-processor-host.FromConnectionStringOptions.initialOffset'
    package: '@azure/event-processor-host'
    summary: >-
      {EventPosition} initialOffset This is only used when then receiver is
      being created

      for the very first time and there is no checkpoint data in the blob. For
      this option to be

      effective please make sure to provide a new hostName that was not used
      previously.
    fullName: initialOffset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'initialOffset?: EventPosition'
      return:
        type: EventPosition
        description: ''
  - name: leaseDuration
    uid: '@azure/event-processor-host.FromConnectionStringOptions.leaseDuration'
    package: '@azure/event-processor-host'
    summary: >-
      {number} [leaseDuration] Duration of a lease **`in seconds`** before it
      expires

      unless renewed. Default: **`30` seconds**, Min Value: **`15` seconds**,

      Max value: **`60` seconds**.


      If `Leasemanager` is provided when creating the EventProcessorHost then
      this value will be ignored.
    fullName: leaseDuration
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'leaseDuration?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: leaseRenewInterval
    uid: '@azure/event-processor-host.FromConnectionStringOptions.leaseRenewInterval'
    package: '@azure/event-processor-host'
    summary: >-
      {number} [leaseRenewInterval] The sleep interval **`in seconds`** between
      scans.

      Default: **`10` seconds**.


      Allows a lease manager implementation to specify to PartitionManager how
      often it should

      scan leases and renew them. In order to redistribute leases in a timely
      fashion after a host

      ceases operating, we recommend a relatively short interval, such as ten
      seconds. Obviously it

      should be less than half of the lease length, to prevent accidental
      expiration.


      If `Leasemanager` is provided when creating the EventProcessorHost then
      this value will be ignored.
    fullName: leaseRenewInterval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'leaseRenewInterval?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: onEphError
    uid: '@azure/event-processor-host.FromConnectionStringOptions.onEphError'
    package: '@azure/event-processor-host'
    summary: >-
      {OnEphError} [onEphError] Error handler that can be provided to receive
      notifcation

      for general errors.


      Errors which occur while processing events from a particular EventHub
      partition are delivered

      to the `onError` handler provided in the `start()` method. This handler is
      called on

      occasions when an error occurs while managing partitions or leases for the
      partitions.
    fullName: onEphError
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onEphError?: OnEphError'
      return:
        type: <xref uid="@azure/event-processor-host.OnEphError" />
        description: ''
  - name: slowScanInterval
    uid: '@azure/event-processor-host.FromConnectionStringOptions.slowScanInterval'
    package: '@azure/event-processor-host'
    summary: >-
      {number} [slowScanInterval] The slow (long) interval **`in seconds`** is
      used

      after a scan in which lease stealing did not occur, to reduce unnecessary
      scanning when

      the system is in steady state. Default: **`5` seconds**.
    fullName: slowScanInterval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'slowScanInterval?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: startupScanDelay
    uid: '@azure/event-processor-host.FromConnectionStringOptions.startupScanDelay'
    package: '@azure/event-processor-host'
    summary: >-
      {number} [startupScanDelay] The delay time **`in seconds`** between the
      first scan

      for available partitions and the second. This is part of a startup
      optimization which allows

      individual hosts to become visible to other hosts, and thereby get a more
      accurate count

      of the number of hosts in the system, before they try to estimate how many
      partitions they

      should own. Default: **`30` seconds**.
    fullName: startupScanDelay
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'startupScanDelay?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: storageBlobPrefix
    uid: '@azure/event-processor-host.FromConnectionStringOptions.storageBlobPrefix'
    package: '@azure/event-processor-host'
    summary: >-
      {string} [storageBlobPrefix] Prefix used when naming blobs within the
      storage

      container.
    fullName: storageBlobPrefix
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'storageBlobPrefix?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: userAgent
    uid: '@azure/event-processor-host.FromConnectionStringOptions.userAgent'
    package: '@azure/event-processor-host'
    summary: >-
      {string} [userAgent] The user agent that needs to be appended to the built
      in

      user agent string.
    fullName: userAgent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userAgent?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: webSocket
    uid: '@azure/event-processor-host.FromConnectionStringOptions.webSocket'
    package: '@azure/event-processor-host'
    summary: >-
      The WebSocket constructor used to create an AMQP connection over a
      WebSocket.

      This option should be provided in the below scenarios

      - The TCP port 5671 which is what is used by the AMQP connection to Event
      Hubs is blocked in your environment.

      - Your application needs to be run behind a proxy server

      - Your application needs to run in the browser and you want to provide
      your own choice of Websocket implementation

      instead of the built-in WebSocket in the browser.
    fullName: webSocket
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'webSocket?: WebSocketImpl'
      return:
        type: WebSocketImpl
        description: ''
  - name: webSocketConstructorOptions
    uid: >-
      @azure/event-processor-host.FromConnectionStringOptions.webSocketConstructorOptions
    package: '@azure/event-processor-host'
    summary: >-
      {webSocketConstructorOptions} - Options to be passed to the WebSocket
      constructor
    fullName: webSocketConstructorOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'webSocketConstructorOptions?: any'
      return:
        type: any
        description: ''
extends: <xref uid="@azure/event-processor-host.FromTokenProviderOptions" />
