### YamlMime:TSType
name: DurableOrchestrationClient
uid: durable-functions.DurableOrchestrationClient
package: durable-functions
summary: |-
  Client for starting, querying, terminating and raising events to
  orchestration instances.
fullName: DurableOrchestrationClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: DurableOrchestrationClient(OrchestrationClientInputData)
    uid: durable-functions.DurableOrchestrationClient.constructor
    package: durable-functions
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DurableOrchestrationClient(clientData: OrchestrationClientInputData)'
      parameters:
        - id: clientData
          type: OrchestrationClientInputData
          description: |
            The object representing the orchestrationClient input
             binding of the Azure function that will use this client.
properties:
  - name: taskHubName
    uid: durable-functions.DurableOrchestrationClient.taskHubName
    package: durable-functions
    summary: |-
      The name of the task hub configured on this orchestration client
      instance.
    fullName: taskHubName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'taskHubName: string'
      return:
        type: string
        description: ''
methods:
  - name: 'createCheckStatusResponse(IHttpRequest | HttpRequest | undefined, string)'
    uid: durable-functions.DurableOrchestrationClient.createCheckStatusResponse
    package: durable-functions
    summary: |-
      Creates an HTTP response that is useful for checking the status of the
      specified instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createCheckStatusResponse(request: IHttpRequest | HttpRequest |
        undefined, instanceId: string)
      parameters:
        - id: request
          type: >-
            <xref uid="durable-functions.IHttpRequest" /> | HttpRequest |
            undefined
          description: |-
            The HTTP request that triggered the current orchestration
             instance.
        - id: instanceId
          type: string
          description: The ID of the orchestration instance to check.
      return:
        type: <xref uid="durable-functions.IHttpResponse" />
        description: |-
          An HTTP 202 response with a Location header and a payload
           containing instance management URLs.
  - name: createHttpManagementPayload(string)
    uid: durable-functions.DurableOrchestrationClient.createHttpManagementPayload
    package: durable-functions
    summary: |-
      Creates an [[HttpManagementPayload]] object that contains instance
      management HTTP endpoints.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createHttpManagementPayload(instanceId: string)'
      parameters:
        - id: instanceId
          type: string
          description: |
            The ID of the orchestration instance to check.
      return:
        type: <xref uid="durable-functions.HttpManagementPayload" />
        description: ''
  - name: 'getStatus(string, boolean, boolean, boolean)'
    uid: durable-functions.DurableOrchestrationClient.getStatus
    package: durable-functions
    summary: Gets the status of the specified orchestration instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStatus(instanceId: string, showHistory?: boolean,
        showHistoryOutput?: boolean, showInput?: boolean)
      parameters:
        - id: instanceId
          type: string
          description: The ID of the orchestration instance to query.
        - id: showHistory
          type: boolean
          description: |-
            Boolean marker for including execution history in the
             response.
        - id: showHistoryOutput
          type: boolean
          description: |
            Boolean marker for including input and output
             in the execution history response.
        - id: showInput
          type: boolean
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="durable-functions.DurableOrchestrationStatus"
          />&gt;
        description: ''
  - name: getStatusAll()
    uid: durable-functions.DurableOrchestrationClient.getStatusAll
    package: durable-functions
    summary: Gets the status of all orchestration instances.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getStatusAll()
      return:
        type: >-
          Promise&lt;<xref uid="durable-functions.DurableOrchestrationStatus"
          />[]&gt;
        description: ''
  - name: >-
      getStatusBy(Date | undefined, Date | undefined,
      OrchestrationRuntimeStatus[])
    uid: durable-functions.DurableOrchestrationClient.getStatusBy
    package: durable-functions
    summary: |-
      Gets the status of all orchestration instances that match the specified
      conditions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStatusBy(createdTimeFrom: Date | undefined, createdTimeTo:
        Date | undefined, runtimeStatus: OrchestrationRuntimeStatus[])
      parameters:
        - id: createdTimeFrom
          type: Date | undefined
          description: |-
            Return orchestration instances which were created
             after this Date.
        - id: createdTimeTo
          type: Date | undefined
          description: |-
            Return orchestration instances which were created
             before this DateTime.
        - id: runtimeStatus
          type: '<xref uid="durable-functions.OrchestrationRuntimeStatus" />[]'
          description: |
            Return orchestration instances which match any of
             the runtimeStatus values in this array.
      return:
        type: >-
          Promise&lt;<xref uid="durable-functions.DurableOrchestrationStatus"
          />[]&gt;
        description: ''
  - name: purgeInstanceHistory(string)
    uid: durable-functions.DurableOrchestrationClient.purgeInstanceHistory
    package: durable-functions
    summary: Purge the history for a specific orchestration instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function purgeInstanceHistory(instanceId: string)'
      parameters:
        - id: instanceId
          type: string
          description: |
            The ID of the orchestration instance to purge.
      return:
        type: Promise&lt;<xref uid="durable-functions.PurgeHistoryResult" />&gt;
        description: ''
  - name: 'purgeInstanceHistoryBy(Date, Date, OrchestrationRuntimeStatus[])'
    uid: durable-functions.DurableOrchestrationClient.purgeInstanceHistoryBy
    package: durable-functions
    summary: Purge the orchestration history for instances that match the conditions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeInstanceHistoryBy(createdTimeFrom: Date, createdTimeTo?:
        Date, runtimeStatus?: OrchestrationRuntimeStatus[])
      parameters:
        - id: createdTimeFrom
          type: Date
          description: |-
            Start creation time for querying instances for
             purging.
        - id: createdTimeTo
          type: Date
          description: |-
            End creation time for querying instances for
             purging.
        - id: runtimeStatus
          type: '<xref uid="durable-functions.OrchestrationRuntimeStatus" />[]'
          description: |
            List of runtime statuses for querying instances for
             purging. Only Completed, Terminated or Failed will be processed.
      return:
        type: Promise&lt;<xref uid="durable-functions.PurgeHistoryResult" />&gt;
        description: ''
  - name: 'raiseEvent(string, string, unknown, string, string)'
    uid: durable-functions.DurableOrchestrationClient.raiseEvent
    package: durable-functions
    summary: Sends an event notification message to a waiting orchestration instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function raiseEvent(instanceId: string, eventName: string, eventData:
        unknown, taskHubName?: string, connectionName?: string)
      parameters:
        - id: instanceId
          type: string
          description: |-
            The ID of the orchestration instance that will handle
             the event.
        - id: eventName
          type: string
          description: The name of the event.
        - id: eventData
          type: unknown
          description: The JSON-serializable data associated with the event.
        - id: taskHubName
          type: string
          description: |-
            The TaskHubName of the orchestration that will handle
             the event.
        - id: connectionName
          type: string
          description: |-
            The name of the connection string associated with
             `taskHubName.`
      return:
        type: Promise&lt;void&gt;
        description: >-
          A promise that resolves when the event notification message has
           been enqueued.

          In order to handle the event, the target orchestration instance must
          be

          waiting for an event named `eventName` using

          [[waitForExternalEvent]].


          If the specified instance is not found or not running, this operation

          will have no effect.
  - name: 'readEntityState<T>(EntityId, string, string)'
    uid: durable-functions.DurableOrchestrationClient.readEntityState
    package: durable-functions
    summary: |-
      Tries to read the current state of an entity. Returnes undefined if the
      entity does not exist, or if the JSON-serialized state of the entity is
      larger than 16KB.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function readEntityState<T>(entityId: EntityId, taskHubName?: string,
        connectionName?: string)
      parameters:
        - id: entityId
          type: <xref uid="durable-functions.EntityId" />
          description: The target entity.
        - id: taskHubName
          type: string
          description: The TaskHubName of the target entity.
        - id: connectionName
          type: string
          description: |-
            The name of the connection string associated with
            [taskHubName].
      return:
        type: >-
          Promise&lt;<xref uid="durable-functions.EntityStateResponse"
          />&lt;T&gt;&gt;
        description: A response containing the current state of the entity.
  - name: 'rewind(string, string, string, string)'
    uid: durable-functions.DurableOrchestrationClient.rewind
    package: durable-functions
    summary: Rewinds the specified failed orchestration instance with a reason.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rewind(instanceId: string, reason: string, taskHubName?:
        string, connectionName?: string)
      parameters:
        - id: instanceId
          type: string
          description: The ID of the orchestration instance to rewind.
        - id: reason
          type: string
          description: The reason for rewinding the orchestration instance.
        - id: taskHubName
          type: string
          description: ''
        - id: connectionName
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          A promise that resolves when the rewind message is enqueued.

          This feature is currently in preview.
  - name: 'signalEntity(EntityId, string, unknown, string, string)'
    uid: durable-functions.DurableOrchestrationClient.signalEntity
    package: durable-functions
    summary: Signals an entity to perform an operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function signalEntity(entityId: EntityId, operationName?: string,
        operationContent?: unknown, taskHubName?: string, connectionName?:
        string)
      parameters:
        - id: entityId
          type: <xref uid="durable-functions.EntityId" />
          description: The target entity.
        - id: operationName
          type: string
          description: The name of the operation.
        - id: operationContent
          type: unknown
          description: The content for the operation.
        - id: taskHubName
          type: string
          description: The TaskHubName of the target entity.
        - id: connectionName
          type: string
          description: |
            The name of the connection string associated with [taskHubName].
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'startNew(string, string, unknown)'
    uid: durable-functions.DurableOrchestrationClient.startNew
    package: durable-functions
    summary: |-
      Starts a new instance of the specified orchestrator function.
      If an orchestration instance with the specified ID already exists, the
      existing instance will be silently replaced by this new instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startNew(orchestratorFunctionName: string, instanceId?: string,
        input?: unknown)
      parameters:
        - id: orchestratorFunctionName
          type: string
          description: |-
            The name of the orchestrator function to
             start.
        - id: instanceId
          type: string
          description: |-
            The ID to use for the new orchestration instance. If
             no instanceId is specified, the Durable Functions extension will
             generate a random GUID (recommended).
        - id: input
          type: unknown
          description: |-
            JSON-serializable input value for the orchestrator
             function.
      return:
        type: Promise&lt;string&gt;
        description: The ID of the new orchestration instance.
  - name: 'terminate(string, string)'
    uid: durable-functions.DurableOrchestrationClient.terminate
    package: durable-functions
    summary: Terminates a running orchestration instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function terminate(instanceId: string, reason: string)'
      parameters:
        - id: instanceId
          type: string
          description: The ID of the orchestration instance to terminate.
        - id: reason
          type: string
          description: The reason for terminating the orchestration instance.
      return:
        type: Promise&lt;void&gt;
        description: |-
          A promise that resolves when the terminate message is enqueued.

          Terminating an orchestration instance has no effect on any in-flight
          activity function executions or sub-orchestrations that were started
          by the current orchestration instance.
  - name: >-
      waitForCompletionOrCreateCheckStatusResponse(HttpRequest, string, number,
      number)
    uid: >-
      durable-functions.DurableOrchestrationClient.waitForCompletionOrCreateCheckStatusResponse
    package: durable-functions
    summary: |
      Creates an HTTP response which either contains a payload of management
      URLs for a non-completed instance or contains the payload containing
      the output of the completed orchestration.
      If the orchestration does not complete within the specified timeout,
      then the HTTP response will be identical to that of
      [[createCheckStatusResponse]].
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function waitForCompletionOrCreateCheckStatusResponse(request:
        HttpRequest, instanceId: string, timeoutInMilliseconds?: number,
        retryIntervalInMilliseconds?: number)
      parameters:
        - id: request
          type: HttpRequest
          description: The HTTP request that triggered the current function.
        - id: instanceId
          type: string
          description: The unique ID of the instance to check.
        - id: timeoutInMilliseconds
          type: number
          description: |-
            Total allowed timeout for output from the
             durable function. The default value is 10 seconds.
        - id: retryIntervalInMilliseconds
          type: number
          description: |
            The timeout between checks for output
             from the durable function. The default value is 1 second.
      return:
        type: Promise&lt;<xref uid="durable-functions.IHttpResponse" />&gt;
        description: ''
