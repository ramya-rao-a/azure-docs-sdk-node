### YamlMime:TSType
name: ServiceReceiver
uid: azure-iothub.ServiceReceiver
package: azure-iothub
summary: ''
fullName: ServiceReceiver
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ServiceReceiver(ReceiverLink)
    uid: azure-iothub.ServiceReceiver.constructor
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ServiceReceiver(receiver: ReceiverLink)'
      parameters:
        - id: receiver
          type: ReceiverLink
          description: ''
properties:
  - name: captureRejections
    uid: azure-iothub.ServiceReceiver.captureRejections
    package: azure-iothub
    summary: Sets or gets the default captureRejection value for all emitters.
    fullName: captureRejections
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static captureRejections: boolean'
      return:
        type: boolean
        description: ''
  - name: captureRejectionSymbol
    uid: azure-iothub.ServiceReceiver.captureRejectionSymbol
    package: azure-iothub
    summary: ''
    fullName: captureRejectionSymbol
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static captureRejectionSymbol: Object'
      return:
        type: Object
        description: ''
  - name: defaultMaxListeners
    uid: azure-iothub.ServiceReceiver.defaultMaxListeners
    package: azure-iothub
    summary: ''
    fullName: defaultMaxListeners
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type: number
        description: ''
  - name: errorMonitor
    uid: azure-iothub.ServiceReceiver.errorMonitor
    package: azure-iothub
    summary: >
      This symbol shall be used to install a listener for only monitoring
      `'error'`

      events. Listeners installed using this symbol are called before the
      regular

      `'error'` listeners are called.

      Installing a listener using this symbol does not change the behavior once
      an

      `'error'` event is emitted, therefore the process will still crash if no

      regular `'error'` listener is installed.
    fullName: errorMonitor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static errorMonitor: Object'
      return:
        type: Object
        description: ''
methods:
  - name: abandon(Message)
    uid: azure-iothub.ServiceReceiver.abandon_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type: Message
          description: ''
      return:
        type: Promise&lt;MessageAbandoned&gt;
        description: ''
  - name: 'abandon(Message, Callback<MessageAbandoned>)'
    uid: azure-iothub.ServiceReceiver.abandon
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function abandon(message: Message, done: Callback<MessageAbandoned>)'
      parameters:
        - id: message
          type: Message
          description: ''
        - id: done
          type: Callback&lt;MessageAbandoned&gt;
          description: ''
  - name: 'addListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.ServiceReceiver.addListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: complete(Message)
    uid: azure-iothub.ServiceReceiver.complete_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type: Message
          description: ''
      return:
        type: Promise&lt;MessageCompleted&gt;
        description: ''
  - name: 'complete(Message, Callback<MessageCompleted>)'
    uid: azure-iothub.ServiceReceiver.complete
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function complete(message: Message, done: Callback<MessageCompleted>)'
      parameters:
        - id: message
          type: Message
          description: ''
        - id: done
          type: Callback&lt;MessageCompleted&gt;
          description: ''
  - name: detach()
    uid: azure-iothub.ServiceReceiver.detach_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function detach()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: detach(ErrorCallback)
    uid: azure-iothub.ServiceReceiver.detach
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function detach(callback: ErrorCallback)'
      parameters:
        - id: callback
          type: ErrorCallback
          description: ''
  - name: 'emit(string | symbol, any[])'
    uid: azure-iothub.ServiceReceiver.emit
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: boolean
        description: ''
  - name: eventNames()
    uid: azure-iothub.ServiceReceiver.eventNames
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function eventNames()
      return:
        type: Array&lt;string | symbol&gt;
        description: ''
  - name: forceDetach(Error)
    uid: azure-iothub.ServiceReceiver.forceDetach
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function forceDetach(err?: Error)'
      parameters:
        - id: err
          type: Error
          description: ''
  - name: getMaxListeners()
    uid: azure-iothub.ServiceReceiver.getMaxListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getMaxListeners()
      return:
        type: number
        description: ''
  - name: 'listenerCount(EventEmitter, string | symbol)'
    uid: azure-iothub.ServiceReceiver.listenerCount
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: since v4.0.0
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type: EventEmitter
          description: ''
        - id: event
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listenerCount(string | symbol)
    uid: azure-iothub.ServiceReceiver.listenerCount
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listenerCount(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listeners(string | symbol)
    uid: azure-iothub.ServiceReceiver.listeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: 'off(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.ServiceReceiver.off
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on(EventEmitter, string)'
    uid: azure-iothub.ServiceReceiver.on
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function on(emitter: EventEmitter, event: string)'
      parameters:
        - id: emitter
          type: EventEmitter
          description: ''
        - id: event
          type: string
          description: ''
      return:
        type: AsyncIterableIterator&lt;any&gt;
        description: ''
  - name: 'on(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.ServiceReceiver.on
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once(NodeEventTarget, string | symbol)'
    uid: azure-iothub.ServiceReceiver.once
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function once(emitter: NodeEventTarget, event: string | symbol)'
      parameters:
        - id: emitter
          type: NodeEventTarget
          description: ''
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Promise&lt;any[]&gt;'
        description: ''
  - name: 'once(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.ServiceReceiver.once
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.ServiceReceiver.prependListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.ServiceReceiver.prependOnceListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: rawListeners(string | symbol)
    uid: azure-iothub.ServiceReceiver.rawListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: reject(Message)
    uid: azure-iothub.ServiceReceiver.reject_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type: Message
          description: ''
      return:
        type: Promise&lt;MessageRejected&gt;
        description: ''
  - name: 'reject(Message, Callback<MessageRejected>)'
    uid: azure-iothub.ServiceReceiver.reject
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function reject(message: Message, done: Callback<MessageRejected>)'
      parameters:
        - id: message
          type: Message
          description: ''
        - id: done
          type: Callback&lt;MessageRejected&gt;
          description: ''
  - name: removeAllListeners(string | symbol)
    uid: azure-iothub.ServiceReceiver.removeAllListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.ServiceReceiver.removeListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: setMaxListeners(number)
    uid: azure-iothub.ServiceReceiver.setMaxListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type: number
          description: ''
      return:
        type: this
        description: ''
extends: EventEmitter
