### YamlMime:TSType
name: Client
uid: azure-iothub.Client
package: azure-iothub
summary: >
  The IoT Hub service client is used to communicate with devices through an
  Azure IoT hub.

  It lets the SDK user:
    - send cloud-to-device (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected. Only 50 commands can be queued per device.
    - invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)
    - listen for feedback messages sent by devices for previous commands.
    - listen for file upload notifications from devices.
  Users should create new <xref:azure-iothub.Client> instances by calling one of
  the factory methods,

  [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or

  [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature),

  to create an IoT Hub service Client.
fullName: Client
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: captureRejections
    uid: azure-iothub.Client.captureRejections
    package: azure-iothub
    summary: Sets or gets the default captureRejection value for all emitters.
    fullName: captureRejections
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static captureRejections: boolean'
      return:
        type: boolean
        description: ''
  - name: captureRejectionSymbol
    uid: azure-iothub.Client.captureRejectionSymbol
    package: azure-iothub
    summary: ''
    fullName: captureRejectionSymbol
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static captureRejectionSymbol: Object'
      return:
        type: Object
        description: ''
  - name: defaultMaxListeners
    uid: azure-iothub.Client.defaultMaxListeners
    package: azure-iothub
    summary: ''
    fullName: defaultMaxListeners
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type: number
        description: ''
  - name: errorMonitor
    uid: azure-iothub.Client.errorMonitor
    package: azure-iothub
    summary: >
      This symbol shall be used to install a listener for only monitoring
      `'error'`

      events. Listeners installed using this symbol are called before the
      regular

      `'error'` listeners are called.

      Installing a listener using this symbol does not change the behavior once
      an

      `'error'` event is emitted, therefore the process will still crash if no

      regular `'error'` listener is installed.
    fullName: errorMonitor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static errorMonitor: Object'
      return:
        type: Object
        description: ''
methods:
  - name: 'addListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.Client.addListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: close()
    uid: azure-iothub.Client.close_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function close()
      return:
        type: >-
          Promise&lt;<xref uid="azure-iothub.ResultWithIncomingMessage"
          />&lt;Disconnected&gt;&gt;
        description: ''
  - name: close(IncomingMessageCallback<Disconnected>)
    uid: azure-iothub.Client.close
    package: azure-iothub
    summary: Closes the connection to an IoT hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function close(done: IncomingMessageCallback<Disconnected>)'
      parameters:
        - id: done
          type: >-
            <xref uid="azure-iothub.IncomingMessageCallback"
            />&lt;Disconnected&gt;
          description: ''
  - name: 'emit(string | symbol, any[])'
    uid: azure-iothub.Client.emit
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: boolean
        description: ''
  - name: eventNames()
    uid: azure-iothub.Client.eventNames
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function eventNames()
      return:
        type: Array&lt;string | symbol&gt;
        description: ''
  - name: 'fromConnectionString(string, Client.TransportCtor)'
    uid: azure-iothub.Client.fromConnectionString
    package: azure-iothub
    summary: |-
      Creates an IoT Hub service client from the given
                         connection string using the default transport
                         (Amqp) or the one specified in the second argument.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromConnectionString(connStr: string, transportCtor?:
        Client.TransportCtor)
      parameters:
        - id: connStr
          type: string
          description: |-
            A connection string which encapsulates "device
                                             connect" permissions on an IoT hub.
        - id: transportCtor
          type: <xref uid="azure-iothub.Client.TransportCtor" />
          description: ''
      return:
        type: <xref uid="azure-iothub.Client" />
        description: ''
  - name: 'fromSharedAccessSignature(string, Client.TransportCtor)'
    uid: azure-iothub.Client.fromSharedAccessSignature
    package: azure-iothub
    summary: |-
      Creates an IoT Hub service client from the given
                         shared access signature using the default transport
                         (Amqp) or the one specified in the second argument.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromSharedAccessSignature(sharedAccessSignature: string,
        transportCtor?: Client.TransportCtor)
      parameters:
        - id: sharedAccessSignature
          type: string
          description: |-
            A shared access signature which encapsulates
                                       "service connect" permissions on an IoT hub.
        - id: transportCtor
          type: <xref uid="azure-iothub.Client.TransportCtor" />
          description: ''
      return:
        type: <xref uid="azure-iothub.Client" />
        description: ''
  - name: getFeedbackReceiver()
    uid: azure-iothub.Client.getFeedbackReceiver_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getFeedbackReceiver()
      return:
        type: >-
          Promise&lt;<xref uid="azure-iothub.ResultWithIncomingMessage"
          />&lt;<xref uid="azure-iothub.Client.ServiceReceiver" />&gt;&gt;
        description: ''
  - name: getFeedbackReceiver(IncomingMessageCallback<ServiceReceiver>)
    uid: azure-iothub.Client.getFeedbackReceiver
    package: azure-iothub
    summary: >-
      Returns a AmqpReceiver object which emits events when new feedback
      messages are received by the client.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFeedbackReceiver(done:
        IncomingMessageCallback<ServiceReceiver>)
      parameters:
        - id: done
          type: >-
            <xref uid="azure-iothub.IncomingMessageCallback" />&lt;<xref
            uid="azure-iothub.Client.ServiceReceiver" />&gt;
          description: ''
  - name: getFileNotificationReceiver()
    uid: azure-iothub.Client.getFileNotificationReceiver_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getFileNotificationReceiver()
      return:
        type: >-
          Promise&lt;<xref uid="azure-iothub.ResultWithIncomingMessage"
          />&lt;<xref uid="azure-iothub.Client.ServiceReceiver" />&gt;&gt;
        description: ''
  - name: getFileNotificationReceiver(IncomingMessageCallback<ServiceReceiver>)
    uid: azure-iothub.Client.getFileNotificationReceiver
    package: azure-iothub
    summary: >-
      Returns a AmqpReceiver object which emits events when new file upload
      notifications are received by the client.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFileNotificationReceiver(done:
        IncomingMessageCallback<ServiceReceiver>)
      parameters:
        - id: done
          type: >-
            <xref uid="azure-iothub.IncomingMessageCallback" />&lt;<xref
            uid="azure-iothub.Client.ServiceReceiver" />&gt;
          description: ''
  - name: getMaxListeners()
    uid: azure-iothub.Client.getMaxListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getMaxListeners()
      return:
        type: number
        description: ''
  - name: 'invokeDeviceMethod(string, DeviceMethodParams)'
    uid: azure-iothub.Client.invokeDeviceMethod_2
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function invokeDeviceMethod(deviceId: string, methodParams:
        DeviceMethodParams)
      parameters:
        - id: deviceId
          type: string
          description: ''
        - id: methodParams
          type: <xref uid="azure-iothub.DeviceMethodParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-iothub.ResultWithIncomingMessage"
          />&lt;any&gt;&gt;
        description: ''
  - name: >-
      invokeDeviceMethod(string, DeviceMethodParams,
      IncomingMessageCallback<any>)
    uid: azure-iothub.Client.invokeDeviceMethod
    package: azure-iothub
    summary: Invokes a method on a particular device or module.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function invokeDeviceMethod(deviceId: string, methodParams:
        DeviceMethodParams, done: IncomingMessageCallback<any>)
      parameters:
        - id: deviceId
          type: string
          description: The identifier of an existing device identity.
        - id: methodParams
          type: <xref uid="azure-iothub.DeviceMethodParams" />
          description: ''
        - id: done
          type: <xref uid="azure-iothub.IncomingMessageCallback" />&lt;any&gt;
          description: ''
  - name: 'invokeDeviceMethod(string, string, DeviceMethodParams)'
    uid: azure-iothub.Client.invokeDeviceMethod_3
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function invokeDeviceMethod(deviceId: string, moduleId: string,
        methodParams: DeviceMethodParams)
      parameters:
        - id: deviceId
          type: string
          description: ''
        - id: moduleId
          type: string
          description: ''
        - id: methodParams
          type: <xref uid="azure-iothub.DeviceMethodParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-iothub.ResultWithIncomingMessage"
          />&lt;any&gt;&gt;
        description: ''
  - name: >-
      invokeDeviceMethod(string, string, DeviceMethodParams,
      IncomingMessageCallback<any>)
    uid: azure-iothub.Client.invokeDeviceMethod_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function invokeDeviceMethod(deviceId: string, moduleId: string,
        methodParams: DeviceMethodParams, done: IncomingMessageCallback<any>)
      parameters:
        - id: deviceId
          type: string
          description: ''
        - id: moduleId
          type: string
          description: ''
        - id: methodParams
          type: <xref uid="azure-iothub.DeviceMethodParams" />
          description: ''
        - id: done
          type: <xref uid="azure-iothub.IncomingMessageCallback" />&lt;any&gt;
          description: ''
  - name: 'listenerCount(EventEmitter, string | symbol)'
    uid: azure-iothub.Client.listenerCount
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: since v4.0.0
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type: EventEmitter
          description: ''
        - id: event
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listenerCount(string | symbol)
    uid: azure-iothub.Client.listenerCount
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listenerCount(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listeners(string | symbol)
    uid: azure-iothub.Client.listeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: 'off(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.Client.off
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on(EventEmitter, string)'
    uid: azure-iothub.Client.on
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function on(emitter: EventEmitter, event: string)'
      parameters:
        - id: emitter
          type: EventEmitter
          description: ''
        - id: event
          type: string
          description: ''
      return:
        type: AsyncIterableIterator&lt;any&gt;
        description: ''
  - name: 'on(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.Client.on
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once(NodeEventTarget, string | symbol)'
    uid: azure-iothub.Client.once
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function once(emitter: NodeEventTarget, event: string | symbol)'
      parameters:
        - id: emitter
          type: NodeEventTarget
          description: ''
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Promise&lt;any[]&gt;'
        description: ''
  - name: 'once(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.Client.once
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: open()
    uid: azure-iothub.Client.open_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function open()
      return:
        type: >-
          Promise&lt;<xref uid="azure-iothub.ResultWithIncomingMessage"
          />&lt;Connected&gt;&gt;
        description: ''
  - name: open(IncomingMessageCallback<Connected>)
    uid: azure-iothub.Client.open
    package: azure-iothub
    summary: Opens the connection to an IoT hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function open(done: IncomingMessageCallback<Connected>)'
      parameters:
        - id: done
          type: <xref uid="azure-iothub.IncomingMessageCallback" />&lt;Connected&gt;
          description: ''
  - name: 'prependListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.Client.prependListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.Client.prependOnceListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: rawListeners(string | symbol)
    uid: azure-iothub.Client.rawListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: removeAllListeners(string | symbol)
    uid: azure-iothub.Client.removeAllListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener(string | symbol, (args: any[]) => void)'
    uid: azure-iothub.Client.removeListener
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'send(string, Message | Message.BufferConvertible)'
    uid: azure-iothub.Client.send_1
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function send(deviceId: string, message: Message |
        Message.BufferConvertible)
      parameters:
        - id: deviceId
          type: string
          description: ''
        - id: message
          type: Message | <xref uid="Message.BufferConvertible" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-iothub.ResultWithIncomingMessage"
          />&lt;MessageEnqueued&gt;&gt;
        description: ''
  - name: >-
      send(string, Message | Message.BufferConvertible,
      IncomingMessageCallback<MessageEnqueued>)
    uid: azure-iothub.Client.send
    package: azure-iothub
    summary: Sends a message to a device.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function send(deviceId: string, message: Message |
        Message.BufferConvertible, done:
        IncomingMessageCallback<MessageEnqueued>)
      parameters:
        - id: deviceId
          type: string
          description: The identifier of an existing device identity.
        - id: message
          type: Message | <xref uid="Message.BufferConvertible" />
          description: |-
            The body of the message to send to the device.
                                         If `message` is not of type
                                         [Message](xref:azure-iot-common.Message),
                                         it will be converted.
        - id: done
          type: >-
            <xref uid="azure-iothub.IncomingMessageCallback"
            />&lt;MessageEnqueued&gt;
          description: ''
  - name: setMaxListeners(number)
    uid: azure-iothub.Client.setMaxListeners
    package: azure-iothub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type: number
          description: ''
      return:
        type: this
        description: ''
  - name: setRetryPolicy(RetryPolicy)
    uid: azure-iothub.Client.setRetryPolicy
    package: azure-iothub
    summary: Set the policy used by the client to retry network operations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setRetryPolicy(policy: RetryPolicy)'
      parameters:
        - id: policy
          type: RetryPolicy
          description: |
            policy used to retry operations (eg. open, send, etc.).
                          The SDK comes with 2 "built-in" policies: ExponentialBackoffWithJitter (default)
                          and NoRetry (to cancel any form of retry). The user can also pass its own object as
                          long as it implements 2 methods:
                          - shouldRetry(err: Error): boolean : indicates whether an operation should be retried based on the error type
                          - nextRetryTimeout(retryCount: number, throttled: boolean): number : returns the time to wait (in milliseconds)
                          before retrying based on the past number of attempts (retryCount) and the fact that the error is a throttling error or not.
extends: EventEmitter
