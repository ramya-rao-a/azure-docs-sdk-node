### YamlMime:TSType
name: XMLHttpRequestWrapper
uid: azuremediaplayer.amp.XMLHttpRequestWrapper
package: azuremediaplayer
summary: Interface describing a HttpRequest.
fullName: XMLHttpRequestWrapper
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: msCaching
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.msCaching
    package: azuremediaplayer
    summary: ''
    fullName: msCaching
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'msCaching: string'
      return:
        type: string
        description: ''
  - name: onabort
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.onabort
    package: azuremediaplayer
    summary: ''
    fullName: onabort
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onabort: (ev: Event) => any'
      return:
        type: '(ev: Event) =&gt; any'
        description: ''
  - name: onerror
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.onerror
    package: azuremediaplayer
    summary: ''
    fullName: onerror
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onerror: (ev: Event) => any'
      return:
        type: '(ev: Event) =&gt; any'
        description: ''
  - name: onload
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.onload
    package: azuremediaplayer
    summary: ''
    fullName: onload
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onload: (ev: Event) => any'
      return:
        type: '(ev: Event) =&gt; any'
        description: ''
  - name: onloadend
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.onloadend
    package: azuremediaplayer
    summary: ''
    fullName: onloadend
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onloadend: (ev: ProgressEvent) => any'
      return:
        type: '(ev: ProgressEvent) =&gt; any'
        description: ''
  - name: onloadstart
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.onloadstart
    package: azuremediaplayer
    summary: ''
    fullName: onloadstart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onloadstart: (ev: Event) => any'
      return:
        type: '(ev: Event) =&gt; any'
        description: ''
  - name: onprogress
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.onprogress
    package: azuremediaplayer
    summary: ''
    fullName: onprogress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onprogress: (ev: ProgressEvent) => any'
      return:
        type: '(ev: ProgressEvent) =&gt; any'
        description: ''
  - name: onreadystatechange
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.onreadystatechange
    package: azuremediaplayer
    summary: ''
    fullName: onreadystatechange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onreadystatechange: (ev: ProgressEvent) => any'
      return:
        type: '(ev: ProgressEvent) =&gt; any'
        description: ''
  - name: ontimeout
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.ontimeout
    package: azuremediaplayer
    summary: ''
    fullName: ontimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ontimeout: (ev: ProgressEvent) => any'
      return:
        type: '(ev: ProgressEvent) =&gt; any'
        description: ''
  - name: readyState
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.readyState
    package: azuremediaplayer
    summary: ''
    fullName: readyState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readyState: number'
      return:
        type: number
        description: ''
  - name: response
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.response
    package: azuremediaplayer
    summary: ''
    fullName: response
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'response: any'
      return:
        type: any
        description: ''
  - name: responseType
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.responseType
    package: azuremediaplayer
    summary: ''
    fullName: responseType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'responseType: string'
      return:
        type: string
        description: ''
  - name: status
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.status
    package: azuremediaplayer
    summary: ''
    fullName: status
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'status: number'
      return:
        type: number
        description: ''
  - name: statusText
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.statusText
    package: azuremediaplayer
    summary: ''
    fullName: statusText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'statusText: string'
      return:
        type: string
        description: ''
  - name: timeout
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.timeout
    package: azuremediaplayer
    summary: ''
    fullName: timeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeout: number'
      return:
        type: number
        description: ''
methods:
  - name: abort()
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.abort
    package: azuremediaplayer
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function abort()
  - name: getResponseHeader(string)
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.getResponseHeader
    package: azuremediaplayer
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getResponseHeader(header: string)'
      parameters:
        - id: header
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: 'open(string, string, boolean, string, string)'
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.open
    package: azuremediaplayer
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function open(method: string, url: string, async?: boolean, user?:
        string, password?: string)
      parameters:
        - id: method
          type: string
          description: ''
        - id: url
          type: string
          description: ''
        - id: async
          type: boolean
          description: ''
        - id: user
          type: string
          description: ''
        - id: password
          type: string
          description: ''
  - name: send(any)
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.send
    package: azuremediaplayer
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function send(data?: any)'
      parameters:
        - id: data
          type: any
          description: ''
  - name: 'setRequestHeader(string, string)'
    uid: azuremediaplayer.amp.XMLHttpRequestWrapper.setRequestHeader
    package: azuremediaplayer
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setRequestHeader(header: string, value: string)'
      parameters:
        - id: header
          type: string
          description: ''
        - id: value
          type: string
          description: ''
