### YamlMime:TSType
name: RetryOperation
uid: azure-iot-common.RetryOperation
package: azure-iot-common
summary: >-
  Implements the necessary logic to retry operations such as connecting,
  receiving C2D messages, sending telemetry, twin updates, etc.
fullName: RetryOperation
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'RetryOperation(RetryPolicy, number)'
    uid: azure-iot-common.RetryOperation.constructor
    package: azure-iot-common
    summary: 'Creates an instance of <xref:azure-iot-common.RetryOperation.>'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new RetryOperation(policy: RetryPolicy, maxTimeout: number)'
      parameters:
        - id: policy
          type: <xref uid="azure-iot-common.RetryPolicy" />
          description: >-
            The retry policy to be used for this operation, which determines
            what error is "retryable" or not and how fast to retry.
        - id: maxTimeout
          type: number
          description: >
            The maximum timeout for this operation, after which no retry will be
            attempted.
methods:
  - name: >-
      retry((opCallback: (err?: Error, result?: any, response?: any) => void) =>
      void, (err?: Error, result?: any, response?: any) => void)
    uid: azure-iot-common.RetryOperation.retry
    package: azure-iot-common
    summary: >-
      Executes an operation and retries if it fails and the retry policy allows
      it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function retry(operation: (opCallback: (err?: Error, result?: any,
        response?: any) => void) => void, finalCallback: (err?: Error, result?:
        any, response?: any) => void)
      parameters:
        - id: operation
          type: >-
            (opCallback: (err?: Error, result?: any, response?: any) =&gt; void)
            =&gt; void
          description: The operation to execute.
        - id: finalCallback
          type: '(err?: Error, result?: any, response?: any) =&gt; void'
          description: >
            The callback to call with the final error or result, after retries
            if necessary.
