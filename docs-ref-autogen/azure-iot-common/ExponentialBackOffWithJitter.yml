### YamlMime:TSType
name: ExponentialBackOffWithJitter
uid: azure-iot-common.ExponentialBackOffWithJitter
package: azure-iot-common
summary: >-
  Implements an Exponential Backoff with Jitter retry strategy.

  The function to calculate the next interval is the following (x is the xth
  retry):

  F(x) = min(Cmin+ (2^(x-1)-1) * rand(C * (1 â€“ Jd), C*(1-Ju)), Cmax)
fullName: ExponentialBackOffWithJitter
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'ExponentialBackOffWithJitter(boolean, ErrorFilter)'
    uid: azure-iot-common.ExponentialBackOffWithJitter.constructor
    package: azure-iot-common
    summary: >-
      Initializes a new instance of the
      <xref:azure-iot-common.ExponentialBackOffWithJitter> class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ExponentialBackOffWithJitter(immediateFirstRetry?: boolean,
        errorFilter?: ErrorFilter)
      parameters:
        - id: immediateFirstRetry
          type: boolean
          description: >
            boolean indicating whether the first retry should be immediate
            (default) or wait the first interval (c value).
        - id: errorFilter
          type: ErrorFilter
          description: ''
properties:
  - name: immediateFirstRetry
    uid: azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
    package: azure-iot-common
    summary: >-
      Boolean indicating whether the first retry should be immediate (if set to
      true) or after the normalParameters.c delay (if set to false).
    fullName: immediateFirstRetry
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'immediateFirstRetry: boolean'
      return:
        type: boolean
        description: ''
  - name: normalParameters
    uid: azure-iot-common.ExponentialBackOffWithJitter.normalParameters
    package: azure-iot-common
    summary: >-
      Retry parameters used to calculate the delay between each retry in normal
      situations (ie. not throttled).
    fullName: normalParameters
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'normalParameters: ExponentialBackoffWithJitterParameters'
      return:
        type: <xref uid="azure-iot-common.ExponentialBackoffWithJitterParameters" />
        description: ''
  - name: throttledParameters
    uid: azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
    package: azure-iot-common
    summary: >-
      Retry parameters used to calculate the delay between each retry in
      throttled situations.
    fullName: throttledParameters
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'throttledParameters: ExponentialBackoffWithJitterParameters'
      return:
        type: <xref uid="azure-iot-common.ExponentialBackoffWithJitterParameters" />
        description: ''
methods:
  - name: 'nextRetryTimeout(number, boolean)'
    uid: azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
    package: azure-iot-common
    summary: Computes the interval to wait before retrying at each new retry tentative.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function nextRetryTimeout(retryCount: number, isThrottled: boolean)'
      parameters:
        - id: retryCount
          type: number
          description: Current retry tentative.
        - id: isThrottled
          type: boolean
          description: >-
            Boolean indicating whether the Azure IoT hub is throttling
            operations.
      return:
        type: number
        description: The time to wait before attempting a retry in milliseconds.
  - name: shouldRetry(Error)
    uid: azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
    package: azure-iot-common
    summary: >-
      Based on the error passed as argument, determines if an error is transient
      and if the operation should be retried or not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function shouldRetry(error: Error)'
      parameters:
        - id: error
          type: Error
          description: The error encountered by the operation.
      return:
        type: boolean
        description: Whether the operation should be retried or not.
