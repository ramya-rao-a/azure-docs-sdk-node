### YamlMime:TSType
name: RoleDefinitions
uid: '@azure/arm-authorization.RoleDefinitions'
package: '@azure/arm-authorization'
summary: Class representing a RoleDefinitions.
fullName: RoleDefinitions
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: RoleDefinitions(AuthorizationManagementClientContext)
    uid: '@azure/arm-authorization.RoleDefinitions.constructor'
    package: '@azure/arm-authorization'
    summary: Create a RoleDefinitions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new RoleDefinitions(client: AuthorizationManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-authorization.AuthorizationManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'createOrUpdate(string, string, RoleDefinition, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleDefinitions.createOrUpdate'
    package: '@azure/arm-authorization'
    summary: Creates or updates a role definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, roleDefinitionId: string,
        roleDefinition: RoleDefinition, options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition.
        - id: roleDefinition
          type: <xref uid="@azure/arm-authorization.RoleDefinition" />
          description: The values for the role definition.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.RoleDefinitionsCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.RoleDefinitionsCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, RoleDefinition, RequestOptionsBase,
      ServiceCallback<RoleDefinition>)
    uid: '@azure/arm-authorization.RoleDefinitions.createOrUpdate_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, roleDefinitionId: string,
        roleDefinition: RoleDefinition, options: RequestOptionsBase, callback:
        ServiceCallback<RoleDefinition>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition.
        - id: roleDefinition
          type: <xref uid="@azure/arm-authorization.RoleDefinition" />
          description: The values for the role definition.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, RoleDefinition,
      ServiceCallback<RoleDefinition>)
    uid: '@azure/arm-authorization.RoleDefinitions.createOrUpdate_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, roleDefinitionId: string,
        roleDefinition: RoleDefinition, callback:
        ServiceCallback<RoleDefinition>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition.
        - id: roleDefinition
          type: <xref uid="@azure/arm-authorization.RoleDefinition" />
          description: The values for the role definition.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleDefinitions.deleteMethod'
    package: '@azure/arm-authorization'
    summary: Deletes a role definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, roleDefinitionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.RoleDefinitionsDeleteMethodResponse"
          />&gt;
        description: Promise<Models.RoleDefinitionsDeleteMethodResponse>
  - name: >-
      deleteMethod(string, string, RequestOptionsBase,
      ServiceCallback<RoleDefinition>)
    uid: '@azure/arm-authorization.RoleDefinitions.deleteMethod_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, roleDefinitionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleDefinition>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, ServiceCallback<RoleDefinition>)'
    uid: '@azure/arm-authorization.RoleDefinitions.deleteMethod_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, roleDefinitionId: string, callback:
        ServiceCallback<RoleDefinition>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition to delete.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleDefinitions.get'
    package: '@azure/arm-authorization'
    summary: Get role definition by name (GUID).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, roleDefinitionId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RoleDefinitionsGetResponse" />&gt;
        description: Promise<Models.RoleDefinitionsGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<RoleDefinition>)'
    uid: '@azure/arm-authorization.RoleDefinitions.get_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, roleDefinitionId: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleDefinition>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<RoleDefinition>)'
    uid: '@azure/arm-authorization.RoleDefinitions.get_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, roleDefinitionId: string, callback:
        ServiceCallback<RoleDefinition>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: roleDefinitionId
          type: string
          description: The ID of the role definition.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: 'getById(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleDefinitions.getById'
    package: '@azure/arm-authorization'
    summary: Gets a role definition by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getById(roleId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: roleId
          type: string
          description: >-
            The fully qualified role definition ID. Use the format,

            /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            for

            subscription level role definitions, or

            /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            for tenant level role

            definitions.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RoleDefinitionsGetByIdResponse" />&gt;
        description: Promise<Models.RoleDefinitionsGetByIdResponse>
  - name: 'getById(string, RequestOptionsBase, ServiceCallback<RoleDefinition>)'
    uid: '@azure/arm-authorization.RoleDefinitions.getById_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(roleId: string, options: RequestOptionsBase, callback:
        ServiceCallback<RoleDefinition>)
      parameters:
        - id: roleId
          type: string
          description: >-
            The fully qualified role definition ID. Use the format,

            /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            for

            subscription level role definitions, or

            /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            for tenant level role

            definitions.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: 'getById(string, ServiceCallback<RoleDefinition>)'
    uid: '@azure/arm-authorization.RoleDefinitions.getById_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(roleId: string, callback:
        ServiceCallback<RoleDefinition>)
      parameters:
        - id: roleId
          type: string
          description: >-
            The fully qualified role definition ID. Use the format,

            /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            for

            subscription level role definitions, or

            /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            for tenant level role

            definitions.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinition" />&gt;
          description: |
            The callback
  - name: 'list(string, Models.RoleDefinitionsListOptionalParams)'
    uid: '@azure/arm-authorization.RoleDefinitions.list'
    package: '@azure/arm-authorization'
    summary: Get all role definitions that are applicable at scope and above.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(scope: string, options?:
        Models.RoleDefinitionsListOptionalParams)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: options
          type: <xref uid="Models.RoleDefinitionsListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RoleDefinitionsListResponse" />&gt;
        description: Promise<Models.RoleDefinitionsListResponse>
  - name: >-
      list(string, RoleDefinitionsListOptionalParams,
      ServiceCallback<RoleDefinitionListResult>)
    uid: '@azure/arm-authorization.RoleDefinitions.list_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(scope: string, options: RoleDefinitionsListOptionalParams,
        callback: ServiceCallback<RoleDefinitionListResult>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.RoleDefinitionsListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinitionListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, ServiceCallback<RoleDefinitionListResult>)'
    uid: '@azure/arm-authorization.RoleDefinitions.list_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(scope: string, callback:
        ServiceCallback<RoleDefinitionListResult>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role definition.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinitionListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleDefinitions.listNext'
    package: '@azure/arm-authorization'
    summary: Get all role definitions that are applicable at scope and above.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RoleDefinitionsListNextResponse" />&gt;
        description: Promise<Models.RoleDefinitionsListNextResponse>
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<RoleDefinitionListResult>)
    uid: '@azure/arm-authorization.RoleDefinitions.listNext_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<RoleDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinitionListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<RoleDefinitionListResult>)'
    uid: '@azure/arm-authorization.RoleDefinitions.listNext_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RoleDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleDefinitionListResult" />&gt;
          description: |
            The callback
