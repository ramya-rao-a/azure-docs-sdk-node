### YamlMime:TSType
name: Redis
uid: '@azure/arm-rediscache.Redis'
package: '@azure/arm-rediscache'
summary: Class representing a Redis.
fullName: Redis
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Redis(RedisManagementClientContext)
    uid: '@azure/arm-rediscache.Redis.constructor'
    package: '@azure/arm-rediscache'
    summary: Create a Redis.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Redis(client: RedisManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-rediscache.RedisManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreate(string, string, RedisCreateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.beginCreate'
    package: '@azure/arm-rediscache'
    summary: >-
      Create or replace (overwrite/recreate, with potential downtime) an
      existing Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, name: string,
        parameters: RedisCreateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisCreateParameters" />
          description: Parameters supplied to the Create Redis operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.beginDeleteMethod'
    package: '@azure/arm-rediscache'
    summary: Deletes a Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginExportData(string, string, ExportRDBParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.beginExportData'
    package: '@azure/arm-rediscache'
    summary: Export data from the redis cache to blobs in a container.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginExportData(resourceGroupName: string, name: string,
        parameters: ExportRDBParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ExportRDBParameters" />
          description: Parameters for Redis export operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginImportData(string, string, ImportRDBParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.beginImportData'
    package: '@azure/arm-rediscache'
    summary: Import data into Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginImportData(resourceGroupName: string, name: string,
        parameters: ImportRDBParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ImportRDBParameters" />
          description: Parameters for Redis import operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      checkNameAvailability(CheckNameAvailabilityParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.checkNameAvailability'
    package: '@azure/arm-rediscache'
    summary: Checks that the redis cache name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.CheckNameAvailabilityParameters" />
          description: >-
            Parameters supplied to the CheckNameAvailability Redis operation.
            The only

            supported resource type is 'Microsoft.Cache/redis'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      checkNameAvailability(CheckNameAvailabilityParameters, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-rediscache.Redis.checkNameAvailability_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameters, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.CheckNameAvailabilityParameters" />
          description: >-
            Parameters supplied to the CheckNameAvailability Redis operation.
            The only

            supported resource type is 'Microsoft.Cache/redis'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      checkNameAvailability(CheckNameAvailabilityParameters,
      ServiceCallback<void>)
    uid: '@azure/arm-rediscache.Redis.checkNameAvailability_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameters, callback: ServiceCallback<void>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.CheckNameAvailabilityParameters" />
          description: >-
            Parameters supplied to the CheckNameAvailability Redis operation.
            The only

            supported resource type is 'Microsoft.Cache/redis'
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'create(string, string, RedisCreateParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.create'
    package: '@azure/arm-rediscache'
    summary: >-
      Create or replace (overwrite/recreate, with potential downtime) an
      existing Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, name: string, parameters:
        RedisCreateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisCreateParameters" />
          description: Parameters supplied to the Create Redis operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisCreateResponse" />&gt;
        description: Promise<Models.RedisCreateResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.deleteMethod'
    package: '@azure/arm-rediscache'
    summary: Deletes a Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'exportData(string, string, ExportRDBParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.exportData'
    package: '@azure/arm-rediscache'
    summary: Export data from the redis cache to blobs in a container.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportData(resourceGroupName: string, name: string, parameters:
        ExportRDBParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ExportRDBParameters" />
          description: Parameters for Redis export operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      forceReboot(string, string, RedisRebootParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.forceReboot'
    package: '@azure/arm-rediscache'
    summary: >-
      Reboot specified Redis node(s). This operation requires write permission
      to the cache resource.

      There can be potential data loss.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forceReboot(resourceGroupName: string, name: string,
        parameters: RedisRebootParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisRebootParameters" />
          description: Specifies which Redis node(s) to reboot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisForceRebootResponse2" />&gt;
        description: Promise<Models.RedisForceRebootResponse2>
  - name: >-
      forceReboot(string, string, RedisRebootParameters, RequestOptionsBase,
      ServiceCallback<RedisForceRebootResponse>)
    uid: '@azure/arm-rediscache.Redis.forceReboot_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forceReboot(resourceGroupName: string, name: string,
        parameters: RedisRebootParameters, options: RequestOptionsBase,
        callback: ServiceCallback<RedisForceRebootResponse>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisRebootParameters" />
          description: Specifies which Redis node(s) to reboot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-rediscache.RedisForceRebootResponse" />&gt;
          description: |
            The callback
  - name: >-
      forceReboot(string, string, RedisRebootParameters,
      ServiceCallback<RedisForceRebootResponse>)
    uid: '@azure/arm-rediscache.Redis.forceReboot_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forceReboot(resourceGroupName: string, name: string,
        parameters: RedisRebootParameters, callback:
        ServiceCallback<RedisForceRebootResponse>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisRebootParameters" />
          description: Specifies which Redis node(s) to reboot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-rediscache.RedisForceRebootResponse" />&gt;
          description: |
            The callback
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.get'
    package: '@azure/arm-rediscache'
    summary: Gets a Redis cache (resource description).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisGetResponse" />&gt;
        description: Promise<Models.RedisGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<RedisResource>)'
    uid: '@azure/arm-rediscache.Redis.get_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<RedisResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisResource"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<RedisResource>)'
    uid: '@azure/arm-rediscache.Redis.get_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, callback:
        ServiceCallback<RedisResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisResource"
            />&gt;
          description: |
            The callback
  - name: 'importData(string, string, ImportRDBParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.importData'
    package: '@azure/arm-rediscache'
    summary: Import data into Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importData(resourceGroupName: string, name: string, parameters:
        ImportRDBParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ImportRDBParameters" />
          description: Parameters for Redis import operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.list'
    package: '@azure/arm-rediscache'
    summary: Gets all Redis caches in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisListResponse" />&gt;
        description: Promise<Models.RedisListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<RedisListResult>)'
    uid: '@azure/arm-rediscache.Redis.list_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<RedisListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<RedisListResult>)
    uid: '@azure/arm-rediscache.Redis.list_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.listByResourceGroup'
    package: '@azure/arm-rediscache'
    summary: Lists all Redis caches in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisListByResourceGroupResponse" />&gt;
        description: Promise<Models.RedisListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<RedisListResult>)
    uid: '@azure/arm-rediscache.Redis.listByResourceGroup_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<RedisListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<RedisListResult>)'
    uid: '@azure/arm-rediscache.Redis.listByResourceGroup_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<RedisListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.listByResourceGroupNext'
    package: '@azure/arm-rediscache'
    summary: Lists all Redis caches in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.RedisListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.RedisListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<RedisListResult>)
    uid: '@azure/arm-rediscache.Redis.listByResourceGroupNext_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RedisListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<RedisListResult>)'
    uid: '@azure/arm-rediscache.Redis.listByResourceGroupNext_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<RedisListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.listKeys'
    package: '@azure/arm-rediscache'
    summary: >-
      Retrieve a Redis cache's access keys. This operation requires write
      permission to the cache

      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisListKeysResponse" />&gt;
        description: Promise<Models.RedisListKeysResponse>
  - name: >-
      listKeys(string, string, RequestOptionsBase,
      ServiceCallback<RedisAccessKeys>)
    uid: '@azure/arm-rediscache.Redis.listKeys_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<RedisAccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisAccessKeys"
            />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, ServiceCallback<RedisAccessKeys>)'
    uid: '@azure/arm-rediscache.Redis.listKeys_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, name: string, callback:
        ServiceCallback<RedisAccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisAccessKeys"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.listNext'
    package: '@azure/arm-rediscache'
    summary: Gets all Redis caches in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisListNextResponse" />&gt;
        description: Promise<Models.RedisListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<RedisListResult>)'
    uid: '@azure/arm-rediscache.Redis.listNext_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<RedisListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<RedisListResult>)'
    uid: '@azure/arm-rediscache.Redis.listNext_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RedisListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listUpgradeNotifications(string, string, number,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.listUpgradeNotifications'
    package: '@azure/arm-rediscache'
    summary: Gets any upgrade notifications for a Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUpgradeNotifications(resourceGroupName: string, name:
        string, history: number, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: history
          type: number
          description: how many minutes in past to look for upgrade notifications
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.RedisListUpgradeNotificationsResponse"
          />&gt;
        description: Promise<Models.RedisListUpgradeNotificationsResponse>
  - name: >-
      listUpgradeNotifications(string, string, number, RequestOptionsBase,
      ServiceCallback<NotificationListResponse>)
    uid: '@azure/arm-rediscache.Redis.listUpgradeNotifications_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUpgradeNotifications(resourceGroupName: string, name:
        string, history: number, options: RequestOptionsBase, callback:
        ServiceCallback<NotificationListResponse>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: history
          type: number
          description: how many minutes in past to look for upgrade notifications
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-rediscache.NotificationListResponse" />&gt;
          description: |
            The callback
  - name: >-
      listUpgradeNotifications(string, string, number,
      ServiceCallback<NotificationListResponse>)
    uid: '@azure/arm-rediscache.Redis.listUpgradeNotifications_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUpgradeNotifications(resourceGroupName: string, name:
        string, history: number, callback:
        ServiceCallback<NotificationListResponse>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: history
          type: number
          description: how many minutes in past to look for upgrade notifications
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-rediscache.NotificationListResponse" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKey(string, string, Models.RedisKeyType,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-rediscache.Redis.regenerateKey'
    package: '@azure/arm-rediscache'
    summary: >-
      Regenerate Redis cache's access keys. This operation requires write
      permission to the cache

      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, name: string, keyType:
        Models.RedisKeyType, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: keyType
          type: <xref uid="Models.RedisKeyType" />
          description: >-
            The Redis access key to regenerate. Possible values include:
            'Primary',

            'Secondary'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisRegenerateKeyResponse" />&gt;
        description: Promise<Models.RedisRegenerateKeyResponse>
  - name: >-
      regenerateKey(string, string, Models.RedisKeyType, RequestOptionsBase,
      ServiceCallback<RedisAccessKeys>)
    uid: '@azure/arm-rediscache.Redis.regenerateKey_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, name: string, keyType:
        Models.RedisKeyType, options: RequestOptionsBase, callback:
        ServiceCallback<RedisAccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: keyType
          type: <xref uid="Models.RedisKeyType" />
          description: >-
            The Redis access key to regenerate. Possible values include:
            'Primary',

            'Secondary'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisAccessKeys"
            />&gt;
          description: |
            The callback
  - name: >-
      regenerateKey(string, string, Models.RedisKeyType,
      ServiceCallback<RedisAccessKeys>)
    uid: '@azure/arm-rediscache.Redis.regenerateKey_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, name: string, keyType:
        Models.RedisKeyType, callback: ServiceCallback<RedisAccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: keyType
          type: <xref uid="Models.RedisKeyType" />
          description: >-
            The Redis access key to regenerate. Possible values include:
            'Primary',

            'Secondary'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisAccessKeys"
            />&gt;
          description: |
            The callback
  - name: 'update(string, string, RedisUpdateParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-rediscache.Redis.update'
    package: '@azure/arm-rediscache'
    summary: Update an existing Redis cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, parameters:
        RedisUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisUpdateParameters" />
          description: Parameters supplied to the Update Redis operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisUpdateResponse" />&gt;
        description: Promise<Models.RedisUpdateResponse>
  - name: >-
      update(string, string, RedisUpdateParameters, RequestOptionsBase,
      ServiceCallback<RedisResource>)
    uid: '@azure/arm-rediscache.Redis.update_2'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, parameters:
        RedisUpdateParameters, options: RequestOptionsBase, callback:
        ServiceCallback<RedisResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisUpdateParameters" />
          description: Parameters supplied to the Update Redis operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisResource"
            />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, RedisUpdateParameters,
      ServiceCallback<RedisResource>)
    uid: '@azure/arm-rediscache.Redis.update_1'
    package: '@azure/arm-rediscache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, parameters:
        RedisUpdateParameters, callback: ServiceCallback<RedisResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisUpdateParameters" />
          description: Parameters supplied to the Update Redis operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-rediscache.RedisResource"
            />&gt;
          description: |
            The callback
