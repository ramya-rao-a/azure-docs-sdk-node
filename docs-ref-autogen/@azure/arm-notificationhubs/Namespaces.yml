### YamlMime:TSType
name: Namespaces
uid: '@azure/arm-notificationhubs.Namespaces'
package: '@azure/arm-notificationhubs'
summary: Class representing a Namespaces.
fullName: Namespaces
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Namespaces(NotificationHubsManagementClientContext)
    uid: '@azure/arm-notificationhubs.Namespaces.constructor'
    package: '@azure/arm-notificationhubs'
    summary: Create a Namespaces.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Namespaces(client: NotificationHubsManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-notificationhubs.NotificationHubsManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.beginDeleteMethod'
    package: '@azure/arm-notificationhubs'
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      notificationHubs under

      the namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, namespaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'checkAvailability(CheckAvailabilityParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.checkAvailability'
    package: '@azure/arm-notificationhubs'
    summary: >-
      Checks the availability of the given service namespace across all Azure
      subscriptions. This is

      useful because the domain name is created based on the service namespace
      name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkAvailability(parameters: CheckAvailabilityParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type: >-
            <xref uid="@azure/arm-notificationhubs.CheckAvailabilityParameters"
            />
          description: The namespace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NamespacesCheckAvailabilityResponse"
          />&gt;
        description: Promise<Models.NamespacesCheckAvailabilityResponse>
  - name: >-
      checkAvailability(CheckAvailabilityParameters, RequestOptionsBase,
      ServiceCallback<CheckAvailabilityResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.checkAvailability_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkAvailability(parameters: CheckAvailabilityParameters,
        options: RequestOptionsBase, callback:
        ServiceCallback<CheckAvailabilityResult>)
      parameters:
        - id: parameters
          type: >-
            <xref uid="@azure/arm-notificationhubs.CheckAvailabilityParameters"
            />
          description: The namespace name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.CheckAvailabilityResult" />&gt;
          description: |
            The callback
  - name: >-
      checkAvailability(CheckAvailabilityParameters,
      ServiceCallback<CheckAvailabilityResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.checkAvailability_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkAvailability(parameters: CheckAvailabilityParameters,
        callback: ServiceCallback<CheckAvailabilityResult>)
      parameters:
        - id: parameters
          type: >-
            <xref uid="@azure/arm-notificationhubs.CheckAvailabilityParameters"
            />
          description: The namespace name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.CheckAvailabilityResult" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, NamespaceCreateOrUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdate'
    package: '@azure/arm-notificationhubs'
    summary: >-
      Creates/Updates a service namespace. Once created, this namespace's
      resource manifest is

      immutable. This operation is idempotent.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: NamespaceCreateOrUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters"
            />
          description: Parameters supplied to create a Namespace Resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesCreateOrUpdateResponse" />&gt;
        description: Promise<Models.NamespacesCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, NamespaceCreateOrUpdateParameters,
      RequestOptionsBase, ServiceCallback<NamespaceResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdate_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: NamespaceCreateOrUpdateParameters, options:
        RequestOptionsBase, callback: ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters"
            />
          description: Parameters supplied to create a Namespace Resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceResource" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, NamespaceCreateOrUpdateParameters,
      ServiceCallback<NamespaceResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdate_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, parameters: NamespaceCreateOrUpdateParameters, callback:
        ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-notificationhubs.NamespaceCreateOrUpdateParameters"
            />
          description: Parameters supplied to create a Namespace Resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceResource" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string,
      SharedAccessAuthorizationRuleCreateOrUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule'
    package: '@azure/arm-notificationhubs'
    summary: Creates an authorization rule for a namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SharedAccessAuthorizationRuleCreateOrUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: Aauthorization Rule Name.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            />
          description: The shared access authorization rule.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NamespacesCreateOrUpdateAuthorizationRuleResponse" />&gt;
        description: Promise<Models.NamespacesCreateOrUpdateAuthorizationRuleResponse>
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string,
      SharedAccessAuthorizationRuleCreateOrUpdateParameters, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SharedAccessAuthorizationRuleCreateOrUpdateParameters, options:
        RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: Aauthorization Rule Name.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            />
          description: The shared access authorization rule.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string,
      SharedAccessAuthorizationRuleCreateOrUpdateParameters,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.createOrUpdateAuthorizationRule_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, parameters:
        SharedAccessAuthorizationRuleCreateOrUpdateParameters, callback:
        ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: Aauthorization Rule Name.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            />
          description: The shared access authorization rule.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource"
            />&gt;
          description: |
            The callback
  - name: 'deleteAuthorizationRule(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule'
    package: '@azure/arm-notificationhubs'
    summary: Deletes a namespace authorization rule
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: Authorization Rule Name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: Authorization Rule Name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteAuthorizationRule(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-notificationhubs.Namespaces.deleteAuthorizationRule_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, authorizationRuleName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: Authorization Rule Name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.deleteMethod'
    package: '@azure/arm-notificationhubs'
    summary: >-
      Deletes an existing namespace. This operation also removes all associated
      notificationHubs under

      the namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.get'
    package: '@azure/arm-notificationhubs'
    summary: Returns the description for the specified namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesGetResponse" />&gt;
        description: Promise<Models.NamespacesGetResponse>
  - name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<NamespaceResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.get_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceResource" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<NamespaceResource>)'
    uid: '@azure/arm-notificationhubs.Namespaces.get_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, callback:
        ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceResource" />&gt;
          description: |
            The callback
  - name: 'getAuthorizationRule(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule'
    package: '@azure/arm-notificationhubs'
    summary: Gets an authorization rule for a namespace by name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name
        - id: authorizationRuleName
          type: string
          description: Authorization rule name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NamespacesGetAuthorizationRuleResponse"
          />&gt;
        description: Promise<Models.NamespacesGetAuthorizationRuleResponse>
  - name: >-
      getAuthorizationRule(string, string, string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, options: RequestOptionsBase,
        callback: ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name
        - id: authorizationRuleName
          type: string
          description: Authorization rule name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource"
            />&gt;
          description: |
            The callback
  - name: >-
      getAuthorizationRule(string, string, string,
      ServiceCallback<SharedAccessAuthorizationRuleResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.getAuthorizationRule_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name
        - id: authorizationRuleName
          type: string
          description: Authorization rule name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleResource"
            />&gt;
          description: |
            The callback
  - name: 'list(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.list'
    package: '@azure/arm-notificationhubs'
    summary: Lists the available namespaces within a resourceGroup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group. If resourceGroupName value is null
            the

            method lists all the namespaces within subscription
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesListResponse" />&gt;
        description: Promise<Models.NamespacesListResponse>
  - name: 'list(string, RequestOptionsBase, ServiceCallback<NamespaceListResult>)'
    uid: '@azure/arm-notificationhubs.Namespaces.list_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group. If resourceGroupName value is null
            the

            method lists all the namespaces within subscription
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, ServiceCallback<NamespaceListResult>)'
    uid: '@azure/arm-notificationhubs.Namespaces.list_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group. If resourceGroupName value is null
            the

            method lists all the namespaces within subscription
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: listAll(msRest.RequestOptionsBase)
    uid: '@azure/arm-notificationhubs.Namespaces.listAll'
    package: '@azure/arm-notificationhubs'
    summary: >-
      Lists all the available namespaces within the subscription irrespective of
      the resourceGroups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesListAllResponse" />&gt;
        description: Promise<Models.NamespacesListAllResponse>
  - name: 'listAll(RequestOptionsBase, ServiceCallback<NamespaceListResult>)'
    uid: '@azure/arm-notificationhubs.Namespaces.listAll_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: listAll(ServiceCallback<NamespaceListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listAll_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listAll(callback: ServiceCallback<NamespaceListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: 'listAllNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.listAllNext'
    package: '@azure/arm-notificationhubs'
    summary: >-
      Lists all the available namespaces within the subscription irrespective of
      the resourceGroups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesListAllNextResponse" />&gt;
        description: Promise<Models.NamespacesListAllNextResponse>
  - name: >-
      listAllNext(string, RequestOptionsBase,
      ServiceCallback<NamespaceListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listAllNext_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: 'listAllNext(string, ServiceCallback<NamespaceListResult>)'
    uid: '@azure/arm-notificationhubs.Namespaces.listAllNext_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: 'listAuthorizationRules(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules'
    package: '@azure/arm-notificationhubs'
    summary: Gets the authorization rules for a namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NamespacesListAuthorizationRulesResponse"
          />&gt;
        description: Promise<Models.NamespacesListAuthorizationRulesResponse>
  - name: >-
      listAuthorizationRules(string, string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listAuthorizationRules(string, string,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRules_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult"
            />&gt;
          description: |
            The callback
  - name: 'listAuthorizationRulesNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext'
    package: '@azure/arm-notificationhubs'
    summary: Gets the authorization rules for a namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NamespacesListAuthorizationRulesNextResponse" />&gt;
        description: Promise<Models.NamespacesListAuthorizationRulesNextResponse>
  - name: >-
      listAuthorizationRulesNext(string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listAuthorizationRulesNext_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult"
            />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.listKeys'
    package: '@azure/arm-notificationhubs'
    summary: Gets the Primary and Secondary ConnectionStrings to the namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesListKeysResponse" />&gt;
        description: Promise<Models.NamespacesListKeysResponse>
  - name: >-
      listKeys(string, string, string, RequestOptionsBase,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listKeys_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, options: RequestOptionsBase, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listKeys(string, string, string,
      ServiceCallback<SharedAccessAuthorizationRuleListResult>)
    uid: '@azure/arm-notificationhubs.Namespaces.listKeys_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        authorizationRuleName: string, callback:
        ServiceCallback<SharedAccessAuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.SharedAccessAuthorizationRuleListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.listNext'
    package: '@azure/arm-notificationhubs'
    summary: Lists the available namespaces within a resourceGroup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesListNextResponse" />&gt;
        description: Promise<Models.NamespacesListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<NamespaceListResult>)'
    uid: '@azure/arm-notificationhubs.Namespaces.listNext_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<NamespaceListResult>)'
    uid: '@azure/arm-notificationhubs.Namespaces.listNext_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<NamespaceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceListResult" />&gt;
          description: |
            The callback
  - name: 'patch(string, string, NamespacePatchParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-notificationhubs.Namespaces.patch'
    package: '@azure/arm-notificationhubs'
    summary: Patches the existing namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(resourceGroupName: string, namespaceName: string,
        parameters: NamespacePatchParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: parameters
          type: <xref uid="@azure/arm-notificationhubs.NamespacePatchParameters" />
          description: Parameters supplied to patch a Namespace Resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesPatchResponse" />&gt;
        description: Promise<Models.NamespacesPatchResponse>
  - name: >-
      patch(string, string, NamespacePatchParameters, RequestOptionsBase,
      ServiceCallback<NamespaceResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.patch_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(resourceGroupName: string, namespaceName: string,
        parameters: NamespacePatchParameters, options: RequestOptionsBase,
        callback: ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: parameters
          type: <xref uid="@azure/arm-notificationhubs.NamespacePatchParameters" />
          description: Parameters supplied to patch a Namespace Resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceResource" />&gt;
          description: |
            The callback
  - name: >-
      patch(string, string, NamespacePatchParameters,
      ServiceCallback<NamespaceResource>)
    uid: '@azure/arm-notificationhubs.Namespaces.patch_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(resourceGroupName: string, namespaceName: string,
        parameters: NamespacePatchParameters, callback:
        ServiceCallback<NamespaceResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: parameters
          type: <xref uid="@azure/arm-notificationhubs.NamespacePatchParameters" />
          description: Parameters supplied to patch a Namespace Resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.NamespaceResource" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, string, PolicykeyResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-notificationhubs.Namespaces.regenerateKeys'
    package: '@azure/arm-notificationhubs'
    summary: Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters: PolicykeyResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: parameters
          type: <xref uid="@azure/arm-notificationhubs.PolicykeyResource" />
          description: >-
            Parameters supplied to regenerate the Namespace Authorization Rule
            Key.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NamespacesRegenerateKeysResponse" />&gt;
        description: Promise<Models.NamespacesRegenerateKeysResponse>
  - name: >-
      regenerateKeys(string, string, string, PolicykeyResource,
      RequestOptionsBase, ServiceCallback<ResourceListKeys>)
    uid: '@azure/arm-notificationhubs.Namespaces.regenerateKeys_2'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters: PolicykeyResource,
        options: RequestOptionsBase, callback:
        ServiceCallback<ResourceListKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: parameters
          type: <xref uid="@azure/arm-notificationhubs.PolicykeyResource" />
          description: >-
            Parameters supplied to regenerate the Namespace Authorization Rule
            Key.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.ResourceListKeys" />&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, string, PolicykeyResource,
      ServiceCallback<ResourceListKeys>)
    uid: '@azure/arm-notificationhubs.Namespaces.regenerateKeys_1'
    package: '@azure/arm-notificationhubs'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, authorizationRuleName: string, parameters: PolicykeyResource,
        callback: ServiceCallback<ResourceListKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: namespaceName
          type: string
          description: The namespace name.
        - id: authorizationRuleName
          type: string
          description: |-
            The connection string of the namespace for the specified
            authorizationRule.
        - id: parameters
          type: <xref uid="@azure/arm-notificationhubs.PolicykeyResource" />
          description: >-
            Parameters supplied to regenerate the Namespace Authorization Rule
            Key.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-notificationhubs.ResourceListKeys" />&gt;
          description: |
            The callback
