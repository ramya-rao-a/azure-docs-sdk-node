### YamlMime:TSType
name: TrainingAPIClient
uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient'
package: '@azure/cognitiveservices-customvision-training'
summary: ''
fullName: TrainingAPIClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      TrainingAPIClient(ServiceClientCredentials, string,
      msRest.ServiceClientOptions)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.constructor
    package: '@azure/cognitiveservices-customvision-training'
    summary: Initializes a new instance of the TrainingAPIClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new TrainingAPIClient(credentials: ServiceClientCredentials, endpoint:
        string, options?: msRest.ServiceClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: >-
            Subscription credentials which uniquely identify client
            subscription.
        - id: endpoint
          type: string
          description: Supported Cognitive Services endpoints.
        - id: options
          type: <xref uid="msRest.ServiceClientOptions" />
          description: ''
properties:
  - name: credentials
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.credentials
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type: ServiceClientCredentials
        description: ''
  - name: endpoint
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.endpoint'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        type: string
        description: ''
methods:
  - name: >-
      createImageRegions(string, ImageRegionCreateBatch,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImageRegions
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API accepts a batch of image regions, and optionally tags, to update
      existing images with

      region information.

      There is a limit of 64 entries in the batch.

      If all regions are successful created, 200(OK) status code will be
      returned.

      Otherwise, 207 (Multi-Status) status code will be returned and detail
      status for each region

      will be listed in the response payload.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImageRegions(projectId: string, batch:
        ImageRegionCreateBatch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageRegionCreateBatch"
            />
          description: >-
            Batch of image regions which include a tag and bounding box. Limited
            to 64.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CreateImageRegionsResponse" />&gt;
        description: Promise<Models.CreateImageRegionsResponse>
  - name: >-
      createImageRegions(string, ImageRegionCreateBatch, RequestOptionsBase,
      ServiceCallback<ImageRegionCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImageRegions_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImageRegions(projectId: string, batch:
        ImageRegionCreateBatch, options: RequestOptionsBase, callback:
        ServiceCallback<ImageRegionCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageRegionCreateBatch"
            />
          description: >-
            Batch of image regions which include a tag and bounding box. Limited
            to 64.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageRegionCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImageRegions(string, ImageRegionCreateBatch,
      ServiceCallback<ImageRegionCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImageRegions_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImageRegions(projectId: string, batch:
        ImageRegionCreateBatch, callback:
        ServiceCallback<ImageRegionCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageRegionCreateBatch"
            />
          description: >-
            Batch of image regions which include a tag and bounding box. Limited
            to 64.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageRegionCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromData(string, msRest.HttpRequestBody,
      Models.TrainingAPIClientCreateImagesFromDataOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromData
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API accepts body content as multipart/form-data and
      application/octet-stream. When using

      multipart

      multiple image files can be sent at once, with a maximum of 64 files.

      If all images are successful created, 200(OK) status code will be
      returned.

      Otherwise, 207 (Multi-Status) status code will be returned and detail
      status for each image will

      be listed in the response payload.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromData(projectId: string, imageData:
        msRest.HttpRequestBody, options?:
        Models.TrainingAPIClientCreateImagesFromDataOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 6MB.
        - id: options
          type: >-
            <xref
            uid="Models.TrainingAPIClientCreateImagesFromDataOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CreateImagesFromDataResponse" />&gt;
        description: Promise<Models.CreateImagesFromDataResponse>
  - name: >-
      createImagesFromData(string, msRest.HttpRequestBody,
      ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromData_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromData(projectId: string, imageData:
        msRest.HttpRequestBody, callback: ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 6MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromData(string, msRest.HttpRequestBody,
      TrainingAPIClientCreateImagesFromDataOptionalParams,
      ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromData_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromData(projectId: string, imageData:
        msRest.HttpRequestBody, options:
        TrainingAPIClientCreateImagesFromDataOptionalParams, callback:
        ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 6MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientCreateImagesFromDataOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromFiles(string, ImageFileCreateBatch,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromFiles
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API accepts a batch of files, and optionally tags, to create images.
      There is a limit of 64

      images and 20 tags.

      If all images are successful created, 200(OK) status code will be
      returned.

      Otherwise, 207 (Multi-Status) status code will be returned and detail
      status for each image will

      be listed in the response payload.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromFiles(projectId: string, batch:
        ImageFileCreateBatch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageFileCreateBatch"
            />
          description: >-
            The batch of image files to add. Limited to 64 images and 20 tags
            per batch.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CreateImagesFromFilesResponse" />&gt;
        description: Promise<Models.CreateImagesFromFilesResponse>
  - name: >-
      createImagesFromFiles(string, ImageFileCreateBatch, RequestOptionsBase,
      ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromFiles_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromFiles(projectId: string, batch:
        ImageFileCreateBatch, options: RequestOptionsBase, callback:
        ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageFileCreateBatch"
            />
          description: >-
            The batch of image files to add. Limited to 64 images and 20 tags
            per batch.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromFiles(string, ImageFileCreateBatch,
      ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromFiles_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromFiles(projectId: string, batch:
        ImageFileCreateBatch, callback: ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageFileCreateBatch"
            />
          description: >-
            The batch of image files to add. Limited to 64 images and 20 tags
            per batch.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromPredictions(string, ImageIdCreateBatch,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromPredictions
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API creates a batch of images from predicted images specified. There
      is a limit of 64

      images and 20 tags.

      If all images are successful created, 200(OK) status code will be
      returned.

      Otherwise, 207 (Multi-Status) status code will be returned and detail
      status for each image will

      be listed in the response payload.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromPredictions(projectId: string, batch:
        ImageIdCreateBatch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageIdCreateBatch"
            />
          description: >-
            Image, tag ids, and metadata. Limited to 64 images and 20 tags per
            batch.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CreateImagesFromPredictionsResponse"
          />&gt;
        description: Promise<Models.CreateImagesFromPredictionsResponse>
  - name: >-
      createImagesFromPredictions(string, ImageIdCreateBatch,
      RequestOptionsBase, ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromPredictions_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromPredictions(projectId: string, batch:
        ImageIdCreateBatch, options: RequestOptionsBase, callback:
        ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageIdCreateBatch"
            />
          description: >-
            Image, tag ids, and metadata. Limited to 64 images and 20 tags per
            batch.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromPredictions(string, ImageIdCreateBatch,
      ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromPredictions_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromPredictions(projectId: string, batch:
        ImageIdCreateBatch, callback: ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageIdCreateBatch"
            />
          description: >-
            Image, tag ids, and metadata. Limited to 64 images and 20 tags per
            batch.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromUrls(string, ImageUrlCreateBatch,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromUrls
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API accepts a batch of urls, and optionally tags, to create images.
      There is a limit of 64

      images and 20 tags.

      If all images are successful created, 200(OK) status code will be
      returned.

      Otherwise, 207 (Multi-Status) status code will be returned and detail
      status for each image will

      be listed in the response payload.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromUrls(projectId: string, batch:
        ImageUrlCreateBatch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageUrlCreateBatch"
            />
          description: >-
            Image urls, tag ids, and metadata. Limited to 64 images and 20 tags
            per batch.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CreateImagesFromUrlsResponse" />&gt;
        description: Promise<Models.CreateImagesFromUrlsResponse>
  - name: >-
      createImagesFromUrls(string, ImageUrlCreateBatch, RequestOptionsBase,
      ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromUrls_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromUrls(projectId: string, batch:
        ImageUrlCreateBatch, options: RequestOptionsBase, callback:
        ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageUrlCreateBatch"
            />
          description: >-
            Image urls, tag ids, and metadata. Limited to 64 images and 20 tags
            per batch.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImagesFromUrls(string, ImageUrlCreateBatch,
      ServiceCallback<ImageCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImagesFromUrls_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImagesFromUrls(projectId: string, batch:
        ImageUrlCreateBatch, callback: ServiceCallback<ImageCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageUrlCreateBatch"
            />
          description: >-
            Image urls, tag ids, and metadata. Limited to 64 images and 20 tags
            per batch.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageCreateSummary"
            />&gt;
          description: |
            The callback
  - name: 'createImageTags(string, ImageTagCreateBatch, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImageTags
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImageTags(projectId: string, batch: ImageTagCreateBatch,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageTagCreateBatch"
            />
          description: Batch of image tags. Limited to 128 tags per batch.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CreateImageTagsResponse" />&gt;
        description: Promise<Models.CreateImageTagsResponse>
  - name: >-
      createImageTags(string, ImageTagCreateBatch, RequestOptionsBase,
      ServiceCallback<ImageTagCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImageTags_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImageTags(projectId: string, batch: ImageTagCreateBatch,
        options: RequestOptionsBase, callback:
        ServiceCallback<ImageTagCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageTagCreateBatch"
            />
          description: Batch of image tags. Limited to 128 tags per batch.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageTagCreateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      createImageTags(string, ImageTagCreateBatch,
      ServiceCallback<ImageTagCreateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createImageTags_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImageTags(projectId: string, batch: ImageTagCreateBatch,
        callback: ServiceCallback<ImageTagCreateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: batch
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.ImageTagCreateBatch"
            />
          description: Batch of image tags. Limited to 128 tags per batch.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageTagCreateSummary"
            />&gt;
          description: |
            The callback
  - name: 'createProject(string, Models.TrainingAPIClientCreateProjectOptionalParams)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createProject
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createProject(name: string, options?:
        Models.TrainingAPIClientCreateProjectOptionalParams)
      parameters:
        - id: name
          type: string
          description: Name of the project.
        - id: options
          type: <xref uid="Models.TrainingAPIClientCreateProjectOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CreateProjectResponse" />&gt;
        description: Promise<Models.CreateProjectResponse>
  - name: 'createProject(string, ServiceCallback<Project>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createProject_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createProject(name: string, callback: ServiceCallback<Project>)'
      parameters:
        - id: name
          type: string
          description: Name of the project.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: >-
      createProject(string, TrainingAPIClientCreateProjectOptionalParams,
      ServiceCallback<Project>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createProject_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createProject(name: string, options:
        TrainingAPIClientCreateProjectOptionalParams, callback:
        ServiceCallback<Project>)
      parameters:
        - id: name
          type: string
          description: Name of the project.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientCreateProjectOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: 'createTag(string, string, Models.TrainingAPIClientCreateTagOptionalParams)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.createTag'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createTag(projectId: string, name: string, options?:
        Models.TrainingAPIClientCreateTagOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: name
          type: string
          description: The tag name.
        - id: options
          type: <xref uid="Models.TrainingAPIClientCreateTagOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CreateTagResponse" />&gt;
        description: Promise<Models.CreateTagResponse>
  - name: 'createTag(string, string, ServiceCallback<Tag>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createTag_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createTag(projectId: string, name: string, callback:
        ServiceCallback<Tag>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: name
          type: string
          description: The tag name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />&gt;
          description: |
            The callback
  - name: >-
      createTag(string, string, TrainingAPIClientCreateTagOptionalParams,
      ServiceCallback<Tag>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.createTag_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createTag(projectId: string, name: string, options:
        TrainingAPIClientCreateTagOptionalParams, callback:
        ServiceCallback<Tag>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: name
          type: string
          description: The tag name.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientCreateTagOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />&gt;
          description: |
            The callback
  - name: 'deleteImageRegions(string, string[], msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImageRegions
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImageRegions(projectId: string, regionIds: string[],
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: regionIds
          type: 'string[]'
          description: Regions to delete. Limited to 64.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteImageRegions(string, string[], RequestOptionsBase,
      ServiceCallback<void>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImageRegions_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImageRegions(projectId: string, regionIds: string[],
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: regionIds
          type: 'string[]'
          description: Regions to delete. Limited to 64.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteImageRegions(string, string[], ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImageRegions_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImageRegions(projectId: string, regionIds: string[],
        callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: regionIds
          type: 'string[]'
          description: Regions to delete. Limited to 64.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteImages(string, Models.TrainingAPIClientDeleteImagesOptionalParams)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImages
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImages(projectId: string, options?:
        Models.TrainingAPIClientDeleteImagesOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientDeleteImagesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteImages(string, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImages_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImages(projectId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteImages(string, TrainingAPIClientDeleteImagesOptionalParams,
      ServiceCallback<void>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImages_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImages(projectId: string, options:
        TrainingAPIClientDeleteImagesOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientDeleteImagesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteImageTags(string, string[], string[], msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImageTags
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImageTags(projectId: string, imageIds: string[], tagIds:
        string[], options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageIds
          type: 'string[]'
          description: Image ids. Limited to 64 images.
        - id: tagIds
          type: 'string[]'
          description: Tags to be deleted from the specified images. Limited to 20 tags.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteImageTags(string, string[], string[], RequestOptionsBase,
      ServiceCallback<void>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImageTags_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImageTags(projectId: string, imageIds: string[], tagIds:
        string[], options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageIds
          type: 'string[]'
          description: Image ids. Limited to 64 images.
        - id: tagIds
          type: 'string[]'
          description: Tags to be deleted from the specified images. Limited to 20 tags.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteImageTags(string, string[], string[], ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteImageTags_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteImageTags(projectId: string, imageIds: string[], tagIds:
        string[], callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageIds
          type: 'string[]'
          description: Image ids. Limited to 64 images.
        - id: tagIds
          type: 'string[]'
          description: Tags to be deleted from the specified images. Limited to 20 tags.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteIteration(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteIteration
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteIteration(projectId: string, iterationId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteIteration(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteIteration_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteIteration(projectId: string, iterationId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteIteration(string, string, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteIteration_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteIteration(projectId: string, iterationId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deletePrediction(string, string[], msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deletePrediction
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePrediction(projectId: string, ids: string[], options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: ids
          type: 'string[]'
          description: The prediction ids. Limited to 64.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deletePrediction(string, string[], RequestOptionsBase,
      ServiceCallback<void>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deletePrediction_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePrediction(projectId: string, ids: string[], options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: ids
          type: 'string[]'
          description: The prediction ids. Limited to 64.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deletePrediction(string, string[], ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deletePrediction_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePrediction(projectId: string, ids: string[], callback:
        ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: ids
          type: 'string[]'
          description: The prediction ids. Limited to 64.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteProject(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteProject
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProject(projectId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteProject(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteProject_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProject(projectId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteProject(string, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteProject_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProject(projectId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteTag(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteTag'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTag(projectId: string, tagId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: tagId
          type: string
          description: Id of the tag to be deleted.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteTag(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteTag_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTag(projectId: string, tagId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: tagId
          type: string
          description: Id of the tag to be deleted.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteTag(string, string, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.deleteTag_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTag(projectId: string, tagId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: tagId
          type: string
          description: Id of the tag to be deleted.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      exportIteration(string, string, Models.Platform,
      Models.TrainingAPIClientExportIterationOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.exportIteration
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportIteration(projectId: string, iterationId: string,
        platform: Models.Platform, options?:
        Models.TrainingAPIClientExportIterationOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: platform
          type: <xref uid="Models.Platform" />
          description: >-
            The target platform. Possible values include: 'CoreML',
            'TensorFlow',

            'DockerFile', 'ONNX', 'VAIDK', 'OpenVino'
        - id: options
          type: <xref uid="Models.TrainingAPIClientExportIterationOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ExportIterationResponse" />&gt;
        description: Promise<Models.ExportIterationResponse>
  - name: >-
      exportIteration(string, string, Models.Platform,
      ServiceCallback<ExportModel>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.exportIteration_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportIteration(projectId: string, iterationId: string,
        platform: Models.Platform, callback: ServiceCallback<ExportModel>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: platform
          type: <xref uid="Models.Platform" />
          description: >-
            The target platform. Possible values include: 'CoreML',
            'TensorFlow',

            'DockerFile', 'ONNX', 'VAIDK', 'OpenVino'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ExportModel"
            />&gt;
          description: |
            The callback
  - name: >-
      exportIteration(string, string, Models.Platform,
      TrainingAPIClientExportIterationOptionalParams,
      ServiceCallback<ExportModel>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.exportIteration_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportIteration(projectId: string, iterationId: string,
        platform: Models.Platform, options:
        TrainingAPIClientExportIterationOptionalParams, callback:
        ServiceCallback<ExportModel>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: platform
          type: <xref uid="Models.Platform" />
          description: >-
            The target platform. Possible values include: 'CoreML',
            'TensorFlow',

            'DockerFile', 'ONNX', 'VAIDK', 'OpenVino'
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientExportIterationOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ExportModel"
            />&gt;
          description: |
            The callback
  - name: 'exportProject(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.exportProject
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportProject(projectId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id of the project to export.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ExportProjectResponse" />&gt;
        description: Promise<Models.ExportProjectResponse>
  - name: 'exportProject(string, RequestOptionsBase, ServiceCallback<ProjectExport>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.exportProject_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportProject(projectId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProjectExport>)
      parameters:
        - id: projectId
          type: string
          description: The project id of the project to export.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ProjectExport"
            />&gt;
          description: |
            The callback
  - name: 'exportProject(string, ServiceCallback<ProjectExport>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.exportProject_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportProject(projectId: string, callback:
        ServiceCallback<ProjectExport>)
      parameters:
        - id: projectId
          type: string
          description: The project id of the project to export.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ProjectExport"
            />&gt;
          description: |
            The callback
  - name: 'getArtifact(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getArtifact
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getArtifact(projectId: string, path: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: path
          type: string
          description: The relative path for artifact.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetArtifactResponse" />&gt;
        description: Promise<Models.GetArtifactResponse>
  - name: 'getArtifact(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getArtifact_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getArtifact(projectId: string, path: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: path
          type: string
          description: The relative path for artifact.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getArtifact(string, string, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getArtifact_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getArtifact(projectId: string, path: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: path
          type: string
          description: The relative path for artifact.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getDomain(string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getDomain'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomain(domainId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: domainId
          type: string
          description: The id of the domain to get information about.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetDomainResponse" />&gt;
        description: Promise<Models.GetDomainResponse>
  - name: 'getDomain(string, RequestOptionsBase, ServiceCallback<Domain>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getDomain_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomain(domainId: string, options: RequestOptionsBase,
        callback: ServiceCallback<Domain>)
      parameters:
        - id: domainId
          type: string
          description: The id of the domain to get information about.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Domain" />&gt;
          description: |
            The callback
  - name: 'getDomain(string, ServiceCallback<Domain>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getDomain_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDomain(domainId: string, callback: ServiceCallback<Domain>)'
      parameters:
        - id: domainId
          type: string
          description: The id of the domain to get information about.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Domain" />&gt;
          description: |
            The callback
  - name: getDomains(msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getDomains
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDomains(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetDomainsResponse" />&gt;
        description: Promise<Models.GetDomainsResponse>
  - name: 'getDomains(RequestOptionsBase, ServiceCallback<Domain[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getDomains_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomains(options: RequestOptionsBase, callback:
        ServiceCallback<Domain[]>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Domain" />[]&gt;
          description: |
            The callback
  - name: 'getDomains(ServiceCallback<Domain[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getDomains_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDomains(callback: ServiceCallback<Domain[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Domain" />[]&gt;
          description: |
            The callback
  - name: 'getExports(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getExports
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getExports(projectId: string, iterationId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetExportsResponse" />&gt;
        description: Promise<Models.GetExportsResponse>
  - name: >-
      getExports(string, string, RequestOptionsBase,
      ServiceCallback<ExportModel[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getExports_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getExports(projectId: string, iterationId: string, options:
        RequestOptionsBase, callback: ServiceCallback<ExportModel[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ExportModel"
            />[]&gt;
          description: |
            The callback
  - name: 'getExports(string, string, ServiceCallback<ExportModel[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getExports_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getExports(projectId: string, iterationId: string, callback:
        ServiceCallback<ExportModel[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ExportModel"
            />[]&gt;
          description: |
            The callback
  - name: 'getImageCount(string, Models.TrainingAPIClientGetImageCountOptionalParams)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImageCount
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      The filtering is on an and/or relationship. For example, if the provided
      tag ids are for the

      "Dog" and

      "Cat" tags, then only images tagged with Dog and/or Cat will be returned
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImageCount(projectId: string, options?:
        Models.TrainingAPIClientGetImageCountOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientGetImageCountOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetImageCountResponse" />&gt;
        description: Promise<Models.GetImageCountResponse>
  - name: 'getImageCount(string, ServiceCallback<number>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImageCount_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImageCount(projectId: string, callback:
        ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getImageCount(string, TrainingAPIClientGetImageCountOptionalParams,
      ServiceCallback<number>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImageCount_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImageCount(projectId: string, options:
        TrainingAPIClientGetImageCountOptionalParams, callback:
        ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getImagePerformanceCount(string, string,
      Models.TrainingAPIClientGetImagePerformanceCountOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagePerformanceCount
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      The filtering is on an and/or relationship. For example, if the provided
      tag ids are for the

      "Dog" and

      "Cat" tags, then only images tagged with Dog and/or Cat will be returned
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagePerformanceCount(projectId: string, iterationId:
        string, options?:
        Models.TrainingAPIClientGetImagePerformanceCountOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id. Defaults to workspace.
        - id: options
          type: >-
            <xref
            uid="Models.TrainingAPIClientGetImagePerformanceCountOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetImagePerformanceCountResponse" />&gt;
        description: Promise<Models.GetImagePerformanceCountResponse>
  - name: 'getImagePerformanceCount(string, string, ServiceCallback<number>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagePerformanceCount_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagePerformanceCount(projectId: string, iterationId:
        string, callback: ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id. Defaults to workspace.
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getImagePerformanceCount(string, string,
      TrainingAPIClientGetImagePerformanceCountOptionalParams,
      ServiceCallback<number>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagePerformanceCount_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagePerformanceCount(projectId: string, iterationId:
        string, options:
        TrainingAPIClientGetImagePerformanceCountOptionalParams, callback:
        ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id. Defaults to workspace.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetImagePerformanceCountOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getImagePerformances(string, string,
      Models.TrainingAPIClientGetImagePerformancesOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagePerformances
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API supports batching and range selection. By default it will only
      return first 50 images

      matching images.

      Use the {take} and {skip} parameters to control how many images to return
      in a given batch.

      The filtering is on an and/or relationship. For example, if the provided
      tag ids are for the

      "Dog" and

      "Cat" tags, then only images tagged with Dog and/or Cat will be returned
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagePerformances(projectId: string, iterationId: string,
        options?: Models.TrainingAPIClientGetImagePerformancesOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id. Defaults to workspace.
        - id: options
          type: >-
            <xref
            uid="Models.TrainingAPIClientGetImagePerformancesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetImagePerformancesResponse" />&gt;
        description: Promise<Models.GetImagePerformancesResponse>
  - name: 'getImagePerformances(string, string, ServiceCallback<ImagePerformance[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagePerformances_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagePerformances(projectId: string, iterationId: string,
        callback: ServiceCallback<ImagePerformance[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id. Defaults to workspace.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImagePerformance"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getImagePerformances(string, string,
      TrainingAPIClientGetImagePerformancesOptionalParams,
      ServiceCallback<ImagePerformance[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagePerformances_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagePerformances(projectId: string, iterationId: string,
        options: TrainingAPIClientGetImagePerformancesOptionalParams, callback:
        ServiceCallback<ImagePerformance[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id. Defaults to workspace.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetImagePerformancesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImagePerformance"
            />[]&gt;
          description: |
            The callback
  - name: 'getImageRegionProposals(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImageRegionProposals
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API will get region proposals for an image along with confidences for
      the region. It

      returns an empty array if no proposals are found.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImageRegionProposals(projectId: string, imageId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageId
          type: string
          description: The image id.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetImageRegionProposalsResponse" />&gt;
        description: Promise<Models.GetImageRegionProposalsResponse>
  - name: >-
      getImageRegionProposals(string, string, RequestOptionsBase,
      ServiceCallback<ImageRegionProposal>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImageRegionProposals_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImageRegionProposals(projectId: string, imageId: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ImageRegionProposal>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageId
          type: string
          description: The image id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageRegionProposal"
            />&gt;
          description: |
            The callback
  - name: >-
      getImageRegionProposals(string, string,
      ServiceCallback<ImageRegionProposal>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImageRegionProposals_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImageRegionProposals(projectId: string, imageId: string,
        callback: ServiceCallback<ImageRegionProposal>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageId
          type: string
          description: The image id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageRegionProposal"
            />&gt;
          description: |
            The callback
  - name: 'getImages(string, Models.TrainingAPIClientGetImagesOptionalParams)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getImages'
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API supports batching and range selection. By default it will only
      return first 50 images

      matching images.

      Use the {take} and {skip} parameters to control how many images to return
      in a given batch.

      The filtering is on an and/or relationship. For example, if the provided
      tag ids are for the

      "Dog" and

      "Cat" tags, then only images tagged with Dog and/or Cat will be returned
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImages(projectId: string, options?:
        Models.TrainingAPIClientGetImagesOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientGetImagesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetImagesResponse" />&gt;
        description: Promise<Models.GetImagesResponse>
  - name: 'getImages(string, ServiceCallback<Image[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImages_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImages(projectId: string, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: >-
      getImages(string, TrainingAPIClientGetImagesOptionalParams,
      ServiceCallback<Image[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImages_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImages(projectId: string, options:
        TrainingAPIClientGetImagesOptionalParams, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetImagesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: >-
      getImagesByIds(string,
      Models.TrainingAPIClientGetImagesByIdsOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagesByIds
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API will return a set of Images for the specified tags and optionally
      iteration. If no

      iteration is specified the

      current workspace is used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagesByIds(projectId: string, options?:
        Models.TrainingAPIClientGetImagesByIdsOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientGetImagesByIdsOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetImagesByIdsResponse" />&gt;
        description: Promise<Models.GetImagesByIdsResponse>
  - name: 'getImagesByIds(string, ServiceCallback<Image[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagesByIds_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagesByIds(projectId: string, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: >-
      getImagesByIds(string, TrainingAPIClientGetImagesByIdsOptionalParams,
      ServiceCallback<Image[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getImagesByIds_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImagesByIds(projectId: string, options:
        TrainingAPIClientGetImagesByIdsOptionalParams, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetImagesByIdsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: 'getIteration(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIteration
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIteration(projectId: string, iterationId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The id of the project the iteration belongs to.
        - id: iterationId
          type: string
          description: The id of the iteration to get.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetIterationResponse" />&gt;
        description: Promise<Models.GetIterationResponse>
  - name: >-
      getIteration(string, string, RequestOptionsBase,
      ServiceCallback<Iteration>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIteration_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIteration(projectId: string, iterationId: string, options:
        RequestOptionsBase, callback: ServiceCallback<Iteration>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project the iteration belongs to.
        - id: iterationId
          type: string
          description: The id of the iteration to get.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />&gt;
          description: |
            The callback
  - name: 'getIteration(string, string, ServiceCallback<Iteration>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIteration_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIteration(projectId: string, iterationId: string, callback:
        ServiceCallback<Iteration>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project the iteration belongs to.
        - id: iterationId
          type: string
          description: The id of the iteration to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />&gt;
          description: |
            The callback
  - name: >-
      getIterationPerformance(string, string,
      Models.TrainingAPIClientGetIterationPerformanceOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIterationPerformance
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIterationPerformance(projectId: string, iterationId: string,
        options?: Models.TrainingAPIClientGetIterationPerformanceOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The id of the project the iteration belongs to.
        - id: iterationId
          type: string
          description: The id of the iteration to get.
        - id: options
          type: >-
            <xref
            uid="Models.TrainingAPIClientGetIterationPerformanceOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetIterationPerformanceResponse" />&gt;
        description: Promise<Models.GetIterationPerformanceResponse>
  - name: >-
      getIterationPerformance(string, string,
      ServiceCallback<IterationPerformance>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIterationPerformance_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIterationPerformance(projectId: string, iterationId: string,
        callback: ServiceCallback<IterationPerformance>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project the iteration belongs to.
        - id: iterationId
          type: string
          description: The id of the iteration to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.IterationPerformance"
            />&gt;
          description: |
            The callback
  - name: >-
      getIterationPerformance(string, string,
      TrainingAPIClientGetIterationPerformanceOptionalParams,
      ServiceCallback<IterationPerformance>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIterationPerformance_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIterationPerformance(projectId: string, iterationId: string,
        options: TrainingAPIClientGetIterationPerformanceOptionalParams,
        callback: ServiceCallback<IterationPerformance>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project the iteration belongs to.
        - id: iterationId
          type: string
          description: The id of the iteration to get.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetIterationPerformanceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.IterationPerformance"
            />&gt;
          description: |
            The callback
  - name: 'getIterations(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIterations
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIterations(projectId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetIterationsResponse" />&gt;
        description: Promise<Models.GetIterationsResponse>
  - name: 'getIterations(string, RequestOptionsBase, ServiceCallback<Iteration[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIterations_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIterations(projectId: string, options: RequestOptionsBase,
        callback: ServiceCallback<Iteration[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />[]&gt;
          description: |
            The callback
  - name: 'getIterations(string, ServiceCallback<Iteration[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getIterations_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIterations(projectId: string, callback:
        ServiceCallback<Iteration[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />[]&gt;
          description: |
            The callback
  - name: 'getProject(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getProject
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProject(projectId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The id of the project to get.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetProjectResponse" />&gt;
        description: Promise<Models.GetProjectResponse>
  - name: 'getProject(string, RequestOptionsBase, ServiceCallback<Project>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getProject_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProject(projectId: string, options: RequestOptionsBase,
        callback: ServiceCallback<Project>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project to get.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: 'getProject(string, ServiceCallback<Project>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getProject_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProject(projectId: string, callback:
        ServiceCallback<Project>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: getProjects(msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getProjects
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProjects(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetProjectsResponse" />&gt;
        description: Promise<Models.GetProjectsResponse>
  - name: 'getProjects(RequestOptionsBase, ServiceCallback<Project[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getProjects_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProjects(options: RequestOptionsBase, callback:
        ServiceCallback<Project[]>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project"
            />[]&gt;
          description: |
            The callback
  - name: 'getProjects(ServiceCallback<Project[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getProjects_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProjects(callback: ServiceCallback<Project[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project"
            />[]&gt;
          description: |
            The callback
  - name: 'getTag(string, string, Models.TrainingAPIClientGetTagOptionalParams)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getTag'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTag(projectId: string, tagId: string, options?:
        Models.TrainingAPIClientGetTagOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project this tag belongs to.
        - id: tagId
          type: string
          description: The tag id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientGetTagOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetTagResponse" />&gt;
        description: Promise<Models.GetTagResponse>
  - name: 'getTag(string, string, ServiceCallback<Tag>)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getTag_1'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTag(projectId: string, tagId: string, callback:
        ServiceCallback<Tag>)
      parameters:
        - id: projectId
          type: string
          description: The project this tag belongs to.
        - id: tagId
          type: string
          description: The tag id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />&gt;
          description: |
            The callback
  - name: >-
      getTag(string, string, TrainingAPIClientGetTagOptionalParams,
      ServiceCallback<Tag>)
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getTag_2'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTag(projectId: string, tagId: string, options:
        TrainingAPIClientGetTagOptionalParams, callback: ServiceCallback<Tag>)
      parameters:
        - id: projectId
          type: string
          description: The project this tag belongs to.
        - id: tagId
          type: string
          description: The tag id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetTagOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />&gt;
          description: |
            The callback
  - name: >-
      getTaggedImageCount(string,
      Models.TrainingAPIClientGetTaggedImageCountOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getTaggedImageCount
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      The filtering is on an and/or relationship. For example, if the provided
      tag ids are for the

      "Dog" and

      "Cat" tags, then only images tagged with Dog and/or Cat will be returned
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaggedImageCount(projectId: string, options?:
        Models.TrainingAPIClientGetTaggedImageCountOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="Models.TrainingAPIClientGetTaggedImageCountOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetTaggedImageCountResponse" />&gt;
        description: Promise<Models.GetTaggedImageCountResponse>
  - name: 'getTaggedImageCount(string, ServiceCallback<number>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getTaggedImageCount_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaggedImageCount(projectId: string, callback:
        ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getTaggedImageCount(string,
      TrainingAPIClientGetTaggedImageCountOptionalParams,
      ServiceCallback<number>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getTaggedImageCount_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaggedImageCount(projectId: string, options:
        TrainingAPIClientGetTaggedImageCountOptionalParams, callback:
        ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetTaggedImageCountOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getTaggedImages(string,
      Models.TrainingAPIClientGetTaggedImagesOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getTaggedImages
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API supports batching and range selection. By default it will only
      return first 50 images

      matching images.

      Use the {take} and {skip} parameters to control how many images to return
      in a given batch.

      The filtering is on an and/or relationship. For example, if the provided
      tag ids are for the

      "Dog" and

      "Cat" tags, then only images tagged with Dog and/or Cat will be returned
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaggedImages(projectId: string, options?:
        Models.TrainingAPIClientGetTaggedImagesOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientGetTaggedImagesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetTaggedImagesResponse" />&gt;
        description: Promise<Models.GetTaggedImagesResponse>
  - name: 'getTaggedImages(string, ServiceCallback<Image[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getTaggedImages_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaggedImages(projectId: string, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: >-
      getTaggedImages(string, TrainingAPIClientGetTaggedImagesOptionalParams,
      ServiceCallback<Image[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getTaggedImages_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaggedImages(projectId: string, options:
        TrainingAPIClientGetTaggedImagesOptionalParams, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetTaggedImagesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: 'getTags(string, Models.TrainingAPIClientGetTagsOptionalParams)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getTags'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTags(projectId: string, options?:
        Models.TrainingAPIClientGetTagsOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientGetTagsOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetTagsResponse" />&gt;
        description: Promise<Models.GetTagsResponse>
  - name: 'getTags(string, ServiceCallback<Tag[]>)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getTags_1'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getTags(projectId: string, callback: ServiceCallback<Tag[]>)'
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />[]&gt;
          description: |
            The callback
  - name: >-
      getTags(string, TrainingAPIClientGetTagsOptionalParams,
      ServiceCallback<Tag[]>)
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.getTags_2'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTags(projectId: string, options:
        TrainingAPIClientGetTagsOptionalParams, callback:
        ServiceCallback<Tag[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetTagsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />[]&gt;
          description: |
            The callback
  - name: >-
      getUntaggedImageCount(string,
      Models.TrainingAPIClientGetUntaggedImageCountOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getUntaggedImageCount
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API returns the images which have no tags for a given project and
      optionally an iteration.

      If no iteration is specified the

      current workspace is used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getUntaggedImageCount(projectId: string, options?:
        Models.TrainingAPIClientGetUntaggedImageCountOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="Models.TrainingAPIClientGetUntaggedImageCountOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetUntaggedImageCountResponse" />&gt;
        description: Promise<Models.GetUntaggedImageCountResponse>
  - name: 'getUntaggedImageCount(string, ServiceCallback<number>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getUntaggedImageCount_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getUntaggedImageCount(projectId: string, callback:
        ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getUntaggedImageCount(string,
      TrainingAPIClientGetUntaggedImageCountOptionalParams,
      ServiceCallback<number>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getUntaggedImageCount_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getUntaggedImageCount(projectId: string, options:
        TrainingAPIClientGetUntaggedImageCountOptionalParams, callback:
        ServiceCallback<number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetUntaggedImageCountOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;number&gt;
          description: |
            The callback
  - name: >-
      getUntaggedImages(string,
      Models.TrainingAPIClientGetUntaggedImagesOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getUntaggedImages
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API supports batching and range selection. By default it will only
      return first 50 images

      matching images.

      Use the {take} and {skip} parameters to control how many images to return
      in a given batch.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getUntaggedImages(projectId: string, options?:
        Models.TrainingAPIClientGetUntaggedImagesOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref uid="Models.TrainingAPIClientGetUntaggedImagesOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GetUntaggedImagesResponse" />&gt;
        description: Promise<Models.GetUntaggedImagesResponse>
  - name: 'getUntaggedImages(string, ServiceCallback<Image[]>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getUntaggedImages_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getUntaggedImages(projectId: string, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: >-
      getUntaggedImages(string,
      TrainingAPIClientGetUntaggedImagesOptionalParams,
      ServiceCallback<Image[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.getUntaggedImages_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getUntaggedImages(projectId: string, options:
        TrainingAPIClientGetUntaggedImagesOptionalParams, callback:
        ServiceCallback<Image[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientGetUntaggedImagesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Image" />[]&gt;
          description: |
            The callback
  - name: 'importProject(string, Models.TrainingAPIClientImportProjectOptionalParams)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.importProject
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importProject(token: string, options?:
        Models.TrainingAPIClientImportProjectOptionalParams)
      parameters:
        - id: token
          type: string
          description: Token generated from the export project call.
        - id: options
          type: <xref uid="Models.TrainingAPIClientImportProjectOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ImportProjectResponse" />&gt;
        description: Promise<Models.ImportProjectResponse>
  - name: 'importProject(string, ServiceCallback<Project>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.importProject_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importProject(token: string, callback:
        ServiceCallback<Project>)
      parameters:
        - id: token
          type: string
          description: Token generated from the export project call.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: >-
      importProject(string, TrainingAPIClientImportProjectOptionalParams,
      ServiceCallback<Project>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.importProject_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importProject(token: string, options:
        TrainingAPIClientImportProjectOptionalParams, callback:
        ServiceCallback<Project>)
      parameters:
        - id: token
          type: string
          description: Token generated from the export project call.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientImportProjectOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: >-
      publishIteration(string, string, string, string,
      Models.TrainingAPIClientPublishIterationOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.publishIteration
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishIteration(projectId: string, iterationId: string,
        publishName: string, predictionId: string, options?:
        Models.TrainingAPIClientPublishIterationOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: publishName
          type: string
          description: The name to give the published iteration.
        - id: predictionId
          type: string
          description: The id of the prediction resource to publish to.
        - id: options
          type: >-
            <xref uid="Models.TrainingAPIClientPublishIterationOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PublishIterationResponse" />&gt;
        description: Promise<Models.PublishIterationResponse>
  - name: 'publishIteration(string, string, string, string, ServiceCallback<boolean>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.publishIteration_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishIteration(projectId: string, iterationId: string,
        publishName: string, predictionId: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: publishName
          type: string
          description: The name to give the published iteration.
        - id: predictionId
          type: string
          description: The id of the prediction resource to publish to.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      publishIteration(string, string, string, string,
      TrainingAPIClientPublishIterationOptionalParams, ServiceCallback<boolean>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.publishIteration_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishIteration(projectId: string, iterationId: string,
        publishName: string, predictionId: string, options:
        TrainingAPIClientPublishIterationOptionalParams, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: publishName
          type: string
          description: The name to give the published iteration.
        - id: predictionId
          type: string
          description: The id of the prediction resource to publish to.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientPublishIterationOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'queryPredictions(string, PredictionQueryToken, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.queryPredictions
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryPredictions(projectId: string, query:
        PredictionQueryToken, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: query
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.PredictionQueryToken"
            />
          description: >-
            Parameters used to query the predictions. Limited to combining 2
            tags.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QueryPredictionsResponse" />&gt;
        description: Promise<Models.QueryPredictionsResponse>
  - name: >-
      queryPredictions(string, PredictionQueryToken, RequestOptionsBase,
      ServiceCallback<PredictionQueryResult>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.queryPredictions_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryPredictions(projectId: string, query:
        PredictionQueryToken, options: RequestOptionsBase, callback:
        ServiceCallback<PredictionQueryResult>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: query
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.PredictionQueryToken"
            />
          description: >-
            Parameters used to query the predictions. Limited to combining 2
            tags.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.PredictionQueryResult"
            />&gt;
          description: |
            The callback
  - name: >-
      queryPredictions(string, PredictionQueryToken,
      ServiceCallback<PredictionQueryResult>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.queryPredictions_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryPredictions(projectId: string, query:
        PredictionQueryToken, callback: ServiceCallback<PredictionQueryResult>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: query
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.PredictionQueryToken"
            />
          description: >-
            Parameters used to query the predictions. Limited to combining 2
            tags.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.PredictionQueryResult"
            />&gt;
          description: |
            The callback
  - name: >-
      querySuggestedImageCount(string, string, TagFilter,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.querySuggestedImageCount
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API takes in tagIds to get count of untagged images per suggested
      tags for a given

      threshold.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function querySuggestedImageCount(projectId: string, iterationId:
        string, query: TagFilter, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for the suggested tags and regions.
        - id: query
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.TagFilter"
            />
          description: 'Model that contains tagIds, threshold and projectType to query by.'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QuerySuggestedImageCountResponse" />&gt;
        description: Promise<Models.QuerySuggestedImageCountResponse>
  - name: >-
      querySuggestedImageCount(string, string, TagFilter, RequestOptionsBase,
      ServiceCallback<[key: string]: number>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.querySuggestedImageCount_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function querySuggestedImageCount(projectId: string, iterationId:
        string, query: TagFilter, options: RequestOptionsBase, callback:
        ServiceCallback<[key: string]: number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for the suggested tags and regions.
        - id: query
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.TagFilter"
            />
          description: 'Model that contains tagIds, threshold and projectType to query by.'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: 'ServiceCallback&lt;[key: string]: number&gt;'
          description: |
            The callback
  - name: >-
      querySuggestedImageCount(string, string, TagFilter, ServiceCallback<[key:
      string]: number>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.querySuggestedImageCount_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function querySuggestedImageCount(projectId: string, iterationId:
        string, query: TagFilter, callback: ServiceCallback<[key: string]:
        number>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for the suggested tags and regions.
        - id: query
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.TagFilter"
            />
          description: 'Model that contains tagIds, threshold and projectType to query by.'
        - id: callback
          type: 'ServiceCallback&lt;[key: string]: number&gt;'
          description: |
            The callback
  - name: >-
      querySuggestedImages(string, string, SuggestedTagAndRegionQueryToken,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.querySuggestedImages
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API will fetch untagged images filtered by suggested tags Ids. It
      returns an empty array if

      no images are found.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function querySuggestedImages(projectId: string, iterationId: string,
        query: SuggestedTagAndRegionQueryToken, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for the suggested tags and regions.
        - id: query
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.SuggestedTagAndRegionQueryToken"
            />
          description: Contains properties we need to query suggested images.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QuerySuggestedImagesResponse" />&gt;
        description: Promise<Models.QuerySuggestedImagesResponse>
  - name: >-
      querySuggestedImages(string, string, SuggestedTagAndRegionQueryToken,
      RequestOptionsBase, ServiceCallback<SuggestedTagAndRegionQuery>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.querySuggestedImages_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function querySuggestedImages(projectId: string, iterationId: string,
        query: SuggestedTagAndRegionQueryToken, options: RequestOptionsBase,
        callback: ServiceCallback<SuggestedTagAndRegionQuery>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for the suggested tags and regions.
        - id: query
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.SuggestedTagAndRegionQueryToken"
            />
          description: Contains properties we need to query suggested images.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.SuggestedTagAndRegionQuery"
            />&gt;
          description: |
            The callback
  - name: >-
      querySuggestedImages(string, string, SuggestedTagAndRegionQueryToken,
      ServiceCallback<SuggestedTagAndRegionQuery>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.querySuggestedImages_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function querySuggestedImages(projectId: string, iterationId: string,
        query: SuggestedTagAndRegionQueryToken, callback:
        ServiceCallback<SuggestedTagAndRegionQuery>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for the suggested tags and regions.
        - id: query
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.SuggestedTagAndRegionQueryToken"
            />
          description: Contains properties we need to query suggested images.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.SuggestedTagAndRegionQuery"
            />&gt;
          description: |
            The callback
  - name: >-
      quickTestImage(string, msRest.HttpRequestBody,
      Models.TrainingAPIClientQuickTestImageOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.quickTestImage
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function quickTestImage(projectId: string, imageData:
        msRest.HttpRequestBody, options?:
        Models.TrainingAPIClientQuickTestImageOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 6MB.
        - id: options
          type: <xref uid="Models.TrainingAPIClientQuickTestImageOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QuickTestImageResponse" />&gt;
        description: Promise<Models.QuickTestImageResponse>
  - name: >-
      quickTestImage(string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.quickTestImage_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function quickTestImage(projectId: string, imageData:
        msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 6MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      quickTestImage(string, msRest.HttpRequestBody,
      TrainingAPIClientQuickTestImageOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.quickTestImage_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function quickTestImage(projectId: string, imageData:
        msRest.HttpRequestBody, options:
        TrainingAPIClientQuickTestImageOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 6MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientQuickTestImageOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      quickTestImageUrl(string, ImageUrl,
      Models.TrainingAPIClientQuickTestImageUrlOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.quickTestImageUrl
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function quickTestImageUrl(projectId: string, imageUrl: ImageUrl,
        options?: Models.TrainingAPIClientQuickTestImageUrlOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project to evaluate against.
        - id: imageUrl
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.ImageUrl"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref uid="Models.TrainingAPIClientQuickTestImageUrlOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QuickTestImageUrlResponse" />&gt;
        description: Promise<Models.QuickTestImageUrlResponse>
  - name: 'quickTestImageUrl(string, ImageUrl, ServiceCallback<ImagePrediction>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.quickTestImageUrl_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function quickTestImageUrl(projectId: string, imageUrl: ImageUrl,
        callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project to evaluate against.
        - id: imageUrl
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.ImageUrl"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      quickTestImageUrl(string, ImageUrl,
      TrainingAPIClientQuickTestImageUrlOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.quickTestImageUrl_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function quickTestImageUrl(projectId: string, imageUrl: ImageUrl,
        options: TrainingAPIClientQuickTestImageUrlOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project to evaluate against.
        - id: imageUrl
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.ImageUrl"
            />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientQuickTestImageUrlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.sendOperationRequest
    package: '@azure/cognitiveservices-customvision-training'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.sendRequest
    package: '@azure/cognitiveservices-customvision-training'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
  - name: 'suggestTagsAndRegions(string, string, string[], msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.suggestTagsAndRegions
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API will get suggested tags and regions for an array/batch of
      untagged images along with

      confidences for the tags. It returns an empty array if no tags are found.

      There is a limit of 64 images in the batch.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function suggestTagsAndRegions(projectId: string, iterationId: string,
        imageIds: string[], options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for tag and region suggestion.
        - id: imageIds
          type: 'string[]'
          description: >-
            Array of image ids tag suggestion are needed for. Use
            GetUntaggedImages API to

            get imageIds.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.SuggestTagsAndRegionsResponse" />&gt;
        description: Promise<Models.SuggestTagsAndRegionsResponse>
  - name: >-
      suggestTagsAndRegions(string, string, string[], RequestOptionsBase,
      ServiceCallback<SuggestedTagAndRegion[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.suggestTagsAndRegions_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function suggestTagsAndRegions(projectId: string, iterationId: string,
        imageIds: string[], options: RequestOptionsBase, callback:
        ServiceCallback<SuggestedTagAndRegion[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for tag and region suggestion.
        - id: imageIds
          type: 'string[]'
          description: >-
            Array of image ids tag suggestion are needed for. Use
            GetUntaggedImages API to

            get imageIds.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.SuggestedTagAndRegion"
            />[]&gt;
          description: |
            The callback
  - name: >-
      suggestTagsAndRegions(string, string, string[],
      ServiceCallback<SuggestedTagAndRegion[]>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.suggestTagsAndRegions_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function suggestTagsAndRegions(projectId: string, iterationId: string,
        imageIds: string[], callback: ServiceCallback<SuggestedTagAndRegion[]>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: IterationId to use for tag and region suggestion.
        - id: imageIds
          type: 'string[]'
          description: >-
            Array of image ids tag suggestion are needed for. Use
            GetUntaggedImages API to

            get imageIds.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.SuggestedTagAndRegion"
            />[]&gt;
          description: |
            The callback
  - name: 'trainProject(string, Models.TrainingAPIClientTrainProjectOptionalParams)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.trainProject
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function trainProject(projectId: string, options?:
        Models.TrainingAPIClientTrainProjectOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: <xref uid="Models.TrainingAPIClientTrainProjectOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TrainProjectResponse" />&gt;
        description: Promise<Models.TrainProjectResponse>
  - name: 'trainProject(string, ServiceCallback<Iteration>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.trainProject_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function trainProject(projectId: string, callback:
        ServiceCallback<Iteration>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />&gt;
          description: |
            The callback
  - name: >-
      trainProject(string, TrainingAPIClientTrainProjectOptionalParams,
      ServiceCallback<Iteration>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.trainProject_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function trainProject(projectId: string, options:
        TrainingAPIClientTrainProjectOptionalParams, callback:
        ServiceCallback<Iteration>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientTrainProjectOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />&gt;
          description: |
            The callback
  - name: 'unpublishIteration(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.unpublishIteration
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unpublishIteration(projectId: string, iterationId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      unpublishIteration(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.unpublishIteration_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unpublishIteration(projectId: string, iterationId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'unpublishIteration(string, string, ServiceCallback<void>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.unpublishIteration_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unpublishIteration(projectId: string, iterationId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: iterationId
          type: string
          description: The iteration id.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      updateImageMetadata(string, string[], [key: string]: string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateImageMetadata
    package: '@azure/cognitiveservices-customvision-training'
    summary: >-
      This API accepts a batch of image Ids, and metadata, to update images.
      There is a limit of 64

      images.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateImageMetadata(projectId: string, imageIds: string[],
        metadata: [key: string]: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageIds
          type: 'string[]'
          description: The list of image ids to update. Limited to 64.
        - id: metadata
          type: '[key: string]\: string'
          description: >-
            The metadata to be updated to the specified images. Limited to 10
            key-value

            pairs per image. The length of key is limited to 128. The length of
            value is limited to 256.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UpdateImageMetadataResponse" />&gt;
        description: Promise<Models.UpdateImageMetadataResponse>
  - name: >-
      updateImageMetadata(string, string[], [key: string]: string,
      RequestOptionsBase, ServiceCallback<ImageMetadataUpdateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateImageMetadata_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateImageMetadata(projectId: string, imageIds: string[],
        metadata: [key: string]: string, options: RequestOptionsBase, callback:
        ServiceCallback<ImageMetadataUpdateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageIds
          type: 'string[]'
          description: The list of image ids to update. Limited to 64.
        - id: metadata
          type: '[key: string]\: string'
          description: >-
            The metadata to be updated to the specified images. Limited to 10
            key-value

            pairs per image. The length of key is limited to 128. The length of
            value is limited to 256.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageMetadataUpdateSummary"
            />&gt;
          description: |
            The callback
  - name: >-
      updateImageMetadata(string, string[], [key: string]: string,
      ServiceCallback<ImageMetadataUpdateSummary>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateImageMetadata_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateImageMetadata(projectId: string, imageIds: string[],
        metadata: [key: string]: string, callback:
        ServiceCallback<ImageMetadataUpdateSummary>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: imageIds
          type: 'string[]'
          description: The list of image ids to update. Limited to 64.
        - id: metadata
          type: '[key: string]\: string'
          description: >-
            The metadata to be updated to the specified images. Limited to 10
            key-value

            pairs per image. The length of key is limited to 128. The length of
            value is limited to 256.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.ImageMetadataUpdateSummary"
            />&gt;
          description: |
            The callback
  - name: 'updateIteration(string, string, Iteration, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateIteration
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateIteration(projectId: string, iterationId: string,
        updatedIteration: Iteration, options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: Project id.
        - id: iterationId
          type: string
          description: Iteration id.
        - id: updatedIteration
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.Iteration"
            />
          description: The updated iteration model.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UpdateIterationResponse" />&gt;
        description: Promise<Models.UpdateIterationResponse>
  - name: >-
      updateIteration(string, string, Iteration, RequestOptionsBase,
      ServiceCallback<Iteration>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateIteration_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateIteration(projectId: string, iterationId: string,
        updatedIteration: Iteration, options: RequestOptionsBase, callback:
        ServiceCallback<Iteration>)
      parameters:
        - id: projectId
          type: string
          description: Project id.
        - id: iterationId
          type: string
          description: Iteration id.
        - id: updatedIteration
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.Iteration"
            />
          description: The updated iteration model.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />&gt;
          description: |
            The callback
  - name: 'updateIteration(string, string, Iteration, ServiceCallback<Iteration>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateIteration_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateIteration(projectId: string, iterationId: string,
        updatedIteration: Iteration, callback: ServiceCallback<Iteration>)
      parameters:
        - id: projectId
          type: string
          description: Project id.
        - id: iterationId
          type: string
          description: Iteration id.
        - id: updatedIteration
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.Iteration"
            />
          description: The updated iteration model.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Iteration"
            />&gt;
          description: |
            The callback
  - name: 'updateProject(string, Project, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateProject
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateProject(projectId: string, updatedProject: Project,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The id of the project to update.
        - id: updatedProject
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.Project"
            />
          description: The updated project model.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UpdateProjectResponse" />&gt;
        description: Promise<Models.UpdateProjectResponse>
  - name: >-
      updateProject(string, Project, RequestOptionsBase,
      ServiceCallback<Project>)
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateProject_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateProject(projectId: string, updatedProject: Project,
        options: RequestOptionsBase, callback: ServiceCallback<Project>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project to update.
        - id: updatedProject
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.Project"
            />
          description: The updated project model.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: 'updateProject(string, Project, ServiceCallback<Project>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateProject_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateProject(projectId: string, updatedProject: Project,
        callback: ServiceCallback<Project>)
      parameters:
        - id: projectId
          type: string
          description: The id of the project to update.
        - id: updatedProject
          type: >-
            <xref uid="@azure/cognitiveservices-customvision-training.Project"
            />
          description: The updated project model.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Project" />&gt;
          description: |
            The callback
  - name: 'updateTag(string, string, Tag, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-customvision-training.TrainingAPIClient.updateTag'
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTag(projectId: string, tagId: string, updatedTag: Tag,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: tagId
          type: string
          description: The id of the target tag.
        - id: updatedTag
          type: <xref uid="@azure/cognitiveservices-customvision-training.Tag" />
          description: The updated tag model.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UpdateTagResponse" />&gt;
        description: Promise<Models.UpdateTagResponse>
  - name: 'updateTag(string, string, Tag, RequestOptionsBase, ServiceCallback<Tag>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateTag_2
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTag(projectId: string, tagId: string, updatedTag: Tag,
        options: RequestOptionsBase, callback: ServiceCallback<Tag>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: tagId
          type: string
          description: The id of the target tag.
        - id: updatedTag
          type: <xref uid="@azure/cognitiveservices-customvision-training.Tag" />
          description: The updated tag model.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />&gt;
          description: |
            The callback
  - name: 'updateTag(string, string, Tag, ServiceCallback<Tag>)'
    uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClient.updateTag_1
    package: '@azure/cognitiveservices-customvision-training'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTag(projectId: string, tagId: string, updatedTag: Tag,
        callback: ServiceCallback<Tag>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: tagId
          type: string
          description: The id of the target tag.
        - id: updatedTag
          type: <xref uid="@azure/cognitiveservices-customvision-training.Tag" />
          description: The updated tag model.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-training.Tag" />&gt;
          description: |
            The callback
extends: >-
  <xref
  uid="@azure/cognitiveservices-customvision-training.TrainingAPIClientContext"
  />
