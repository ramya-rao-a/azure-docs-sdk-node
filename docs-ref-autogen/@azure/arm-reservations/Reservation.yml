### YamlMime:TSType
name: Reservation
uid: '@azure/arm-reservations.Reservation'
package: '@azure/arm-reservations'
summary: Class representing a Reservation.
fullName: Reservation
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Reservation(AzureReservationAPIContext)
    uid: '@azure/arm-reservations.Reservation.constructor'
    package: '@azure/arm-reservations'
    summary: Create a Reservation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Reservation(client: AzureReservationAPIContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-reservations.AzureReservationAPIContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      availableScopes(string, string, AvailableScopeRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-reservations.Reservation.availableScopes'
    package: '@azure/arm-reservations'
    summary: Get Available Scopes for `Reservation`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function availableScopes(reservationOrderId: string, reservationId:
        string, body: AvailableScopeRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: body
          type: <xref uid="@azure/arm-reservations.AvailableScopeRequest" />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ReservationAvailableScopesResponse"
          />&gt;
        description: Promise<Models.ReservationAvailableScopesResponse>
  - name: >-
      beginAvailableScopes(string, string, AvailableScopeRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-reservations.Reservation.beginAvailableScopes'
    package: '@azure/arm-reservations'
    summary: Get Available Scopes for `Reservation`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAvailableScopes(reservationOrderId: string, reservationId:
        string, body: AvailableScopeRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: body
          type: <xref uid="@azure/arm-reservations.AvailableScopeRequest" />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginMerge(string, MergeRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.beginMerge'
    package: '@azure/arm-reservations'
    summary: >-
      Merge the specified `Reservation`s into a new `Reservation`. The two
      `Reservation`s being merged

      must have same properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMerge(reservationOrderId: string, body: MergeRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: body
          type: <xref uid="@azure/arm-reservations.MergeRequest" />
          description: Information needed for commercial request for a reservation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginSplit(string, SplitRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.beginSplit'
    package: '@azure/arm-reservations'
    summary: >-
      Split a `Reservation` into two `Reservation`s with specified quantity
      distribution.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginSplit(reservationOrderId: string, body: SplitRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: body
          type: <xref uid="@azure/arm-reservations.SplitRequest" />
          description: Information needed to Split a reservation item
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginUpdate(string, string, Patch, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.beginUpdate'
    package: '@azure/arm-reservations'
    summary: Updates the applied scopes of the `Reservation`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(reservationOrderId: string, reservationId: string,
        parameters: Patch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: parameters
          type: <xref uid="@azure/arm-reservations.Patch" />
          description: Information needed to patch a reservation item
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'get(string, string, Models.ReservationGetOptionalParams)'
    uid: '@azure/arm-reservations.Reservation.get'
    package: '@azure/arm-reservations'
    summary: Get specific `Reservation` details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(reservationId: string, reservationOrderId: string,
        options?: Models.ReservationGetOptionalParams)
      parameters:
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: options
          type: <xref uid="Models.ReservationGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ReservationGetResponse" />&gt;
        description: Promise<Models.ReservationGetResponse>
  - name: >-
      get(string, string, ReservationGetOptionalParams,
      ServiceCallback<ReservationResponse>)
    uid: '@azure/arm-reservations.Reservation.get_2'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(reservationId: string, reservationOrderId: string, options:
        ReservationGetOptionalParams, callback:
        ServiceCallback<ReservationResponse>)
      parameters:
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: options
          type: <xref uid="@azure/arm-reservations.ReservationGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationResponse" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<ReservationResponse>)'
    uid: '@azure/arm-reservations.Reservation.get_1'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(reservationId: string, reservationOrderId: string,
        callback: ServiceCallback<ReservationResponse>)
      parameters:
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationResponse" />&gt;
          description: |
            The callback
  - name: 'list(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.list'
    package: '@azure/arm-reservations'
    summary: List `Reservation`s within a single `ReservationOrder`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(reservationOrderId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ReservationListResponse" />&gt;
        description: Promise<Models.ReservationListResponse>
  - name: 'list(string, RequestOptionsBase, ServiceCallback<ReservationList>)'
    uid: '@azure/arm-reservations.Reservation.list_2'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(reservationOrderId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ReservationList>)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'list(string, ServiceCallback<ReservationList>)'
    uid: '@azure/arm-reservations.Reservation.list_1'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(reservationOrderId: string, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.listNext'
    package: '@azure/arm-reservations'
    summary: List `Reservation`s within a single `ReservationOrder`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ReservationListNextResponse" />&gt;
        description: Promise<Models.ReservationListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<ReservationList>)'
    uid: '@azure/arm-reservations.Reservation.listNext_2'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ReservationList>)'
    uid: '@azure/arm-reservations.Reservation.listNext_1'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'listRevisions(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.listRevisions'
    package: '@azure/arm-reservations'
    summary: List of all the revisions for the `Reservation`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRevisions(reservationId: string, reservationOrderId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ReservationListRevisionsResponse" />&gt;
        description: Promise<Models.ReservationListRevisionsResponse>
  - name: >-
      listRevisions(string, string, RequestOptionsBase,
      ServiceCallback<ReservationList>)
    uid: '@azure/arm-reservations.Reservation.listRevisions_2'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRevisions(reservationId: string, reservationOrderId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'listRevisions(string, string, ServiceCallback<ReservationList>)'
    uid: '@azure/arm-reservations.Reservation.listRevisions_1'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRevisions(reservationId: string, reservationOrderId:
        string, callback: ServiceCallback<ReservationList>)
      parameters:
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'listRevisionsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.listRevisionsNext'
    package: '@azure/arm-reservations'
    summary: List of all the revisions for the `Reservation`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRevisionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ReservationListRevisionsNextResponse"
          />&gt;
        description: Promise<Models.ReservationListRevisionsNextResponse>
  - name: >-
      listRevisionsNext(string, RequestOptionsBase,
      ServiceCallback<ReservationList>)
    uid: '@azure/arm-reservations.Reservation.listRevisionsNext_2'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRevisionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'listRevisionsNext(string, ServiceCallback<ReservationList>)'
    uid: '@azure/arm-reservations.Reservation.listRevisionsNext_1'
    package: '@azure/arm-reservations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRevisionsNext(nextPageLink: string, callback:
        ServiceCallback<ReservationList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-reservations.ReservationList" />&gt;
          description: |
            The callback
  - name: 'merge(string, MergeRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.merge'
    package: '@azure/arm-reservations'
    summary: >-
      Merge the specified `Reservation`s into a new `Reservation`. The two
      `Reservation`s being merged

      must have same properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function merge(reservationOrderId: string, body: MergeRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: body
          type: <xref uid="@azure/arm-reservations.MergeRequest" />
          description: Information needed for commercial request for a reservation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ReservationMergeResponse" />&gt;
        description: Promise<Models.ReservationMergeResponse>
  - name: 'split(string, SplitRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.split'
    package: '@azure/arm-reservations'
    summary: >-
      Split a `Reservation` into two `Reservation`s with specified quantity
      distribution.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function split(reservationOrderId: string, body: SplitRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: body
          type: <xref uid="@azure/arm-reservations.SplitRequest" />
          description: Information needed to Split a reservation item
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ReservationSplitResponse" />&gt;
        description: Promise<Models.ReservationSplitResponse>
  - name: 'update(string, string, Patch, msRest.RequestOptionsBase)'
    uid: '@azure/arm-reservations.Reservation.update'
    package: '@azure/arm-reservations'
    summary: Updates the applied scopes of the `Reservation`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(reservationOrderId: string, reservationId: string,
        parameters: Patch, options?: msRest.RequestOptionsBase)
      parameters:
        - id: reservationOrderId
          type: string
          description: Order Id of the reservation
        - id: reservationId
          type: string
          description: Id of the Reservation Item
        - id: parameters
          type: <xref uid="@azure/arm-reservations.Patch" />
          description: Information needed to patch a reservation item
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ReservationUpdateResponse" />&gt;
        description: Promise<Models.ReservationUpdateResponse>
