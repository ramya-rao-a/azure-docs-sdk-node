### YamlMime:TSType
name: LinkedStorageAccounts
uid: '@azure/arm-operationalinsights.LinkedStorageAccounts'
package: '@azure/arm-operationalinsights'
summary: Class representing a LinkedStorageAccounts.
fullName: LinkedStorageAccounts
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: LinkedStorageAccounts(OperationalInsightsManagementClientContext)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.constructor'
    package: '@azure/arm-operationalinsights'
    summary: Create a LinkedStorageAccounts.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new LinkedStorageAccounts(client:
        OperationalInsightsManagementClientContext)
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-operationalinsights.OperationalInsightsManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, Models.DataSourceType,
      LinkedStorageAccountsResource, msRest.RequestOptionsBase)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate'
    package: '@azure/arm-operationalinsights'
    summary: >-
      Create or Update a link relation between current workspace and a group of
      storage accounts of a

      specific data source type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, dataSourceType: Models.DataSourceType, parameters:
        LinkedStorageAccountsResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsResource"
            />
          description: The parameters required to create or update linked storage accounts.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LinkedStorageAccountsCreateOrUpdateResponse" />&gt;
        description: Promise<Models.LinkedStorageAccountsCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, Models.DataSourceType,
      LinkedStorageAccountsResource, RequestOptionsBase,
      ServiceCallback<LinkedStorageAccountsResource>)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate_2'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, dataSourceType: Models.DataSourceType, parameters:
        LinkedStorageAccountsResource, options: RequestOptionsBase, callback:
        ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsResource"
            />
          description: The parameters required to create or update linked storage accounts.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsResource"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, Models.DataSourceType,
      LinkedStorageAccountsResource,
      ServiceCallback<LinkedStorageAccountsResource>)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.createOrUpdate_1'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, dataSourceType: Models.DataSourceType, parameters:
        LinkedStorageAccountsResource, callback:
        ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsResource"
            />
          description: The parameters required to create or update linked storage accounts.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsResource"
            />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, Models.DataSourceType,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod'
    package: '@azure/arm-operationalinsights'
    summary: >-
      Deletes all linked storage accounts of a specific data source type
      associated with the specified

      workspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, Models.DataSourceType, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod_2'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, Models.DataSourceType, ServiceCallback<void>)'
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.deleteMethod_1'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, Models.DataSourceType, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.get'
    package: '@azure/arm-operationalinsights'
    summary: >-
      Gets all linked storage account of a specific data source type associated
      with the specified

      workspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.LinkedStorageAccountsGetResponse" />&gt;
        description: Promise<Models.LinkedStorageAccountsGetResponse>
  - name: >-
      get(string, string, Models.DataSourceType, RequestOptionsBase,
      ServiceCallback<LinkedStorageAccountsResource>)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.get_2'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, options: RequestOptionsBase,
        callback: ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsResource"
            />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, Models.DataSourceType,
      ServiceCallback<LinkedStorageAccountsResource>)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.get_1'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        dataSourceType: Models.DataSourceType, callback:
        ServiceCallback<LinkedStorageAccountsResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: dataSourceType
          type: <xref uid="Models.DataSourceType" />
          description: |-
            Linked storage accounts type. Possible values include: 'CustomLogs',
            'AzureWatson', 'Query', 'Alerts'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsResource"
            />&gt;
          description: |
            The callback
  - name: 'listByWorkspace(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace'
    package: '@azure/arm-operationalinsights'
    summary: >-
      Gets all linked storage accounts associated with the specified workspace,
      storage accounts will

      be sorted by their data source type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LinkedStorageAccountsListByWorkspaceResponse" />&gt;
        description: Promise<Models.LinkedStorageAccountsListByWorkspaceResponse>
  - name: >-
      listByWorkspace(string, string, RequestOptionsBase,
      ServiceCallback<LinkedStorageAccountsListResult>)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace_2'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<LinkedStorageAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listByWorkspace(string, string,
      ServiceCallback<LinkedStorageAccountsListResult>)
    uid: '@azure/arm-operationalinsights.LinkedStorageAccounts.listByWorkspace_1'
    package: '@azure/arm-operationalinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<LinkedStorageAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operationalinsights.LinkedStorageAccountsListResult"
            />&gt;
          description: |
            The callback
