### YamlMime:TSType
name: WorkspaceAcl
uid: '@azure/synapse.WorkspaceAcl'
package: '@azure/synapse'
summary: Class representing a WorkspaceAcl.
fullName: WorkspaceAcl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: WorkspaceAcl(SynapseClientContext)
    uid: '@azure/synapse.WorkspaceAcl.constructor'
    package: '@azure/synapse'
    summary: Create a WorkspaceAcl.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new WorkspaceAcl(client: SynapseClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/synapse.SynapseClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      getAccessControlInfo(string, GetAccessControlInfoRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/synapse.WorkspaceAcl.getAccessControlInfo'
    package: '@azure/synapse'
    summary: Get access control info.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAccessControlInfo(workspaceName: string, resource:
        GetAccessControlInfoRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: resource
          type: <xref uid="@azure/synapse.GetAccessControlInfoRequest" />
          description: The resource to get the access control info for.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WorkspaceAclGetAccessControlInfoResponse"
          />&gt;
        description: Promise<Models.WorkspaceAclGetAccessControlInfoResponse>
  - name: >-
      getAccessControlInfo(string, GetAccessControlInfoRequest,
      RequestOptionsBase, ServiceCallback<WorkspaceAccessControlResponse>)
    uid: '@azure/synapse.WorkspaceAcl.getAccessControlInfo_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAccessControlInfo(workspaceName: string, resource:
        GetAccessControlInfoRequest, options: RequestOptionsBase, callback:
        ServiceCallback<WorkspaceAccessControlResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: resource
          type: <xref uid="@azure/synapse.GetAccessControlInfoRequest" />
          description: The resource to get the access control info for.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/synapse.WorkspaceAccessControlResponse" />&gt;
          description: |
            The callback
  - name: >-
      getAccessControlInfo(string, GetAccessControlInfoRequest,
      ServiceCallback<WorkspaceAccessControlResponse>)
    uid: '@azure/synapse.WorkspaceAcl.getAccessControlInfo_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAccessControlInfo(workspaceName: string, resource:
        GetAccessControlInfoRequest, callback:
        ServiceCallback<WorkspaceAccessControlResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: resource
          type: <xref uid="@azure/synapse.GetAccessControlInfoRequest" />
          description: The resource to get the access control info for.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/synapse.WorkspaceAccessControlResponse" />&gt;
          description: |
            The callback
  - name: >-
      setWorkspaceAdministrators(string, SetWorkspaceAdministratorsRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/synapse.WorkspaceAcl.setWorkspaceAdministrators'
    package: '@azure/synapse'
    summary: Replace Admins of the Workspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setWorkspaceAdministrators(workspaceName: string, request:
        SetWorkspaceAdministratorsRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: request
          type: <xref uid="@azure/synapse.SetWorkspaceAdministratorsRequest" />
          description: Details of administrators object-ids.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WorkspaceAclSetWorkspaceAdministratorsResponse" />&gt;
        description: Promise<Models.WorkspaceAclSetWorkspaceAdministratorsResponse>
  - name: >-
      setWorkspaceAdministrators(string, SetWorkspaceAdministratorsRequest,
      RequestOptionsBase, ServiceCallback<WorkspaceAccessControlResponse>)
    uid: '@azure/synapse.WorkspaceAcl.setWorkspaceAdministrators_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setWorkspaceAdministrators(workspaceName: string, request:
        SetWorkspaceAdministratorsRequest, options: RequestOptionsBase,
        callback: ServiceCallback<WorkspaceAccessControlResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: request
          type: <xref uid="@azure/synapse.SetWorkspaceAdministratorsRequest" />
          description: Details of administrators object-ids.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/synapse.WorkspaceAccessControlResponse" />&gt;
          description: |
            The callback
  - name: >-
      setWorkspaceAdministrators(string, SetWorkspaceAdministratorsRequest,
      ServiceCallback<WorkspaceAccessControlResponse>)
    uid: '@azure/synapse.WorkspaceAcl.setWorkspaceAdministrators_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setWorkspaceAdministrators(workspaceName: string, request:
        SetWorkspaceAdministratorsRequest, callback:
        ServiceCallback<WorkspaceAccessControlResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: request
          type: <xref uid="@azure/synapse.SetWorkspaceAdministratorsRequest" />
          description: Details of administrators object-ids.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/synapse.WorkspaceAccessControlResponse" />&gt;
          description: |
            The callback
