### YamlMime:TSType
name: WebServices
uid: '@azure/arm-webservices.WebServices'
package: '@azure/arm-webservices'
summary: Class representing a WebServices.
fullName: WebServices
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: WebServices(AzureMLWebServicesManagementClientContext)
    uid: '@azure/arm-webservices.WebServices.constructor'
    package: '@azure/arm-webservices'
    summary: Create a WebServices.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new WebServices(client: AzureMLWebServicesManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-webservices.AzureMLWebServicesManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'beginCreateOrUpdate(string, string, WebService, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.beginCreateOrUpdate'
    package: '@azure/arm-webservices'
    summary: >-
      Create or update a web service. This call will overwrite an existing web
      service. Note that

      there is no warning or confirmation. This is a nonrecoverable operation.
      If your intent is to

      create a new web service, call the Get operation first to verify that it
      does not exist.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, webServiceName:
        string, createOrUpdatePayload: WebService, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: createOrUpdatePayload
          type: <xref uid="@azure/arm-webservices.WebService" />
          description: The payload that is used to create or update the web service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateRegionalProperties(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-webservices.WebServices.beginCreateRegionalProperties'
    package: '@azure/arm-webservices'
    summary: >-
      Creates an encrypted credentials parameter blob for the specified region.
      To get the web service

      from a region other than the region in which it has been created, you must
      first call Create

      Regional Web Services Properties to create a copy of the encrypted
      credential parameter blob in

      that region. You only need to do this before the first time that you get
      the web service in the

      new region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateRegionalProperties(resourceGroupName: string,
        webServiceName: string, region: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: region
          type: string
          description: The region for which encrypted credential parameters are created.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginPatch(string, string, WebService, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.beginPatch'
    package: '@azure/arm-webservices'
    summary: >-
      Modifies an existing web service resource. The PATCH API call is an
      asynchronous operation. To

      determine whether it has completed successfully, you must perform a Get
      operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPatch(resourceGroupName: string, webServiceName: string,
        patchPayload: WebService, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: patchPayload
          type: <xref uid="@azure/arm-webservices.WebService" />
          description: The payload to use to patch the web service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginRemove(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.beginRemove'
    package: '@azure/arm-webservices'
    summary: Deletes the specified web service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRemove(resourceGroupName: string, webServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'createOrUpdate(string, string, WebService, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.createOrUpdate'
    package: '@azure/arm-webservices'
    summary: >-
      Create or update a web service. This call will overwrite an existing web
      service. Note that

      there is no warning or confirmation. This is a nonrecoverable operation.
      If your intent is to

      create a new web service, call the Get operation first to verify that it
      does not exist.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, webServiceName:
        string, createOrUpdatePayload: WebService, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: createOrUpdatePayload
          type: <xref uid="@azure/arm-webservices.WebService" />
          description: The payload that is used to create or update the web service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebServicesCreateOrUpdateResponse" />&gt;
        description: Promise<Models.WebServicesCreateOrUpdateResponse>
  - name: >-
      createRegionalProperties(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-webservices.WebServices.createRegionalProperties'
    package: '@azure/arm-webservices'
    summary: >-
      Creates an encrypted credentials parameter blob for the specified region.
      To get the web service

      from a region other than the region in which it has been created, you must
      first call Create

      Regional Web Services Properties to create a copy of the encrypted
      credential parameter blob in

      that region. You only need to do this before the first time that you get
      the web service in the

      new region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createRegionalProperties(resourceGroupName: string,
        webServiceName: string, region: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: region
          type: string
          description: The region for which encrypted credential parameters are created.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebServicesCreateRegionalPropertiesResponse" />&gt;
        description: Promise<Models.WebServicesCreateRegionalPropertiesResponse>
  - name: 'get(string, string, Models.WebServicesGetOptionalParams)'
    uid: '@azure/arm-webservices.WebServices.get'
    package: '@azure/arm-webservices'
    summary: >-
      Gets the Web Service Definition as specified by a subscription, resource
      group, and name. Note

      that the storage credentials and web service keys are not returned by this
      call. To get the web

      service access keys, call List Keys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, webServiceName: string,
        options?: Models.WebServicesGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: <xref uid="Models.WebServicesGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebServicesGetResponse" />&gt;
        description: Promise<Models.WebServicesGetResponse>
  - name: 'get(string, string, ServiceCallback<WebService>)'
    uid: '@azure/arm-webservices.WebServices.get_1'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, webServiceName: string,
        callback: ServiceCallback<WebService>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-webservices.WebService"
            />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, WebServicesGetOptionalParams,
      ServiceCallback<WebService>)
    uid: '@azure/arm-webservices.WebServices.get_2'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, webServiceName: string, options:
        WebServicesGetOptionalParams, callback: ServiceCallback<WebService>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: <xref uid="@azure/arm-webservices.WebServicesGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-webservices.WebService"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string,
      Models.WebServicesListByResourceGroupOptionalParams)
    uid: '@azure/arm-webservices.WebServices.listByResourceGroup'
    package: '@azure/arm-webservices'
    summary: Gets the web services in the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.WebServicesListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: options
          type: <xref uid="Models.WebServicesListByResourceGroupOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebServicesListByResourceGroupResponse"
          />&gt;
        description: Promise<Models.WebServicesListByResourceGroupResponse>
  - name: 'listByResourceGroup(string, ServiceCallback<PaginatedWebServicesList>)'
    uid: '@azure/arm-webservices.WebServices.listByResourceGroup_1'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string, WebServicesListByResourceGroupOptionalParams,
      ServiceCallback<PaginatedWebServicesList>)
    uid: '@azure/arm-webservices.WebServices.listByResourceGroup_2'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        WebServicesListByResourceGroupOptionalParams, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesListByResourceGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.listByResourceGroupNext'
    package: '@azure/arm-webservices'
    summary: Gets the web services in the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebServicesListByResourceGroupNextResponse" />&gt;
        description: Promise<Models.WebServicesListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<PaginatedWebServicesList>)
    uid: '@azure/arm-webservices.WebServices.listByResourceGroupNext_2'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<PaginatedWebServicesList>)'
    uid: '@azure/arm-webservices.WebServices.listByResourceGroupNext_1'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: listBySubscriptionId(Models.WebServicesListBySubscriptionIdOptionalParams)
    uid: '@azure/arm-webservices.WebServices.listBySubscriptionId'
    package: '@azure/arm-webservices'
    summary: Gets the web services in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(options?:
        Models.WebServicesListBySubscriptionIdOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.WebServicesListBySubscriptionIdOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebServicesListBySubscriptionIdResponse"
          />&gt;
        description: Promise<Models.WebServicesListBySubscriptionIdResponse>
  - name: listBySubscriptionId(ServiceCallback<PaginatedWebServicesList>)
    uid: '@azure/arm-webservices.WebServices.listBySubscriptionId_1'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: >-
      listBySubscriptionId(WebServicesListBySubscriptionIdOptionalParams,
      ServiceCallback<PaginatedWebServicesList>)
    uid: '@azure/arm-webservices.WebServices.listBySubscriptionId_2'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(options:
        WebServicesListBySubscriptionIdOptionalParams, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesListBySubscriptionIdOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionIdNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.listBySubscriptionIdNext'
    package: '@azure/arm-webservices'
    summary: Gets the web services in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebServicesListBySubscriptionIdNextResponse" />&gt;
        description: Promise<Models.WebServicesListBySubscriptionIdNextResponse>
  - name: >-
      listBySubscriptionIdNext(string, RequestOptionsBase,
      ServiceCallback<PaginatedWebServicesList>)
    uid: '@azure/arm-webservices.WebServices.listBySubscriptionIdNext_2'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: >-
      listBySubscriptionIdNext(string,
      ServiceCallback<PaginatedWebServicesList>)
    uid: '@azure/arm-webservices.WebServices.listBySubscriptionIdNext_1'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionIdNext(nextPageLink: string, callback:
        ServiceCallback<PaginatedWebServicesList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-webservices.PaginatedWebServicesList" />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.listKeys'
    package: '@azure/arm-webservices'
    summary: Gets the access keys for the specified web service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, webServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebServicesListKeysResponse" />&gt;
        description: Promise<Models.WebServicesListKeysResponse>
  - name: >-
      listKeys(string, string, RequestOptionsBase,
      ServiceCallback<WebServiceKeys>)
    uid: '@azure/arm-webservices.WebServices.listKeys_2'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, webServiceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<WebServiceKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-webservices.WebServiceKeys"
            />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, ServiceCallback<WebServiceKeys>)'
    uid: '@azure/arm-webservices.WebServices.listKeys_1'
    package: '@azure/arm-webservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, webServiceName: string,
        callback: ServiceCallback<WebServiceKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-webservices.WebServiceKeys"
            />&gt;
          description: |
            The callback
  - name: 'patch(string, string, WebService, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.patch'
    package: '@azure/arm-webservices'
    summary: >-
      Modifies an existing web service resource. The PATCH API call is an
      asynchronous operation. To

      determine whether it has completed successfully, you must perform a Get
      operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(resourceGroupName: string, webServiceName: string,
        patchPayload: WebService, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: patchPayload
          type: <xref uid="@azure/arm-webservices.WebService" />
          description: The payload to use to patch the web service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebServicesPatchResponse" />&gt;
        description: Promise<Models.WebServicesPatchResponse>
  - name: 'remove(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-webservices.WebServices.remove'
    package: '@azure/arm-webservices'
    summary: Deletes the specified web service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function remove(resourceGroupName: string, webServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
