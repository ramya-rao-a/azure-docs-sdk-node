### YamlMime:TSType
name: TextModeration
uid: '@azure/cognitiveservices-contentmoderator.TextModeration'
package: '@azure/cognitiveservices-contentmoderator'
summary: Class representing a TextModeration.
fullName: TextModeration
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: TextModeration(ContentModeratorClientContext)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.constructor'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Create a TextModeration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TextModeration(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      detectLanguage(Models.TextContentType1, msRest.HttpRequestBody,
      msRest.RequestOptionsBase)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: >-
      This operation will detect the language of given input content. Returns
      the <a

      href="http://www-01.sil.org/iso639-3/codes.asp">ISO 639-3 code</a> for the
      predominant language

      comprising the submitted text. Over 110 languages supported.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(textContentType: Models.TextContentType1,
        textContent: msRest.HttpRequestBody, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: textContentType
          type: <xref uid="Models.TextContentType1" />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="msRest.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.TextModerationDetectLanguageResponse"
          />&gt;
        description: Promise<Models.TextModerationDetectLanguageResponse>
  - name: >-
      detectLanguage(Models.TextContentType1, msRest.HttpRequestBody,
      RequestOptionsBase, ServiceCallback<DetectedLanguage>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(textContentType: Models.TextContentType1,
        textContent: msRest.HttpRequestBody, options: RequestOptionsBase,
        callback: ServiceCallback<DetectedLanguage>)
      parameters:
        - id: textContentType
          type: <xref uid="Models.TextContentType1" />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="msRest.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.DetectedLanguage"
            />&gt;
          description: |
            The callback
  - name: >-
      detectLanguage(Models.TextContentType1, msRest.HttpRequestBody,
      ServiceCallback<DetectedLanguage>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(textContentType: Models.TextContentType1,
        textContent: msRest.HttpRequestBody, callback:
        ServiceCallback<DetectedLanguage>)
      parameters:
        - id: textContentType
          type: <xref uid="Models.TextContentType1" />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="msRest.HttpRequestBody" />
          description: Content to screen.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.DetectedLanguage"
            />&gt;
          description: |
            The callback
  - name: >-
      screenText(Models.TextContentType, msRest.HttpRequestBody,
      Models.TextModerationScreenTextOptionalParams)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: >-
      Detects profanity in more than 100 languages and match against custom and
      shared blacklists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function screenText(textContentType: Models.TextContentType,
        textContent: msRest.HttpRequestBody, options?:
        Models.TextModerationScreenTextOptionalParams)
      parameters:
        - id: textContentType
          type: <xref uid="Models.TextContentType" />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="msRest.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: <xref uid="Models.TextModerationScreenTextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TextModerationScreenTextResponse" />&gt;
        description: Promise<Models.TextModerationScreenTextResponse>
  - name: >-
      screenText(Models.TextContentType, msRest.HttpRequestBody,
      ServiceCallback<Screen>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function screenText(textContentType: Models.TextContentType,
        textContent: msRest.HttpRequestBody, callback: ServiceCallback<Screen>)
      parameters:
        - id: textContentType
          type: <xref uid="Models.TextContentType" />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="msRest.HttpRequestBody" />
          description: Content to screen.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Screen" />&gt;
          description: |
            The callback
  - name: >-
      screenText(Models.TextContentType, msRest.HttpRequestBody,
      TextModerationScreenTextOptionalParams, ServiceCallback<Screen>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function screenText(textContentType: Models.TextContentType,
        textContent: msRest.HttpRequestBody, options:
        TextModerationScreenTextOptionalParams, callback:
        ServiceCallback<Screen>)
      parameters:
        - id: textContentType
          type: <xref uid="Models.TextContentType" />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="msRest.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.TextModerationScreenTextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.Screen" />&gt;
          description: |
            The callback
