### YamlMime:TSType
name: ListManagementTermLists
uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists'
package: '@azure/cognitiveservices-contentmoderator'
summary: Class representing a ListManagementTermLists.
fullName: ListManagementTermLists
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ListManagementTermLists(ContentModeratorClientContext)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.constructor
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Create a ListManagementTermLists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ListManagementTermLists(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'create(string, Body, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.create'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Creates a Term List
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(contentType: string, body: Body, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: contentType
          type: string
          description: The content type.
        - id: body
          type: <xref uid="@azure/cognitiveservices-contentmoderator.Body" />
          description: Schema of the body.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ListManagementTermListsCreateResponse"
          />&gt;
        description: Promise<Models.ListManagementTermListsCreateResponse>
  - name: 'create(string, Body, RequestOptionsBase, ServiceCallback<TermList>)'
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.create_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(contentType: string, body: Body, options:
        RequestOptionsBase, callback: ServiceCallback<TermList>)
      parameters:
        - id: contentType
          type: string
          description: The content type.
        - id: body
          type: <xref uid="@azure/cognitiveservices-contentmoderator.Body" />
          description: Schema of the body.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />&gt;
          description: |
            The callback
  - name: 'create(string, Body, ServiceCallback<TermList>)'
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.create_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(contentType: string, body: Body, callback:
        ServiceCallback<TermList>)
      parameters:
        - id: contentType
          type: string
          description: The content type.
        - id: body
          type: <xref uid="@azure/cognitiveservices-contentmoderator.Body" />
          description: Schema of the body.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Deletes term list with the list Id equal to list Id passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(listId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ListManagementTermListsDeleteMethodResponse" />&gt;
        description: Promise<Models.ListManagementTermListsDeleteMethodResponse>
  - name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<string>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, ServiceCallback<string>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.deleteMethod_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(listId: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: getAllTermLists(msRest.RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists
    package: '@azure/cognitiveservices-contentmoderator'
    summary: gets all the Term Lists
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAllTermLists(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ListManagementTermListsGetAllTermListsResponse" />&gt;
        description: Promise<Models.ListManagementTermListsGetAllTermListsResponse>
  - name: 'getAllTermLists(RequestOptionsBase, ServiceCallback<TermList[]>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllTermLists(options: RequestOptionsBase, callback:
        ServiceCallback<TermList[]>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />[]&gt;
          description: |
            The callback
  - name: 'getAllTermLists(ServiceCallback<TermList[]>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getAllTermLists_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAllTermLists(callback: ServiceCallback<TermList[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />[]&gt;
          description: |
            The callback
  - name: 'getDetails(string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails
    package: '@azure/cognitiveservices-contentmoderator'
    summary: >-
      Returns list Id details of the term list with list Id equal to list Id
      passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDetails(listId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ListManagementTermListsGetDetailsResponse" />&gt;
        description: Promise<Models.ListManagementTermListsGetDetailsResponse>
  - name: 'getDetails(string, RequestOptionsBase, ServiceCallback<TermList>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDetails(listId: string, options: RequestOptionsBase,
        callback: ServiceCallback<TermList>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />&gt;
          description: |
            The callback
  - name: 'getDetails(string, ServiceCallback<TermList>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.getDetails_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDetails(listId: string, callback: ServiceCallback<TermList>)'
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />&gt;
          description: |
            The callback
  - name: 'refreshIndexMethod(string, string, msRest.RequestOptionsBase)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Refreshes the index of the list with list Id equal to list ID passed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, language: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ListManagementTermListsRefreshIndexMethodResponse" />&gt;
        description: Promise<Models.ListManagementTermListsRefreshIndexMethodResponse>
  - name: >-
      refreshIndexMethod(string, string, RequestOptionsBase,
      ServiceCallback<RefreshIndex>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, language: string, options:
        RequestOptionsBase, callback: ServiceCallback<RefreshIndex>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.RefreshIndex" />&gt;
          description: |
            The callback
  - name: 'refreshIndexMethod(string, string, ServiceCallback<RefreshIndex>)'
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTermLists.refreshIndexMethod_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function refreshIndexMethod(listId: string, language: string, callback:
        ServiceCallback<RefreshIndex>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.RefreshIndex" />&gt;
          description: |
            The callback
  - name: 'update(string, string, Body, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.update'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Updates an Term List.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: contentType
          type: string
          description: The content type.
        - id: body
          type: <xref uid="@azure/cognitiveservices-contentmoderator.Body" />
          description: Schema of the body.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ListManagementTermListsUpdateResponse"
          />&gt;
        description: Promise<Models.ListManagementTermListsUpdateResponse>
  - name: >-
      update(string, string, Body, RequestOptionsBase,
      ServiceCallback<TermList>)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.update_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        options: RequestOptionsBase, callback: ServiceCallback<TermList>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: contentType
          type: string
          description: The content type.
        - id: body
          type: <xref uid="@azure/cognitiveservices-contentmoderator.Body" />
          description: Schema of the body.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />&gt;
          description: |
            The callback
  - name: 'update(string, string, Body, ServiceCallback<TermList>)'
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermLists.update_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(listId: string, contentType: string, body: Body,
        callback: ServiceCallback<TermList>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: contentType
          type: string
          description: The content type.
        - id: body
          type: <xref uid="@azure/cognitiveservices-contentmoderator.Body" />
          description: Schema of the body.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.TermList" />&gt;
          description: |
            The callback
