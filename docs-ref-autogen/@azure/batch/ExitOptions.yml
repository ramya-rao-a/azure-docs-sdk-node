### YamlMime:TSType
name: ExitOptions
uid: '@azure/batch.ExitOptions'
package: '@azure/batch'
summary: An interface representing ExitOptions.
fullName: ExitOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: dependencyAction
    uid: '@azure/batch.ExitOptions.dependencyAction'
    package: '@azure/batch'
    summary: >-
      An action that the Batch service performs on Tasks that depend on this
      Task. Possible values

      are 'satisfy' (allowing dependent tasks to progress) and 'block'
      (dependent tasks continue to

      wait). Batch does not yet support cancellation of dependent tasks.
      Possible values include:

      'satisfy', 'block'
    fullName: dependencyAction
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dependencyAction?: DependencyAction'
      return:
        type: <xref uid="@azure/batch.DependencyAction" />
        description: ''
  - name: jobAction
    uid: '@azure/batch.ExitOptions.jobAction'
    package: '@azure/batch'
    summary: >-
      An action to take on the Job containing the Task, if the Task completes
      with the given exit

      condition and the Job's onTaskFailed property is
      'performExitOptionsJobAction'. The default is

      none for exit code 0 and terminate for all other exit conditions. If the
      Job's onTaskFailed

      property is noaction, then specifying this property returns an error and
      the add Task request

      fails with an invalid property value error; if you are calling the REST
      API directly, the HTTP

      status code is 400 (Bad Request). Possible values include: 'none',
      'disable', 'terminate'
    fullName: jobAction
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'jobAction?: JobAction'
      return:
        type: <xref uid="@azure/batch.JobAction" />
        description: ''
