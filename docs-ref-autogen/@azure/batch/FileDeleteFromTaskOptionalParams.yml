### YamlMime:TSType
name: FileDeleteFromTaskOptionalParams
uid: '@azure/batch.FileDeleteFromTaskOptionalParams'
package: '@azure/batch'
summary: Optional Parameters.
fullName: FileDeleteFromTaskOptionalParams
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: abortSignal
    uid: '@azure/batch.FileDeleteFromTaskOptionalParams.abortSignal'
    package: '@azure/batch'
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type: AbortSignalLike
        description: ''
  - name: customHeaders
    uid: '@azure/batch.FileDeleteFromTaskOptionalParams.customHeaders'
    package: '@azure/batch'
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type: 'undefined | [key: string]: string'
        description: ''
  - name: fileDeleteFromTaskOptions
    uid: '@azure/batch.FileDeleteFromTaskOptionalParams.fileDeleteFromTaskOptions'
    package: '@azure/batch'
    summary: Additional parameters for the operation
    fullName: fileDeleteFromTaskOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fileDeleteFromTaskOptions?: FileDeleteFromTaskOptions'
      return:
        type: <xref uid="@azure/batch.FileDeleteFromTaskOptions" />
        description: ''
  - name: onDownloadProgress
    uid: '@azure/batch.FileDeleteFromTaskOptionalParams.onDownloadProgress'
    package: '@azure/batch'
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: onUploadProgress
    uid: '@azure/batch.FileDeleteFromTaskOptionalParams.onUploadProgress'
    package: '@azure/batch'
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: recursive
    uid: '@azure/batch.FileDeleteFromTaskOptionalParams.recursive'
    package: '@azure/batch'
    summary: >-
      Whether to delete children of a directory. If the filePath parameter
      represents a directory

      instead of a file, you can set recursive to true to delete the directory
      and all of the files

      and subdirectories in it. If recursive is false then the directory must be
      empty or deletion

      will fail.
    fullName: recursive
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'recursive?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: timeout
    uid: '@azure/batch.FileDeleteFromTaskOptionalParams.timeout'
    package: '@azure/batch'
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type: undefined | number
        description: ''
extends: RequestOptionsBase
