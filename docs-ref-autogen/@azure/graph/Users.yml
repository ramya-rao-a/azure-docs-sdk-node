### YamlMime:TSType
name: Users
uid: '@azure/graph.Users'
package: '@azure/graph'
summary: Class representing a Users.
fullName: Users
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Users(GraphRbacManagementClientContext)
    uid: '@azure/graph.Users.constructor'
    package: '@azure/graph'
    summary: Create a Users.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Users(client: GraphRbacManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/graph.GraphRbacManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'create(UserCreateParameters, msRest.RequestOptionsBase)'
    uid: '@azure/graph.Users.create'
    package: '@azure/graph'
    summary: Create a new user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(parameters: UserCreateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type: <xref uid="@azure/graph.UserCreateParameters" />
          description: Parameters to create a user.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UsersCreateResponse" />&gt;
        description: Promise<Models.UsersCreateResponse>
  - name: 'create(UserCreateParameters, RequestOptionsBase, ServiceCallback<User>)'
    uid: '@azure/graph.Users.create_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(parameters: UserCreateParameters, options:
        RequestOptionsBase, callback: ServiceCallback<User>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/graph.UserCreateParameters" />
          description: Parameters to create a user.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.User" />&gt;
          description: |
            The callback
  - name: 'create(UserCreateParameters, ServiceCallback<User>)'
    uid: '@azure/graph.Users.create_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(parameters: UserCreateParameters, callback:
        ServiceCallback<User>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/graph.UserCreateParameters" />
          description: Parameters to create a user.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.User" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.Users.deleteMethod'
    package: '@azure/graph'
    summary: Delete a user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(upnOrObjectId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: upnOrObjectId
          type: string
          description: The object ID or principal name of the user to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/graph.Users.deleteMethod_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(upnOrObjectId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: upnOrObjectId
          type: string
          description: The object ID or principal name of the user to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, ServiceCallback<void>)'
    uid: '@azure/graph.Users.deleteMethod_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(upnOrObjectId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: upnOrObjectId
          type: string
          description: The object ID or principal name of the user to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.Users.get'
    package: '@azure/graph'
    summary: Gets user information from the directory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(upnOrObjectId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: upnOrObjectId
          type: string
          description: >-
            The object ID or principal name of the user for which to get
            information.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UsersGetResponse" />&gt;
        description: Promise<Models.UsersGetResponse>
  - name: 'get(string, RequestOptionsBase, ServiceCallback<User>)'
    uid: '@azure/graph.Users.get_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(upnOrObjectId: string, options: RequestOptionsBase,
        callback: ServiceCallback<User>)
      parameters:
        - id: upnOrObjectId
          type: string
          description: >-
            The object ID or principal name of the user for which to get
            information.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.User" />&gt;
          description: |
            The callback
  - name: 'get(string, ServiceCallback<User>)'
    uid: '@azure/graph.Users.get_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(upnOrObjectId: string, callback: ServiceCallback<User>)'
      parameters:
        - id: upnOrObjectId
          type: string
          description: >-
            The object ID or principal name of the user for which to get
            information.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.User" />&gt;
          description: |
            The callback
  - name: >-
      getMemberGroups(string, UserGetMemberGroupsParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/graph.Users.getMemberGroups'
    package: '@azure/graph'
    summary: >-
      Gets a collection that contains the object IDs of the groups of which the
      user is a member.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMemberGroups(objectId: string, parameters:
        UserGetMemberGroupsParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the user for which to get group membership.
        - id: parameters
          type: <xref uid="@azure/graph.UserGetMemberGroupsParameters" />
          description: User filtering parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UsersGetMemberGroupsResponse" />&gt;
        description: Promise<Models.UsersGetMemberGroupsResponse>
  - name: >-
      getMemberGroups(string, UserGetMemberGroupsParameters, RequestOptionsBase,
      ServiceCallback<UserGetMemberGroupsResult>)
    uid: '@azure/graph.Users.getMemberGroups_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMemberGroups(objectId: string, parameters:
        UserGetMemberGroupsParameters, options: RequestOptionsBase, callback:
        ServiceCallback<UserGetMemberGroupsResult>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the user for which to get group membership.
        - id: parameters
          type: <xref uid="@azure/graph.UserGetMemberGroupsParameters" />
          description: User filtering parameters.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.UserGetMemberGroupsResult" />&gt;
          description: |
            The callback
  - name: >-
      getMemberGroups(string, UserGetMemberGroupsParameters,
      ServiceCallback<UserGetMemberGroupsResult>)
    uid: '@azure/graph.Users.getMemberGroups_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMemberGroups(objectId: string, parameters:
        UserGetMemberGroupsParameters, callback:
        ServiceCallback<UserGetMemberGroupsResult>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the user for which to get group membership.
        - id: parameters
          type: <xref uid="@azure/graph.UserGetMemberGroupsParameters" />
          description: User filtering parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.UserGetMemberGroupsResult" />&gt;
          description: |
            The callback
  - name: list(Models.UsersListOptionalParams)
    uid: '@azure/graph.Users.list'
    package: '@azure/graph'
    summary: Gets list of users for the current tenant.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.UsersListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.UsersListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UsersListResponse" />&gt;
        description: Promise<Models.UsersListResponse>
  - name: list(ServiceCallback<UserListResult>)
    uid: '@azure/graph.Users.list_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<UserListResult>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.UserListResult" />&gt;
          description: |
            The callback
  - name: 'list(UsersListOptionalParams, ServiceCallback<UserListResult>)'
    uid: '@azure/graph.Users.list_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: UsersListOptionalParams, callback:
        ServiceCallback<UserListResult>)
      parameters:
        - id: options
          type: <xref uid="@azure/graph.UsersListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.UserListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.Users.listNext'
    package: '@azure/graph'
    summary: Gets a list of users for the current tenant.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listNext(nextLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextLink
          type: string
          description: Next link for the list operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UsersListNextResponse" />&gt;
        description: Promise<Models.UsersListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<UserListResult>)'
    uid: '@azure/graph.Users.listNext_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<UserListResult>)
      parameters:
        - id: nextLink
          type: string
          description: Next link for the list operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.UserListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<UserListResult>)'
    uid: '@azure/graph.Users.listNext_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextLink: string, callback:
        ServiceCallback<UserListResult>)
      parameters:
        - id: nextLink
          type: string
          description: Next link for the list operation.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.UserListResult" />&gt;
          description: |
            The callback
  - name: 'update(string, UserUpdateParameters, msRest.RequestOptionsBase)'
    uid: '@azure/graph.Users.update'
    package: '@azure/graph'
    summary: Updates a user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(upnOrObjectId: string, parameters: UserUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: upnOrObjectId
          type: string
          description: The object ID or principal name of the user to update.
        - id: parameters
          type: <xref uid="@azure/graph.UserUpdateParameters" />
          description: Parameters to update an existing user.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      update(string, UserUpdateParameters, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/graph.Users.update_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(upnOrObjectId: string, parameters: UserUpdateParameters,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: upnOrObjectId
          type: string
          description: The object ID or principal name of the user to update.
        - id: parameters
          type: <xref uid="@azure/graph.UserUpdateParameters" />
          description: Parameters to update an existing user.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'update(string, UserUpdateParameters, ServiceCallback<void>)'
    uid: '@azure/graph.Users.update_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(upnOrObjectId: string, parameters: UserUpdateParameters,
        callback: ServiceCallback<void>)
      parameters:
        - id: upnOrObjectId
          type: string
          description: The object ID or principal name of the user to update.
        - id: parameters
          type: <xref uid="@azure/graph.UserUpdateParameters" />
          description: Parameters to update an existing user.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
