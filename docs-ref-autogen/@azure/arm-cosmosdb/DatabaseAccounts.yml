### YamlMime:TSType
name: DatabaseAccounts
uid: '@azure/arm-cosmosdb.DatabaseAccounts'
package: '@azure/arm-cosmosdb'
summary: Class representing a DatabaseAccounts.
fullName: DatabaseAccounts
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: DatabaseAccounts(CosmosDBManagementClientContext)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
    package: '@azure/arm-cosmosdb'
    summary: Create a DatabaseAccounts.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DatabaseAccounts(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-cosmosdb.CosmosDBManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, DatabaseAccountCreateUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Creates or updates an Azure Cosmos DB database account. The "Update"
      method is preferred when

      performing updates on an account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, accountName:
        string, createUpdateParameters: DatabaseAccountCreateUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: createUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginFailoverPriorityChange(string, string, FailoverPolicies,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Changes the failover priority for the Azure Cosmos DB database account. A
      failover priority of 0

      indicates a write region. The maximum value for a failover priority =
      (total number of regions -

      1). Failover priority values must be unique for each of the regions in
      which the database

      account exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFailoverPriorityChange(resourceGroupName: string,
        accountName: string, failoverParameters: FailoverPolicies, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: failoverParameters
          type: <xref uid="@azure/arm-cosmosdb.FailoverPolicies" />
          description: The new failover policies for the database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginOfflineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Offline the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginOfflineRegion(resourceGroupName: string, accountName:
        string, regionParameterForOffline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOffline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to offline for the database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginOnlineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Online the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginOnlineRegion(resourceGroupName: string, accountName:
        string, regionParameterForOnline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOnline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to online for the database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRegenerateKey(string, string, DatabaseAccountRegenerateKeyParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Regenerates an access key for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKey(resourceGroupName: string, accountName:
        string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyToRegenerate
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters" />
          description: The name of the key to regenerate.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdate(string, string, DatabaseAccountUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdate'
    package: '@azure/arm-cosmosdb'
    summary: Updates the properties of an existing Azure Cosmos DB database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, accountName: string,
        updateParameters: DatabaseAccountUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: updateParameters
          type: <xref uid="@azure/arm-cosmosdb.DatabaseAccountUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'checkNameExists(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Checks that the Azure Cosmos DB account name already exists. A valid
      account name may contain

      only lowercase letters, numbers, and the '-' character, and must be
      between 3 and 50 characters.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameExists(accountName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabaseAccountsCheckNameExistsResponse"
          />&gt;
        description: Promise<Models.DatabaseAccountsCheckNameExistsResponse>
  - name: 'checkNameExists(string, RequestOptionsBase, ServiceCallback<boolean>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameExists(accountName: string, options:
        RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'checkNameExists(string, ServiceCallback<boolean>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameExists(accountName: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, DatabaseAccountCreateUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Creates or updates an Azure Cosmos DB database account. The "Update"
      method is preferred when

      performing updates on an account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, accountName: string,
        createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: createUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabaseAccountsCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.DatabaseAccountsCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      failoverPriorityChange(string, string, FailoverPolicies,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Changes the failover priority for the Azure Cosmos DB database account. A
      failover priority of 0

      indicates a write region. The maximum value for a failover priority =
      (total number of regions -

      1). Failover priority values must be unique for each of the regions in
      which the database

      account exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function failoverPriorityChange(resourceGroupName: string, accountName:
        string, failoverParameters: FailoverPolicies, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: failoverParameters
          type: <xref uid="@azure/arm-cosmosdb.FailoverPolicies" />
          description: The new failover policies for the database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.get'
    package: '@azure/arm-cosmosdb'
    summary: Retrieves the properties of an existing Azure Cosmos DB database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabaseAccountsGetResponse" />&gt;
        description: Promise<Models.DatabaseAccountsGetResponse>
  - name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountGetResults>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<DatabaseAccountGetResults>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, callback:
        ServiceCallback<DatabaseAccountGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />&gt;
          description: |
            The callback
  - name: 'getReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the read-only access keys for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReadOnlyKeys(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabaseAccountsGetReadOnlyKeysResponse"
          />&gt;
        description: Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
  - name: >-
      getReadOnlyKeys(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReadOnlyKeys(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult"
            />&gt;
          description: |
            The callback
  - name: >-
      getReadOnlyKeys(string, string,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReadOnlyKeys(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult"
            />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.list'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists all the Azure Cosmos DB database accounts available under the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabaseAccountsListResponse" />&gt;
        description: Promise<Models.DatabaseAccountsListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountsListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<DatabaseAccountsListResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists all the Azure Cosmos DB database accounts available under the given
      resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DatabaseAccountsListByResourceGroupResponse" />&gt;
        description: Promise<Models.DatabaseAccountsListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountsListResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<DatabaseAccountsListResult>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<DatabaseAccountsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListResult" />&gt;
          description: |
            The callback
  - name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the connection strings for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DatabaseAccountsListConnectionStringsResponse" />&gt;
        description: Promise<Models.DatabaseAccountsListConnectionStringsResponse>
  - name: >-
      listConnectionStrings(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListConnectionStringsResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListConnectionStringsResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listConnectionStrings(string, string,
      ServiceCallback<DatabaseAccountListConnectionStringsResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, accountName:
        string, callback:
        ServiceCallback<DatabaseAccountListConnectionStringsResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult"
            />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
    package: '@azure/arm-cosmosdb'
    summary: Lists the access keys for the specified Azure Cosmos DB database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabaseAccountsListKeysResponse" />&gt;
        description: Promise<Models.DatabaseAccountsListKeysResponse>
  - name: >-
      listKeys(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListKeysResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListKeysResult" />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, ServiceCallback<DatabaseAccountListKeysResult>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<DatabaseAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListKeysResult" />&gt;
          description: |
            The callback
  - name: 'listMetricDefinitions(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
    package: '@azure/arm-cosmosdb'
    summary: Retrieves metric definitions for the given database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DatabaseAccountsListMetricDefinitionsResponse" />&gt;
        description: Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
  - name: >-
      listMetricDefinitions(string, string, RequestOptionsBase,
      ServiceCallback<MetricDefinitionsListResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<MetricDefinitionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.MetricDefinitionsListResult" />&gt;
          description: |
            The callback
  - name: >-
      listMetricDefinitions(string, string,
      ServiceCallback<MetricDefinitionsListResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, accountName:
        string, callback: ServiceCallback<MetricDefinitionsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.MetricDefinitionsListResult" />&gt;
          description: |
            The callback
  - name: 'listMetrics(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Retrieves the metrics determined by the given filter for the given
      database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, accountName: string,
        filter: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return. The

            parameters that can be filtered are name.value (name of the metric,
            can have an or of multiple

            names), startTime, endTime, and timeGrain. The supported operator is
            eq.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabaseAccountsListMetricsResponse"
          />&gt;
        description: Promise<Models.DatabaseAccountsListMetricsResponse>
  - name: >-
      listMetrics(string, string, string, RequestOptionsBase,
      ServiceCallback<MetricListResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, accountName: string,
        filter: string, options: RequestOptionsBase, callback:
        ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return. The

            parameters that can be filtered are name.value (name of the metric,
            can have an or of multiple

            names), startTime, endTime, and timeGrain. The supported operator is
            eq.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.MetricListResult"
            />&gt;
          description: |
            The callback
  - name: 'listMetrics(string, string, string, ServiceCallback<MetricListResult>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, accountName: string,
        filter: string, callback: ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return. The

            parameters that can be filtered are name.value (name of the metric,
            can have an or of multiple

            names), startTime, endTime, and timeGrain. The supported operator is
            eq.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.MetricListResult"
            />&gt;
          description: |
            The callback
  - name: 'listReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the read-only access keys for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listReadOnlyKeys(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabaseAccountsListReadOnlyKeysResponse"
          />&gt;
        description: Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
  - name: >-
      listReadOnlyKeys(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listReadOnlyKeys(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listReadOnlyKeys(string, string,
      ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listReadOnlyKeys(resourceGroupName: string, accountName:
        string, callback:
        ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listUsages(string, string, DatabaseAccountsListUsagesOptionalParams,
      ServiceCallback<UsagesResult>)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        options: DatabaseAccountsListUsagesOptionalParams, callback:
        ServiceCallback<UsagesResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.UsagesResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listUsages(string, string,
      Models.DatabaseAccountsListUsagesOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
    package: '@azure/arm-cosmosdb'
    summary: Retrieves the usages (most recent data) for the given database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        options?: Models.DatabaseAccountsListUsagesOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="Models.DatabaseAccountsListUsagesOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabaseAccountsListUsagesResponse"
          />&gt;
        description: Promise<Models.DatabaseAccountsListUsagesResponse>
  - name: 'listUsages(string, string, ServiceCallback<UsagesResult>)'
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<UsagesResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.UsagesResult"
            />&gt;
          description: |
            The callback
  - name: >-
      offlineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Offline the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function offlineRegion(resourceGroupName: string, accountName: string,
        regionParameterForOffline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOffline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to offline for the database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      onlineRegion(string, string, RegionForOnlineOffline,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Online the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onlineRegion(resourceGroupName: string, accountName: string,
        regionParameterForOnline: RegionForOnlineOffline, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOnline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to online for the database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      regenerateKey(string, string, DatabaseAccountRegenerateKeyParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Regenerates an access key for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyToRegenerate
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters" />
          description: The name of the key to regenerate.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      update(string, string, DatabaseAccountUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.update'
    package: '@azure/arm-cosmosdb'
    summary: Updates the properties of an existing Azure Cosmos DB database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        updateParameters: DatabaseAccountUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: updateParameters
          type: <xref uid="@azure/arm-cosmosdb.DatabaseAccountUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabaseAccountsUpdateResponse" />&gt;
        description: Promise<Models.DatabaseAccountsUpdateResponse>
