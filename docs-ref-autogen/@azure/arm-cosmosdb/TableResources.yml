### YamlMime:TSType
name: TableResources
uid: '@azure/arm-cosmosdb.TableResources'
package: '@azure/arm-cosmosdb'
summary: Class representing a TableResources.
fullName: TableResources
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: TableResources(CosmosDBManagementClientContext)
    uid: '@azure/arm-cosmosdb.TableResources.constructor'
    package: '@azure/arm-cosmosdb'
    summary: Create a TableResources.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TableResources(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-cosmosdb.CosmosDBManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateUpdateTable(string, string, string,
      TableCreateUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.TableResources.beginCreateUpdateTable'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateTable(resourceGroupName: string, accountName:
        string, tableName: string, createUpdateTableParameters:
        TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateTableParameters
          type: <xref uid="@azure/arm-cosmosdb.TableCreateUpdateParameters" />
          description: The parameters to provide for the current Table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteTable(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.TableResources.beginDeleteTable'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteTable(resourceGroupName: string, accountName:
        string, tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateTableToAutoscale(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.TableResources.beginMigrateTableToAutoscale'
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from manual throughput to autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateTableToAutoscale(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateTableToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.TableResources.beginMigrateTableToManualThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from autoscale to manual throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateTableToManualThroughput(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdateTableThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.TableResources.beginUpdateTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateTableThroughput(resourceGroupName: string,
        accountName: string, tableName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The parameters to provide for the RUs per second of the
            current Table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createUpdateTable(string, string, string, TableCreateUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.TableResources.createUpdateTable'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createUpdateTable(resourceGroupName: string, accountName:
        string, tableName: string, createUpdateTableParameters:
        TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateTableParameters
          type: <xref uid="@azure/arm-cosmosdb.TableCreateUpdateParameters" />
          description: The parameters to provide for the current Table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.TableResourcesCreateUpdateTableResponse"
          />&gt;
        description: Promise<Models.TableResourcesCreateUpdateTableResponse>
  - name: 'deleteTable(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.TableResources.deleteTable'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTable(resourceGroupName: string, accountName: string,
        tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'getTable(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.TableResources.getTable'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Tables under an existing Azure Cosmos DB database account with
      the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTable(resourceGroupName: string, accountName: string,
        tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TableResourcesGetTableResponse" />&gt;
        description: Promise<Models.TableResourcesGetTableResponse>
  - name: >-
      getTable(string, string, string, RequestOptionsBase,
      ServiceCallback<TableGetResults>)
    uid: '@azure/arm-cosmosdb.TableResources.getTable_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTable(resourceGroupName: string, accountName: string,
        tableName: string, options: RequestOptionsBase, callback:
        ServiceCallback<TableGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.TableGetResults"
            />&gt;
          description: |
            The callback
  - name: 'getTable(string, string, string, ServiceCallback<TableGetResults>)'
    uid: '@azure/arm-cosmosdb.TableResources.getTable_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTable(resourceGroupName: string, accountName: string,
        tableName: string, callback: ServiceCallback<TableGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.TableGetResults"
            />&gt;
          description: |
            The callback
  - name: 'getTableThroughput(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.TableResources.getTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Table under an existing Azure Cosmos DB
      database account with the

      provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.TableResourcesGetTableThroughputResponse"
          />&gt;
        description: Promise<Models.TableResourcesGetTableThroughputResponse>
  - name: >-
      getTableThroughput(string, string, string, RequestOptionsBase,
      ServiceCallback<ThroughputSettingsGetResults>)
    uid: '@azure/arm-cosmosdb.TableResources.getTableThroughput_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getTableThroughput(string, string, string,
      ServiceCallback<ThroughputSettingsGetResults>)
    uid: '@azure/arm-cosmosdb.TableResources.getTableThroughput_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
          description: |
            The callback
  - name: 'listTables(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.TableResources.listTables'
    package: '@azure/arm-cosmosdb'
    summary: Lists the Tables under an existing Azure Cosmos DB database account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTables(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TableResourcesListTablesResponse" />&gt;
        description: Promise<Models.TableResourcesListTablesResponse>
  - name: >-
      listTables(string, string, RequestOptionsBase,
      ServiceCallback<TableListResult>)
    uid: '@azure/arm-cosmosdb.TableResources.listTables_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTables(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback: ServiceCallback<TableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.TableListResult"
            />&gt;
          description: |
            The callback
  - name: 'listTables(string, string, ServiceCallback<TableListResult>)'
    uid: '@azure/arm-cosmosdb.TableResources.listTables_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTables(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<TableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-cosmosdb.TableListResult"
            />&gt;
          description: |
            The callback
  - name: 'migrateTableToAutoscale(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.TableResources.migrateTableToAutoscale'
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from manual throughput to autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateTableToAutoscale(resourceGroupName: string, accountName:
        string, tableName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.TableResourcesMigrateTableToAutoscaleResponse" />&gt;
        description: Promise<Models.TableResourcesMigrateTableToAutoscaleResponse>
  - name: >-
      migrateTableToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.TableResources.migrateTableToManualThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from autoscale to manual throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateTableToManualThroughput(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.TableResourcesMigrateTableToManualThroughputResponse"
          />&gt;
        description: Promise<Models.TableResourcesMigrateTableToManualThroughputResponse>
  - name: >-
      updateTableThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.TableResources.updateTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The parameters to provide for the RUs per second of the
            current Table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.TableResourcesUpdateTableThroughputResponse" />&gt;
        description: Promise<Models.TableResourcesUpdateTableThroughputResponse>
