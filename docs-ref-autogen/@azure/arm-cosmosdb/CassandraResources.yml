### YamlMime:TSType
name: CassandraResources
uid: '@azure/arm-cosmosdb.CassandraResources'
package: '@azure/arm-cosmosdb'
summary: Class representing a CassandraResources.
fullName: CassandraResources
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: CassandraResources(CosmosDBManagementClientContext)
    uid: '@azure/arm-cosmosdb.CassandraResources.constructor'
    package: '@azure/arm-cosmosdb'
    summary: Create a CassandraResources.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new CassandraResources(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-cosmosdb.CosmosDBManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateUpdateCassandraKeyspace(string, string, string,
      CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current
            Cassandra keyspace.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateUpdateCassandraTable(string, string, string, string,
      CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters"
            />
          description: |-
            The parameters to provide for the current Cassandra
            Table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginDeleteCassandraKeyspace(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginDeleteCassandraTable(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateCassandraKeyspaceToAutoscale(string, string, string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraKeyspaceToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateCassandraKeyspaceToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateCassandraTableToAutoscale(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateCassandraTableToManualThroughput(string, string, string,
      string, msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdateCassandraKeyspaceThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraKeyspaceThroughput
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraKeyspaceThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra Keyspace.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdateCassandraTableThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createUpdateCassandraKeyspace(string, string, string,
      CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.createUpdateCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createUpdateCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current
            Cassandra keyspace.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesCreateUpdateCassandraKeyspaceResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesCreateUpdateCassandraKeyspaceResponse>
  - name: >-
      createUpdateCassandraTable(string, string, string, string,
      CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.createUpdateCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra Table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createUpdateCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters"
            />
          description: |-
            The parameters to provide for the current Cassandra
            Table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesCreateUpdateCassandraTableResponse"
          />&gt;
        description: Promise<Models.CassandraResourcesCreateUpdateCassandraTableResponse>
  - name: 'deleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.CassandraResources.deleteCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteCassandraTable(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.deleteCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'getCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Cassandra keyspaces under an existing Azure Cosmos DB database
      account with the

      provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesGetCassandraKeyspaceResponse" />&gt;
        description: Promise<Models.CassandraResourcesGetCassandraKeyspaceResponse>
  - name: >-
      getCassandraKeyspace(string, string, string, RequestOptionsBase,
      ServiceCallback<CassandraKeyspaceGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CassandraKeyspaceGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getCassandraKeyspace(string, string, string,
      ServiceCallback<CassandraKeyspaceGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, callback:
        ServiceCallback<CassandraKeyspaceGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getCassandraKeyspaceThroughput(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Cassandra Keyspace under an existing Azure
      Cosmos DB database

      account with the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesGetCassandraKeyspaceThroughputResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesGetCassandraKeyspaceThroughputResponse>
  - name: >-
      getCassandraKeyspaceThroughput(string, string, string, RequestOptionsBase,
      ServiceCallback<ThroughputSettingsGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getCassandraKeyspaceThroughput(string, string, string,
      ServiceCallback<ThroughputSettingsGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getCassandraTable(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Cassandra table under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesGetCassandraTableResponse" />&gt;
        description: Promise<Models.CassandraResourcesGetCassandraTableResponse>
  - name: >-
      getCassandraTable(string, string, string, string, RequestOptionsBase,
      ServiceCallback<CassandraTableGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options:
        RequestOptionsBase, callback: ServiceCallback<CassandraTableGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraTableGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getCassandraTable(string, string, string, string,
      ServiceCallback<CassandraTableGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, callback:
        ServiceCallback<CassandraTableGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraTableGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getCassandraTableThroughput(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Cassandra table under an existing Azure
      Cosmos DB database

      account with the provided name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesGetCassandraTableThroughputResponse"
          />&gt;
        description: Promise<Models.CassandraResourcesGetCassandraTableThroughputResponse>
  - name: >-
      getCassandraTableThroughput(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ThroughputSettingsGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
          description: |
            The callback
  - name: >-
      getCassandraTableThroughput(string, string, string, string,
      ServiceCallback<ThroughputSettingsGetResults>)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, callback:
        ServiceCallback<ThroughputSettingsGetResults>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
          description: |
            The callback
  - name: 'listCassandraKeyspaces(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Cassandra keyspaces under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesListCassandraKeyspacesResponse" />&gt;
        description: Promise<Models.CassandraResourcesListCassandraKeyspacesResponse>
  - name: >-
      listCassandraKeyspaces(string, string, RequestOptionsBase,
      ServiceCallback<CassandraKeyspaceListResult>)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<CassandraKeyspaceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceListResult" />&gt;
          description: |
            The callback
  - name: >-
      listCassandraKeyspaces(string, string,
      ServiceCallback<CassandraKeyspaceListResult>)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, callback: ServiceCallback<CassandraKeyspaceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceListResult" />&gt;
          description: |
            The callback
  - name: 'listCassandraTables(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Cassandra table under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesListCassandraTablesResponse" />&gt;
        description: Promise<Models.CassandraResourcesListCassandraTablesResponse>
  - name: >-
      listCassandraTables(string, string, string, RequestOptionsBase,
      ServiceCallback<CassandraTableListResult>)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables_2'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<CassandraTableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      listCassandraTables(string, string, string,
      ServiceCallback<CassandraTableListResult>)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables_1'
    package: '@azure/arm-cosmosdb'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, callback:
        ServiceCallback<CassandraTableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-cosmosdb.CassandraTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      migrateCassandraKeyspaceToAutoscale(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.migrateCassandraKeyspaceToAutoscale'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateCassandraKeyspaceToAutoscale(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleResponse>
  - name: >-
      migrateCassandraKeyspaceToManualThroughput(string, string, string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.migrateCassandraKeyspaceToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateCassandraKeyspaceToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputResponse>
  - name: >-
      migrateCassandraTableToAutoscale(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.migrateCassandraTableToAutoscale'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateCassandraTableToAutoscale(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesMigrateCassandraTableToAutoscaleResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraTableToAutoscaleResponse>
  - name: >-
      migrateCassandraTableToManualThroughput(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.migrateCassandraTableToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateCassandraTableToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesMigrateCassandraTableToManualThroughputResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesMigrateCassandraTableToManualThroughputResponse>
  - name: >-
      updateCassandraKeyspaceThroughput(string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.updateCassandraKeyspaceThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra Keyspace.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesUpdateCassandraKeyspaceThroughputResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesUpdateCassandraKeyspaceThroughputResponse>
  - name: >-
      updateCassandraTableThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-cosmosdb.CassandraResources.updateCassandraTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the
            current Cassandra table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CassandraResourcesUpdateCassandraTableThroughputResponse"
          />&gt;
        description: >-
          Promise<Models.CassandraResourcesUpdateCassandraTableThroughputResponse>
