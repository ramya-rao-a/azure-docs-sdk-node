### YamlMime:TSType
name: StreamingJobs
uid: '@azure/arm-streamanalytics.StreamingJobs'
package: '@azure/arm-streamanalytics'
summary: Class representing a StreamingJobs.
fullName: StreamingJobs
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: StreamingJobs(StreamAnalyticsManagementClientContext)
    uid: '@azure/arm-streamanalytics.StreamingJobs.constructor'
    package: '@azure/arm-streamanalytics'
    summary: Create a StreamingJobs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new StreamingJobs(client: StreamAnalyticsManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-streamanalytics.StreamAnalyticsManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrReplace(StreamingJob, string, string,
      Models.StreamingJobsBeginCreateOrReplaceOptionalParams)
    uid: '@azure/arm-streamanalytics.StreamingJobs.beginCreateOrReplace'
    package: '@azure/arm-streamanalytics'
    summary: Creates a streaming job or replaces an already existing streaming job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrReplace(streamingJob: StreamingJob,
        resourceGroupName: string, jobName: string, options?:
        Models.StreamingJobsBeginCreateOrReplaceOptionalParams)
      parameters:
        - id: streamingJob
          type: <xref uid="@azure/arm-streamanalytics.StreamingJob" />
          description: >-
            The definition of the streaming job that will be used to create a
            new

            streaming job or replace the existing one.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: >-
            <xref uid="Models.StreamingJobsBeginCreateOrReplaceOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.beginDeleteMethod'
    package: '@azure/arm-streamanalytics'
    summary: Deletes a streaming job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, jobName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginStart(string, string, Models.StreamingJobsBeginStartOptionalParams)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.beginStart'
    package: '@azure/arm-streamanalytics'
    summary: >-
      Starts a streaming job. Once a job is started it will start processing
      input events and produce

      output.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, jobName: string,
        options?: Models.StreamingJobsBeginStartOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="Models.StreamingJobsBeginStartOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginStop(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.beginStop'
    package: '@azure/arm-streamanalytics'
    summary: >-
      Stops a running streaming job. This will cause a running streaming job to
      stop processing input

      events and producing output.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, jobName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrReplace(StreamingJob, string, string,
      Models.StreamingJobsCreateOrReplaceOptionalParams)
    uid: '@azure/arm-streamanalytics.StreamingJobs.createOrReplace'
    package: '@azure/arm-streamanalytics'
    summary: Creates a streaming job or replaces an already existing streaming job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrReplace(streamingJob: StreamingJob, resourceGroupName:
        string, jobName: string, options?:
        Models.StreamingJobsCreateOrReplaceOptionalParams)
      parameters:
        - id: streamingJob
          type: <xref uid="@azure/arm-streamanalytics.StreamingJob" />
          description: >-
            The definition of the streaming job that will be used to create a
            new

            streaming job or replace the existing one.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="Models.StreamingJobsCreateOrReplaceOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.StreamingJobsCreateOrReplaceResponse"
          />&gt;
        description: Promise<Models.StreamingJobsCreateOrReplaceResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.deleteMethod'
    package: '@azure/arm-streamanalytics'
    summary: Deletes a streaming job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, jobName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, Models.StreamingJobsGetOptionalParams)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.get'
    package: '@azure/arm-streamanalytics'
    summary: Gets details about the specified streaming job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, jobName: string, options?:
        Models.StreamingJobsGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="Models.StreamingJobsGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.StreamingJobsGetResponse" />&gt;
        description: Promise<Models.StreamingJobsGetResponse>
  - name: 'get(string, string, ServiceCallback<StreamingJob>)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.get_1'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, jobName: string, callback:
        ServiceCallback<StreamingJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJob" />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, StreamingJobsGetOptionalParams,
      ServiceCallback<StreamingJob>)
    uid: '@azure/arm-streamanalytics.StreamingJobs.get_2'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, jobName: string, options:
        StreamingJobsGetOptionalParams, callback: ServiceCallback<StreamingJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-streamanalytics.StreamingJobsGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJob" />&gt;
          description: |
            The callback
  - name: list(Models.StreamingJobsListOptionalParams)
    uid: '@azure/arm-streamanalytics.StreamingJobs.list'
    package: '@azure/arm-streamanalytics'
    summary: Lists all of the streaming jobs in the given subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.StreamingJobsListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.StreamingJobsListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.StreamingJobsListResponse" />&gt;
        description: Promise<Models.StreamingJobsListResponse>
  - name: list(ServiceCallback<StreamingJobListResult>)
    uid: '@azure/arm-streamanalytics.StreamingJobs.list_1'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<StreamingJobListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: >-
      list(StreamingJobsListOptionalParams,
      ServiceCallback<StreamingJobListResult>)
    uid: '@azure/arm-streamanalytics.StreamingJobs.list_2'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: StreamingJobsListOptionalParams, callback:
        ServiceCallback<StreamingJobListResult>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-streamanalytics.StreamingJobsListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string,
      Models.StreamingJobsListByResourceGroupOptionalParams)
    uid: '@azure/arm-streamanalytics.StreamingJobs.listByResourceGroup'
    package: '@azure/arm-streamanalytics'
    summary: Lists all of the streaming jobs in the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.StreamingJobsListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="Models.StreamingJobsListByResourceGroupOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.StreamingJobsListByResourceGroupResponse"
          />&gt;
        description: Promise<Models.StreamingJobsListByResourceGroupResponse>
  - name: 'listByResourceGroup(string, ServiceCallback<StreamingJobListResult>)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.listByResourceGroup_1'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<StreamingJobListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string,
      StreamingJobsListByResourceGroupOptionalParams,
      ServiceCallback<StreamingJobListResult>)
    uid: '@azure/arm-streamanalytics.StreamingJobs.listByResourceGroup_2'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        StreamingJobsListByResourceGroupOptionalParams, callback:
        ServiceCallback<StreamingJobListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-streamanalytics.StreamingJobsListByResourceGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupNext(string,
      Models.StreamingJobsListByResourceGroupNextOptionalParams)
    uid: '@azure/arm-streamanalytics.StreamingJobs.listByResourceGroupNext'
    package: '@azure/arm-streamanalytics'
    summary: Lists all of the streaming jobs in the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        Models.StreamingJobsListByResourceGroupNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.StreamingJobsListByResourceGroupNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.StreamingJobsListByResourceGroupNextResponse" />&gt;
        description: Promise<Models.StreamingJobsListByResourceGroupNextResponse>
  - name: 'listByResourceGroupNext(string, ServiceCallback<StreamingJobListResult>)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.listByResourceGroupNext_1'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<StreamingJobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupNext(string,
      StreamingJobsListByResourceGroupNextOptionalParams,
      ServiceCallback<StreamingJobListResult>)
    uid: '@azure/arm-streamanalytics.StreamingJobs.listByResourceGroupNext_2'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        StreamingJobsListByResourceGroupNextOptionalParams, callback:
        ServiceCallback<StreamingJobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-streamanalytics.StreamingJobsListByResourceGroupNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.StreamingJobsListNextOptionalParams)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.listNext'
    package: '@azure/arm-streamanalytics'
    summary: Lists all of the streaming jobs in the given subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.StreamingJobsListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.StreamingJobsListNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.StreamingJobsListNextResponse" />&gt;
        description: Promise<Models.StreamingJobsListNextResponse>
  - name: 'listNext(string, ServiceCallback<StreamingJobListResult>)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.listNext_1'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<StreamingJobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: >-
      listNext(string, StreamingJobsListNextOptionalParams,
      ServiceCallback<StreamingJobListResult>)
    uid: '@azure/arm-streamanalytics.StreamingJobs.listNext_2'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        StreamingJobsListNextOptionalParams, callback:
        ServiceCallback<StreamingJobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-streamanalytics.StreamingJobsListNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJobListResult" />&gt;
          description: |
            The callback
  - name: 'start(string, string, Models.StreamingJobsStartOptionalParams)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.start'
    package: '@azure/arm-streamanalytics'
    summary: >-
      Starts a streaming job. Once a job is started it will start processing
      input events and produce

      output.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function start(resourceGroupName: string, jobName: string, options?:
        Models.StreamingJobsStartOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="Models.StreamingJobsStartOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'stop(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.stop'
    package: '@azure/arm-streamanalytics'
    summary: >-
      Stops a running streaming job. This will cause a running streaming job to
      stop processing input

      events and producing output.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stop(resourceGroupName: string, jobName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      update(StreamingJob, string, string,
      Models.StreamingJobsUpdateOptionalParams)
    uid: '@azure/arm-streamanalytics.StreamingJobs.update'
    package: '@azure/arm-streamanalytics'
    summary: >-
      Updates an existing streaming job. This can be used to partially update
      (ie. update one or two

      properties) a streaming job without affecting the rest the job definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(streamingJob: StreamingJob, resourceGroupName: string,
        jobName: string, options?: Models.StreamingJobsUpdateOptionalParams)
      parameters:
        - id: streamingJob
          type: <xref uid="@azure/arm-streamanalytics.StreamingJob" />
          description: >-
            A streaming job object. The properties specified here will overwrite
            the

            corresponding properties in the existing streaming job (ie. Those
            properties will be updated).

            Any properties that are set to null here will mean that the
            corresponding property in the

            existing input will remain the same and not change as a result of
            this PATCH operation.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: <xref uid="Models.StreamingJobsUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.StreamingJobsUpdateResponse" />&gt;
        description: Promise<Models.StreamingJobsUpdateResponse>
  - name: 'update(StreamingJob, string, string, ServiceCallback<StreamingJob>)'
    uid: '@azure/arm-streamanalytics.StreamingJobs.update_1'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(streamingJob: StreamingJob, resourceGroupName: string,
        jobName: string, callback: ServiceCallback<StreamingJob>)
      parameters:
        - id: streamingJob
          type: <xref uid="@azure/arm-streamanalytics.StreamingJob" />
          description: >-
            A streaming job object. The properties specified here will overwrite
            the

            corresponding properties in the existing streaming job (ie. Those
            properties will be updated).

            Any properties that are set to null here will mean that the
            corresponding property in the

            existing input will remain the same and not change as a result of
            this PATCH operation.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJob" />&gt;
          description: |
            The callback
  - name: >-
      update(StreamingJob, string, string, StreamingJobsUpdateOptionalParams,
      ServiceCallback<StreamingJob>)
    uid: '@azure/arm-streamanalytics.StreamingJobs.update_2'
    package: '@azure/arm-streamanalytics'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(streamingJob: StreamingJob, resourceGroupName: string,
        jobName: string, options: StreamingJobsUpdateOptionalParams, callback:
        ServiceCallback<StreamingJob>)
      parameters:
        - id: streamingJob
          type: <xref uid="@azure/arm-streamanalytics.StreamingJob" />
          description: >-
            A streaming job object. The properties specified here will overwrite
            the

            corresponding properties in the existing streaming job (ie. Those
            properties will be updated).

            Any properties that are set to null here will mean that the
            corresponding property in the

            existing input will remain the same and not change as a result of
            this PATCH operation.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: jobName
          type: string
          description: The name of the streaming job.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-streamanalytics.StreamingJobsUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-streamanalytics.StreamingJob" />&gt;
          description: |
            The callback
