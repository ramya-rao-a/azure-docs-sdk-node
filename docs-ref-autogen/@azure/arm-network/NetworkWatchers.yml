### YamlMime:TSType
name: NetworkWatchers
uid: '@azure/arm-network.NetworkWatchers'
package: '@azure/arm-network'
summary: Class representing a NetworkWatchers.
fullName: NetworkWatchers
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: NetworkWatchers(NetworkManagementClientContext)
    uid: '@azure/arm-network.NetworkWatchers.constructor'
    package: '@azure/arm-network'
    summary: Create a NetworkWatchers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new NetworkWatchers(client: NetworkManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-network.NetworkManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCheckConnectivity(string, string, ConnectivityParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginCheckConnectivity'
    package: '@azure/arm-network'
    summary: >-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a

      given endpoint including another VM or an arbitrary remote server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCheckConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.ConnectivityParameters" />
          description: >-
            Parameters that determine how the connectivity check will be
            performed.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.beginDeleteMethod'
    package: '@azure/arm-network'
    summary: Deletes the specified network watcher resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGetAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginGetAzureReachabilityReport'
    package: '@azure/arm-network'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Gets the

      relative latency score for internet service providers from a specified
      location to Azure

      regions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.AzureReachabilityReportParameters" />
          description: Parameters that determine Azure reachability report configuration.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGetFlowLogStatus(string, string, FlowLogStatusParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginGetFlowLogStatus'
    package: '@azure/arm-network'
    summary: >-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetFlowLogStatus(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogStatusParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogStatusParameters" />
          description: >-
            Parameters that define a resource to query flow log and traffic
            analytics

            (optional) status.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGetNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic'
    package: '@azure/arm-network'
    summary: >-
      Gets Network Configuration Diagnostic data to help customers understand
      and debug network

      behavior. It provides detailed information on what security rules were
      applied to a specified

      traffic flow and the result of evaluating these rules. Customers must
      provide details of a flow

      like source, destination, protocol, etc. The API returns whether traffic
      was allowed or denied,

      the rules evaluated for the specified flow and the evaluation results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetNetworkConfigurationDiagnostic(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.NetworkConfigurationDiagnosticParameters" />
          description: Parameters to get network configuration diagnostic.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGetNextHop(string, string, NextHopParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginGetNextHop'
    package: '@azure/arm-network'
    summary: Gets the next hop from the specified VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NextHopParameters" />
          description: Parameters that define the source and destination endpoint.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGetTroubleshooting(string, string, TroubleshootingParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginGetTroubleshooting'
    package: '@azure/arm-network'
    summary: Initiate troubleshooting on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.TroubleshootingParameters" />
          description: Parameters that define the resource to troubleshoot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGetTroubleshootingResult(string, string,
      QueryTroubleshootingParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginGetTroubleshootingResult'
    package: '@azure/arm-network'
    summary: Get the last completed troubleshooting result on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.QueryTroubleshootingParameters" />
          description: >-
            Parameters that define the resource to query the troubleshooting
            result.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGetVMSecurityRules(string, string, SecurityGroupViewParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginGetVMSecurityRules'
    package: '@azure/arm-network'
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGetVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.SecurityGroupViewParameters" />
          description: Parameters that define the VM to check security groups for.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginListAvailableProviders(string, string,
      AvailableProvidersListParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginListAvailableProviders'
    package: '@azure/arm-network'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Lists all

      available internet service providers for a specified Azure region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginListAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.AvailableProvidersListParameters" />
          description: Parameters that scope the list of available providers.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginSetFlowLogConfiguration(string, string, FlowLogInformation,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginSetFlowLogConfiguration'
    package: '@azure/arm-network'
    summary: >-
      Configures flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogInformation" />
          description: Parameters that define the configuration of flow log.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginVerifyIPFlow(string, string, VerificationIPFlowParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.beginVerifyIPFlow'
    package: '@azure/arm-network'
    summary: >-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginVerifyIPFlow(resourceGroupName: string,
        networkWatcherName: string, parameters: VerificationIPFlowParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.VerificationIPFlowParameters" />
          description: Parameters that define the IP flow to be verified.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      checkConnectivity(string, string, ConnectivityParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.checkConnectivity'
    package: '@azure/arm-network'
    summary: >-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a

      given endpoint including another VM or an arbitrary remote server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.ConnectivityParameters" />
          description: >-
            Parameters that determine how the connectivity check will be
            performed.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NetworkWatchersCheckConnectivityResponse"
          />&gt;
        description: Promise<Models.NetworkWatchersCheckConnectivityResponse>
  - name: 'createOrUpdate(string, string, NetworkWatcher, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.createOrUpdate'
    package: '@azure/arm-network'
    summary: Creates or updates a network watcher in the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NetworkWatcher" />
          description: Parameters that define the network watcher resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NetworkWatchersCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.NetworkWatchersCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, NetworkWatcher, RequestOptionsBase,
      ServiceCallback<NetworkWatcher>)
    uid: '@azure/arm-network.NetworkWatchers.createOrUpdate_2'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NetworkWatcher" />
          description: Parameters that define the network watcher resource.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-network.NetworkWatcher"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, NetworkWatcher,
      ServiceCallback<NetworkWatcher>)
    uid: '@azure/arm-network.NetworkWatchers.createOrUpdate_1'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NetworkWatcher" />
          description: Parameters that define the network watcher resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-network.NetworkWatcher"
            />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.deleteMethod'
    package: '@azure/arm-network'
    summary: Deletes the specified network watcher resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.get'
    package: '@azure/arm-network'
    summary: Gets the specified network watcher by resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NetworkWatchersGetResponse" />&gt;
        description: Promise<Models.NetworkWatchersGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<NetworkWatcher>)'
    uid: '@azure/arm-network.NetworkWatchers.get_2'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        options: RequestOptionsBase, callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-network.NetworkWatcher"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<NetworkWatcher>)'
    uid: '@azure/arm-network.NetworkWatchers.get_1'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-network.NetworkWatcher"
            />&gt;
          description: |
            The callback
  - name: >-
      getAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.getAzureReachabilityReport'
    package: '@azure/arm-network'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Gets the

      relative latency score for internet service providers from a specified
      location to Azure

      regions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.AzureReachabilityReportParameters" />
          description: Parameters that determine Azure reachability report configuration.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NetworkWatchersGetAzureReachabilityReportResponse" />&gt;
        description: Promise<Models.NetworkWatchersGetAzureReachabilityReportResponse>
  - name: >-
      getFlowLogStatus(string, string, FlowLogStatusParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.getFlowLogStatus'
    package: '@azure/arm-network'
    summary: >-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFlowLogStatus(resourceGroupName: string, networkWatcherName:
        string, parameters: FlowLogStatusParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogStatusParameters" />
          description: >-
            Parameters that define a resource to query flow log and traffic
            analytics

            (optional) status.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NetworkWatchersGetFlowLogStatusResponse"
          />&gt;
        description: Promise<Models.NetworkWatchersGetFlowLogStatusResponse>
  - name: >-
      getNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic'
    package: '@azure/arm-network'
    summary: >-
      Gets Network Configuration Diagnostic data to help customers understand
      and debug network

      behavior. It provides detailed information on what security rules were
      applied to a specified

      traffic flow and the result of evaluating these rules. Customers must
      provide details of a flow

      like source, destination, protocol, etc. The API returns whether traffic
      was allowed or denied,

      the rules evaluated for the specified flow and the evaluation results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkConfigurationDiagnostic(resourceGroupName: string,
        networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-network.NetworkConfigurationDiagnosticParameters" />
          description: Parameters to get network configuration diagnostic.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NetworkWatchersGetNetworkConfigurationDiagnosticResponse"
          />&gt;
        description: >-
          Promise<Models.NetworkWatchersGetNetworkConfigurationDiagnosticResponse>
  - name: 'getNextHop(string, string, NextHopParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.getNextHop'
    package: '@azure/arm-network'
    summary: Gets the next hop from the specified VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.NextHopParameters" />
          description: Parameters that define the source and destination endpoint.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NetworkWatchersGetNextHopResponse" />&gt;
        description: Promise<Models.NetworkWatchersGetNextHopResponse>
  - name: 'getTopology(string, string, TopologyParameters, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.getTopology'
    package: '@azure/arm-network'
    summary: Gets the current network topology by resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TopologyParameters" />
          description: Parameters that define the representation of topology.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NetworkWatchersGetTopologyResponse"
          />&gt;
        description: Promise<Models.NetworkWatchersGetTopologyResponse>
  - name: >-
      getTopology(string, string, TopologyParameters, RequestOptionsBase,
      ServiceCallback<Topology>)
    uid: '@azure/arm-network.NetworkWatchers.getTopology_2'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, options: RequestOptionsBase,
        callback: ServiceCallback<Topology>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TopologyParameters" />
          description: Parameters that define the representation of topology.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-network.Topology" />&gt;
          description: |
            The callback
  - name: 'getTopology(string, string, TopologyParameters, ServiceCallback<Topology>)'
    uid: '@azure/arm-network.NetworkWatchers.getTopology_1'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, callback:
        ServiceCallback<Topology>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TopologyParameters" />
          description: Parameters that define the representation of topology.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-network.Topology" />&gt;
          description: |
            The callback
  - name: >-
      getTroubleshooting(string, string, TroubleshootingParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.getTroubleshooting'
    package: '@azure/arm-network'
    summary: Initiate troubleshooting on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.TroubleshootingParameters" />
          description: Parameters that define the resource to troubleshoot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NetworkWatchersGetTroubleshootingResponse" />&gt;
        description: Promise<Models.NetworkWatchersGetTroubleshootingResponse>
  - name: >-
      getTroubleshootingResult(string, string, QueryTroubleshootingParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.getTroubleshootingResult'
    package: '@azure/arm-network'
    summary: Get the last completed troubleshooting result on a specified resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.QueryTroubleshootingParameters" />
          description: >-
            Parameters that define the resource to query the troubleshooting
            result.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NetworkWatchersGetTroubleshootingResultResponse" />&gt;
        description: Promise<Models.NetworkWatchersGetTroubleshootingResultResponse>
  - name: >-
      getVMSecurityRules(string, string, SecurityGroupViewParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.getVMSecurityRules'
    package: '@azure/arm-network'
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.SecurityGroupViewParameters" />
          description: Parameters that define the VM to check security groups for.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NetworkWatchersGetVMSecurityRulesResponse" />&gt;
        description: Promise<Models.NetworkWatchersGetVMSecurityRulesResponse>
  - name: 'list(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.list'
    package: '@azure/arm-network'
    summary: Gets all network watchers by resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NetworkWatchersListResponse" />&gt;
        description: Promise<Models.NetworkWatchersListResponse>
  - name: >-
      list(string, RequestOptionsBase,
      ServiceCallback<NetworkWatcherListResult>)
    uid: '@azure/arm-network.NetworkWatchers.list_2'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-network.NetworkWatcherListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, ServiceCallback<NetworkWatcherListResult>)'
    uid: '@azure/arm-network.NetworkWatchers.list_1'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-network.NetworkWatcherListResult" />&gt;
          description: |
            The callback
  - name: listAll(msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.listAll'
    package: '@azure/arm-network'
    summary: Gets all network watchers by subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NetworkWatchersListAllResponse" />&gt;
        description: Promise<Models.NetworkWatchersListAllResponse>
  - name: 'listAll(RequestOptionsBase, ServiceCallback<NetworkWatcherListResult>)'
    uid: '@azure/arm-network.NetworkWatchers.listAll_2'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-network.NetworkWatcherListResult" />&gt;
          description: |
            The callback
  - name: listAll(ServiceCallback<NetworkWatcherListResult>)
    uid: '@azure/arm-network.NetworkWatchers.listAll_1'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listAll(callback: ServiceCallback<NetworkWatcherListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-network.NetworkWatcherListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAvailableProviders(string, string, AvailableProvidersListParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.listAvailableProviders'
    package: '@azure/arm-network'
    summary: >-
      NOTE: This feature is currently in preview and still being tested for
      stability. Lists all

      available internet service providers for a specified Azure region.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.AvailableProvidersListParameters" />
          description: Parameters that scope the list of available providers.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NetworkWatchersListAvailableProvidersResponse" />&gt;
        description: Promise<Models.NetworkWatchersListAvailableProvidersResponse>
  - name: >-
      setFlowLogConfiguration(string, string, FlowLogInformation,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.setFlowLogConfiguration'
    package: '@azure/arm-network'
    summary: >-
      Configures flow log and traffic analytics (optional) on a specified
      resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the network watcher resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher resource.
        - id: parameters
          type: <xref uid="@azure/arm-network.FlowLogInformation" />
          description: Parameters that define the configuration of flow log.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NetworkWatchersSetFlowLogConfigurationResponse" />&gt;
        description: Promise<Models.NetworkWatchersSetFlowLogConfigurationResponse>
  - name: 'updateTags(string, string, TagsObject, msRest.RequestOptionsBase)'
    uid: '@azure/arm-network.NetworkWatchers.updateTags'
    package: '@azure/arm-network'
    summary: Updates a network watcher tags.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TagsObject" />
          description: Parameters supplied to update network watcher tags.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.NetworkWatchersUpdateTagsResponse" />&gt;
        description: Promise<Models.NetworkWatchersUpdateTagsResponse>
  - name: >-
      updateTags(string, string, TagsObject, RequestOptionsBase,
      ServiceCallback<NetworkWatcher>)
    uid: '@azure/arm-network.NetworkWatchers.updateTags_2'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TagsObject" />
          description: Parameters supplied to update network watcher tags.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-network.NetworkWatcher"
            />&gt;
          description: |
            The callback
  - name: 'updateTags(string, string, TagsObject, ServiceCallback<NetworkWatcher>)'
    uid: '@azure/arm-network.NetworkWatchers.updateTags_1'
    package: '@azure/arm-network'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.TagsObject" />
          description: Parameters supplied to update network watcher tags.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-network.NetworkWatcher"
            />&gt;
          description: |
            The callback
  - name: >-
      verifyIPFlow(string, string, VerificationIPFlowParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-network.NetworkWatchers.verifyIPFlow'
    package: '@azure/arm-network'
    summary: >-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verifyIPFlow(resourceGroupName: string, networkWatcherName:
        string, parameters: VerificationIPFlowParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: networkWatcherName
          type: string
          description: The name of the network watcher.
        - id: parameters
          type: <xref uid="@azure/arm-network.VerificationIPFlowParameters" />
          description: Parameters that define the IP flow to be verified.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.NetworkWatchersVerifyIPFlowResponse"
          />&gt;
        description: Promise<Models.NetworkWatchersVerifyIPFlowResponse>
