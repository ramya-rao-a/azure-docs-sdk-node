### YamlMime:TSType
name: PersonGroupOperations
uid: '@azure/cognitiveservices-face.PersonGroupOperations'
package: '@azure/cognitiveservices-face'
summary: Class representing a PersonGroupOperations.
fullName: PersonGroupOperations
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: PersonGroupOperations(FaceClientContext)
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
    package: '@azure/cognitiveservices-face'
    summary: Create a PersonGroupOperations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new PersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/cognitiveservices-face.FaceClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'create(string, Models.PersonGroupCreateOptionalParams)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.create'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Create a new person group with specified personGroupId, name,
      user-provided userData and

      recognitionModel.

      <br /> A person group is the container of the uploaded person data,
      including face recognition

      features.

      <br /> After creation, use [PersonGroup Person -

      Create](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/create)
      to add persons

      into the group, and then call [PersonGroup -

      Train](https://docs.microsoft.com/rest/api/faceapi/persongroup/train) to
      get this group ready

      for [Face -
      Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify).

      <br /> No image will be stored. Only the person's extracted face features
      and userData will be

      stored on server until [PersonGroup Person -

      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/delete)
      or [PersonGroup -

      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroup/delete) is
      called.

      <br/>'recognitionModel' should be specified to associate with this person
      group. The default

      value for 'recognitionModel' is 'recognition_01', if the latest model
      needed, please explicitly

      specify the model you need in this parameter. New faces that are added to
      an existing person

      group will use the recognition model that's already associated with the
      collection. Existing

      face features in a person group can't be updated to features extracted by
      another version of

      recognition model.

      Person group quota:

      * Free-tier subscription quota: 1,000 person groups. Each holds up to
      1,000 persons.

      * S0-tier subscription quota: 1,000,000 person groups. Each holds up to
      10,000 persons.

      * to handle larger scale face identification problem, please consider
      using

      [LargePersonGroup](https://docs.microsoft.com/rest/api/faceapi/largepersongroup).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(personGroupId: string, options?:
        Models.PersonGroupCreateOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="Models.PersonGroupCreateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'create(string, PersonGroupCreateOptionalParams, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(personGroupId: string, options:
        PersonGroupCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupCreateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'create(string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete an existing person group. Persisted face features of all people in
      the person group will

      also be deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, Models.PersonGroupGetOptionalParams)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.get'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve person group name, userData and recognitionModel. To get person
      information under this

      personGroup, use [PersonGroup Person -

      List](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/list).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(personGroupId: string, options?:
        Models.PersonGroupGetOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="Models.PersonGroupGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PersonGroupGetResponse" />&gt;
        description: Promise<Models.PersonGroupGetResponse>
  - name: 'get(string, PersonGroupGetOptionalParams, ServiceCallback<PersonGroup>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(personGroupId: string, options:
        PersonGroupGetOptionalParams, callback: ServiceCallback<PersonGroup>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersonGroup" />&gt;
          description: |
            The callback
  - name: 'get(string, ServiceCallback<PersonGroup>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(personGroupId: string, callback:
        ServiceCallback<PersonGroup>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersonGroup" />&gt;
          description: |
            The callback
  - name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
    package: '@azure/cognitiveservices-face'
    summary: Retrieve the training status of a person group (completed or ongoing).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(personGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.PersonGroupGetTrainingStatusResponse"
          />&gt;
        description: Promise<Models.PersonGroupGetTrainingStatusResponse>
  - name: >-
      getTrainingStatus(string, RequestOptionsBase,
      ServiceCallback<TrainingStatus>)
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(personGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.TrainingStatus" />&gt;
          description: |
            The callback
  - name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(personGroupId: string, callback:
        ServiceCallback<TrainingStatus>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.TrainingStatus" />&gt;
          description: |
            The callback
  - name: list(Models.PersonGroupListOptionalParams)
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.list'
    package: '@azure/cognitiveservices-face'
    summary: >-
      List person groups’ personGroupId, name, userData and recognitionModel.<br
      />

      * Person groups are stored in alphabetical order of personGroupId.

      * "start" parameter (string, optional) is a user-provided personGroupId
      value that returned

      entries have larger ids by string comparison. "start" set to empty to
      indicate return from the

      first item.

      * "top" parameter (int, optional) specifies the number of entries to
      return. A maximal of 1000

      entries can be returned in one call. To fetch more, you can specify
      "start" with the last

      returned entry’s Id of the current call.

      <br />

      For example, total 5 person groups: "group1", ..., "group5".

      <br /> "start=&top=" will return all 5 groups.

      <br /> "start=&top=2" will return "group1", "group2".

      <br /> "start=group2&top=3" will return "group3", "group4", "group5".
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.PersonGroupListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.PersonGroupListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PersonGroupListResponse" />&gt;
        description: Promise<Models.PersonGroupListResponse>
  - name: 'list(PersonGroupListOptionalParams, ServiceCallback<PersonGroup[]>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: PersonGroupListOptionalParams, callback:
        ServiceCallback<PersonGroup[]>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersonGroup" />[]&gt;
          description: |
            The callback
  - name: 'list(ServiceCallback<PersonGroup[]>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersonGroup" />[]&gt;
          description: |
            The callback
  - name: 'train(string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.train'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Queue a person group training task, the training task may not be started
      immediately.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function train(personGroupId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function train(personGroupId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'train(string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'update(string, Models.PersonGroupUpdateOptionalParams)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.update'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Update an existing person group's display name and userData. The
      properties which does not

      appear in request body will not be updated.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(personGroupId: string, options?:
        Models.PersonGroupUpdateOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="Models.PersonGroupUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'update(string, PersonGroupUpdateOptionalParams, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(personGroupId: string, options:
        PersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'update(string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
