### YamlMime:TSType
name: PersonGroupPerson
uid: '@azure/cognitiveservices-face.PersonGroupPerson'
package: '@azure/cognitiveservices-face'
summary: Class representing a PersonGroupPerson.
fullName: PersonGroupPerson
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: PersonGroupPerson(FaceClientContext)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
    package: '@azure/cognitiveservices-face'
    summary: Create a PersonGroupPerson.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new PersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/cognitiveservices-face.FaceClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      Models.PersonGroupPersonAddFaceFromStreamOptionalParams)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a person into a person group for face identification or
      verification. To deal with

      an image contains multiple faces, input face can be specified as an image
      with a targetFace

      rectangle. It returns a persistedFaceId representing the added face. No
      image will be stored.

      Only the extracted face feature will be stored on server until
      [PersonGroup PersonFace -

      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/deleteface),
      [PersonGroup

      Person -
      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/delete)
      or

      [PersonGroup -
      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroup/delete) is

      called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      *   Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      *   Each person entry can hold up to 248 faces.

      *   JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size

      is from 1KB to 6MB.

      *   "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as

      an error. If the provided "targetFace" rectangle is not returned from
      [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      *   Out of detectable face size (36x36 - 4096x4096 pixels), large
      head-pose, or large occlusions

      will cause failures.

      *   Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(personGroupId: string, personId: string,
        image: msRest.HttpRequestBody, options?:
        Models.PersonGroupPersonAddFaceFromStreamOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: image
          type: <xref uid="msRest.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: >-
            <xref uid="Models.PersonGroupPersonAddFaceFromStreamOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.PersonGroupPersonAddFaceFromStreamResponse" />&gt;
        description: Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
  - name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      PersonGroupPersonAddFaceFromStreamOptionalParams,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(personGroupId: string, personId: string,
        image: msRest.HttpRequestBody, options:
        PersonGroupPersonAddFaceFromStreamOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: image
          type: <xref uid="msRest.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: >-
      addFaceFromStream(string, string, msRest.HttpRequestBody,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(personGroupId: string, personId: string,
        image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: image
          type: <xref uid="msRest.HttpRequestBody" />
          description: An image stream.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: >-
      addFaceFromUrl(string, string, string,
      Models.PersonGroupPersonAddFaceFromUrlOptionalParams)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a person into a person group for face identification or
      verification. To deal with

      an image contains multiple faces, input face can be specified as an image
      with a targetFace

      rectangle. It returns a persistedFaceId representing the added face. No
      image will be stored.

      Only the extracted face feature will be stored on server until
      [PersonGroup PersonFace -

      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/deleteface),
      [PersonGroup

      Person -
      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/delete)
      or

      [PersonGroup -
      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroup/delete) is

      called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      *   Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      *   Each person entry can hold up to 248 faces.

      *   JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size

      is from 1KB to 6MB.

      *   "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as

      an error. If the provided "targetFace" rectangle is not returned from
      [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      *   Out of detectable face size (36x36 - 4096x4096 pixels), large
      head-pose, or large occlusions

      will cause failures.

      *   Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(personGroupId: string, personId: string, url:
        string, options?: Models.PersonGroupPersonAddFaceFromUrlOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: <xref uid="Models.PersonGroupPersonAddFaceFromUrlOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.PersonGroupPersonAddFaceFromUrlResponse"
          />&gt;
        description: Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
  - name: >-
      addFaceFromUrl(string, string, string,
      PersonGroupPersonAddFaceFromUrlOptionalParams,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(personGroupId: string, personId: string, url:
        string, options: PersonGroupPersonAddFaceFromUrlOptionalParams,
        callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(personGroupId: string, personId: string, url:
        string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: 'create(string, Models.PersonGroupPersonCreateOptionalParams)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.create'
    package: '@azure/cognitiveservices-face'
    summary: Create a new person in a specified person group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(personGroupId: string, options?:
        Models.PersonGroupPersonCreateOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="Models.PersonGroupPersonCreateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PersonGroupPersonCreateResponse" />&gt;
        description: Promise<Models.PersonGroupPersonCreateResponse>
  - name: >-
      create(string, PersonGroupPersonCreateOptionalParams,
      ServiceCallback<Person>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(personGroupId: string, options:
        PersonGroupPersonCreateOptionalParams, callback:
        ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/cognitiveservices-face.Person"
            />&gt;
          description: |
            The callback
  - name: 'create(string, ServiceCallback<Person>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(personGroupId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/cognitiveservices-face.Person"
            />&gt;
          description: |
            The callback
  - name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete a face from a person in a person group by specified personGroupId,
      personId and

      persistedFaceId.

      <br /> Adding/deleting faces to/from a same person will be processed
      sequentially.

      Adding/deleting faces to/from different persons are processed in parallel.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(personGroupId: string, personId: string,
        persistedFaceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteFace(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(personGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(personGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete an existing person from a person group. The persistedFaceId,
      userData, person name and

      face feature in the person entry will all be deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, personId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, personId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(personGroupId: string, personId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.get'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve a person's information, including registered persisted faces,
      name and userData.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(personGroupId: string, personId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PersonGroupPersonGetResponse" />&gt;
        description: Promise<Models.PersonGroupPersonGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(personGroupId: string, personId: string, options:
        RequestOptionsBase, callback: ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/cognitiveservices-face.Person"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Person>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(personGroupId: string, personId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/cognitiveservices-face.Person"
            />&gt;
          description: |
            The callback
  - name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its

      belonging personGroupId).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFace(personGroupId: string, personId: string,
        persistedFaceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PersonGroupPersonGetFaceResponse" />&gt;
        description: Promise<Models.PersonGroupPersonGetFaceResponse>
  - name: >-
      getFace(string, string, string, RequestOptionsBase,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFace(personGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFace(personGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: 'list(string, Models.PersonGroupPersonListOptionalParams)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.list'
    package: '@azure/cognitiveservices-face'
    summary: >-
      List all persons in a person group, and retrieve person information
      (including personId, name,

      userData and persistedFaceIds of registered faces of the person).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(personGroupId: string, options?:
        Models.PersonGroupPersonListOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: <xref uid="Models.PersonGroupPersonListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PersonGroupPersonListResponse" />&gt;
        description: Promise<Models.PersonGroupPersonListResponse>
  - name: >-
      list(string, PersonGroupPersonListOptionalParams,
      ServiceCallback<Person[]>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(personGroupId: string, options:
        PersonGroupPersonListOptionalParams, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/cognitiveservices-face.Person"
            />[]&gt;
          description: |
            The callback
  - name: 'list(string, ServiceCallback<Person[]>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(personGroupId: string, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/cognitiveservices-face.Person"
            />[]&gt;
          description: |
            The callback
  - name: 'update(string, string, Models.PersonGroupPersonUpdateOptionalParams)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.update'
    package: '@azure/cognitiveservices-face'
    summary: Update name or userData of a person.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(personGroupId: string, personId: string, options?:
        Models.PersonGroupPersonUpdateOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: <xref uid="Models.PersonGroupPersonUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      update(string, string, PersonGroupPersonUpdateOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(personGroupId: string, personId: string, options:
        PersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'update(string, string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(personGroupId: string, personId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      updateFace(string, string, string,
      Models.PersonGroupPersonUpdateFaceOptionalParams)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a person into a person group for face identification or
      verification. To deal with

      an image contains multiple faces, input face can be specified as an image
      with a targetFace

      rectangle. It returns a persistedFaceId representing the added face. No
      image will be stored.

      Only the extracted face feature will be stored on server until
      [PersonGroup PersonFace -

      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/deleteface),
      [PersonGroup

      Person -
      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroupperson/delete)
      or

      [PersonGroup -
      Delete](https://docs.microsoft.com/rest/api/faceapi/persongroup/delete) is

      called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * Each person entry can hold up to 248 faces.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(personGroupId: string, personId: string,
        persistedFaceId: string, options?:
        Models.PersonGroupPersonUpdateFaceOptionalParams)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="Models.PersonGroupPersonUpdateFaceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      updateFace(string, string, string,
      PersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(personGroupId: string, personId: string,
        persistedFaceId: string, options:
        PersonGroupPersonUpdateFaceOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'updateFace(string, string, string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(personGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: personGroupId
          type: string
          description: Id referencing a particular person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
