### YamlMime:TSType
name: FaceListOperations
uid: '@azure/cognitiveservices-face.FaceListOperations'
package: '@azure/cognitiveservices-face'
summary: Class representing a FaceListOperations.
fullName: FaceListOperations
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: FaceListOperations(FaceClientContext)
    uid: '@azure/cognitiveservices-face.FaceListOperations.constructor'
    package: '@azure/cognitiveservices-face'
    summary: Create a FaceListOperations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new FaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/cognitiveservices-face.FaceClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      addFaceFromStream(string, msRest.HttpRequestBody,
      FaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, image:
        msRest.HttpRequestBody, options:
        FaceListAddFaceFromStreamOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: image
          type: <xref uid="msRest.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: >-
      addFaceFromStream(string, msRest.HttpRequestBody,
      Models.FaceListAddFaceFromStreamOptionalParams)
    uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a specified face list, up to 1,000 faces.

      <br /> To deal with an image contains multiple faces, input face can be
      specified as an image

      with a targetFace rectangle. It returns a persistedFaceId representing the
      added face. No image

      will be stored. Only the extracted face feature will be stored on server
      until [FaceList -

      Delete
      Face](https://docs.microsoft.com/rest/api/faceapi/facelist/deleteface) or
      [FaceList -

      Delete](https://docs.microsoft.com/rest/api/faceapi/facelist/delete) is
      called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      * Higher face image quality means better detection and recognition
      precision. Please consider

      high-quality faces: frontal, clear, and face size is 200x200 pixels (100
      pixels between eyes) or

      bigger.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same face list are processed
      sequentially and to/from

      different face lists are in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, image:
        msRest.HttpRequestBody, options?:
        Models.FaceListAddFaceFromStreamOptionalParams)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: image
          type: <xref uid="msRest.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: <xref uid="Models.FaceListAddFaceFromStreamOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.FaceListAddFaceFromStreamResponse" />&gt;
        description: Promise<Models.FaceListAddFaceFromStreamResponse>
  - name: >-
      addFaceFromStream(string, msRest.HttpRequestBody,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, image:
        msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: image
          type: <xref uid="msRest.HttpRequestBody" />
          description: An image stream.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: >-
      addFaceFromUrl(string, string, FaceListAddFaceFromUrlOptionalParams,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(faceListId: string, url: string, options:
        FaceListAddFaceFromUrlOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: >-
      addFaceFromUrl(string, string,
      Models.FaceListAddFaceFromUrlOptionalParams)
    uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a specified face list, up to 1,000 faces.

      <br /> To deal with an image contains multiple faces, input face can be
      specified as an image

      with a targetFace rectangle. It returns a persistedFaceId representing the
      added face. No image

      will be stored. Only the extracted face feature will be stored on server
      until [FaceList -

      Delete
      Face](https://docs.microsoft.com/rest/api/faceapi/facelist/deleteface) or
      [FaceList -

      Delete](https://docs.microsoft.com/rest/api/faceapi/facelist/delete) is
      called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      * Higher face image quality means better detection and recognition
      precision. Please consider

      high-quality faces: frontal, clear, and face size is 200x200 pixels (100
      pixels between eyes) or

      bigger.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same face list are processed
      sequentially and to/from

      different face lists are in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(faceListId: string, url: string, options?:
        Models.FaceListAddFaceFromUrlOptionalParams)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: <xref uid="Models.FaceListAddFaceFromUrlOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.FaceListAddFaceFromUrlResponse" />&gt;
        description: Promise<Models.FaceListAddFaceFromUrlResponse>
  - name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(faceListId: string, url: string, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.PersistedFace" />&gt;
          description: |
            The callback
  - name: 'create(string, FaceListCreateOptionalParams, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.create_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(faceListId: string, options:
        FaceListCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceListCreateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'create(string, Models.FaceListCreateOptionalParams)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.create'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Create an empty face list with user-specified faceListId, name, an
      optional userData and

      recognitionModel. Up to 64 face lists are allowed in one subscription.

      <br /> Face list is a list of faces, up to 1,000 faces, and used by [Face
      - Find

      Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar).

      <br /> After creation, user should use [FaceList - Add

      Face](https://docs.microsoft.com/rest/api/faceapi/facelist/addfacefromurl)
      to import the faces.

      No image will be stored. Only the extracted face features are stored on
      server until [FaceList -

      Delete](https://docs.microsoft.com/rest/api/faceapi/facelist/delete) is
      called.

      <br /> Find Similar is used for scenario like finding celebrity-like
      faces, similar face

      filtering, or as a light way face identification. But if the actual use is
      to identify person,

      please use
      [PersonGroup](https://docs.microsoft.com/rest/api/faceapi/persongroup) /

      [LargePersonGroup](https://docs.microsoft.com/rest/api/faceapi/largepersongroup)
      and [Face -

      Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify).

      <br /> Please consider

      [LargeFaceList](https://docs.microsoft.com/rest/api/faceapi/largefacelist)
      when the face number

      is large. It can support up to 1,000,000 faces.

      <br />'recognitionModel' should be specified to associate with this face
      list. The default value

      for 'recognitionModel' is 'recognition_01', if the latest model needed,
      please explicitly

      specify the model you need in this parameter. New faces that are added to
      an existing face list

      will use the recognition model that's already associated with the
      collection. Existing face

      features in a face list can't be updated to features extracted by another
      version of recognition

      model.

      Please Refer to [Specify a face recognition

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(faceListId: string, options?:
        Models.FaceListCreateOptionalParams)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: <xref uid="Models.FaceListCreateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'create(string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.create_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete a face from a face list by specified faceListId and
      persistedFaceId.

      <br /> Adding/deleting faces to/from a same face list are processed
      sequentially and to/from

      different face lists are in parallel.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteFace(string, string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
    package: '@azure/cognitiveservices-face'
    summary: Delete a specified face list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(faceListId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(faceListId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(faceListId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, FaceListGetOptionalParams, ServiceCallback<FaceList>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.get_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(faceListId: string, options: FaceListGetOptionalParams,
        callback: ServiceCallback<FaceList>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: >-
            <xref uid="@azure/cognitiveservices-face.FaceListGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.FaceList" />&gt;
          description: |
            The callback
  - name: 'get(string, Models.FaceListGetOptionalParams)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.get'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve a face list’s faceListId, name, userData, recognitionModel and
      faces in the face list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(faceListId: string, options?:
        Models.FaceListGetOptionalParams)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: <xref uid="Models.FaceListGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.FaceListGetResponse" />&gt;
        description: Promise<Models.FaceListGetResponse>
  - name: 'get(string, ServiceCallback<FaceList>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.get_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.FaceList" />&gt;
          description: |
            The callback
  - name: 'list(FaceListListOptionalParams, ServiceCallback<FaceList[]>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.list_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: FaceListListOptionalParams, callback:
        ServiceCallback<FaceList[]>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/cognitiveservices-face.FaceListListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.FaceList" />[]&gt;
          description: |
            The callback
  - name: list(Models.FaceListListOptionalParams)
    uid: '@azure/cognitiveservices-face.FaceListOperations.list'
    package: '@azure/cognitiveservices-face'
    summary: |-
      List face lists’ faceListId, name, userData and recognitionModel. <br />
      To get face information inside faceList use [FaceList -
      Get](https://docs.microsoft.com/rest/api/faceapi/facelist/get)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.FaceListListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.FaceListListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.FaceListListResponse" />&gt;
        description: Promise<Models.FaceListListResponse>
  - name: 'list(ServiceCallback<FaceList[]>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.list_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-face.FaceList" />[]&gt;
          description: |
            The callback
  - name: 'update(string, FaceListUpdateOptionalParams, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.update_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(faceListId: string, options:
        FaceListUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceListUpdateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'update(string, Models.FaceListUpdateOptionalParams)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.update'
    package: '@azure/cognitiveservices-face'
    summary: Update information of a face list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(faceListId: string, options?:
        Models.FaceListUpdateOptionalParams)
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: options
          type: <xref uid="Models.FaceListUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'update(string, ServiceCallback<void>)'
    uid: '@azure/cognitiveservices-face.FaceListOperations.update_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type: string
          description: Id referencing a particular face list.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
