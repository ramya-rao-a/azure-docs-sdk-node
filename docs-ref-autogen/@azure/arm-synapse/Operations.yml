### YamlMime:TSType
name: Operations
uid: '@azure/arm-synapse.Operations'
package: '@azure/arm-synapse'
summary: Class representing a Operations.
fullName: Operations
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Operations(SynapseManagementClientContext)
    uid: '@azure/arm-synapse.Operations.constructor'
    package: '@azure/arm-synapse'
    summary: Create a Operations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Operations(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-synapse.SynapseManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-synapse.Operations.checkNameAvailability'
    package: '@azure/arm-synapse'
    summary: Check whether a workspace name is available
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(request: CheckNameAvailabilityRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: request
          type: <xref uid="@azure/arm-synapse.CheckNameAvailabilityRequest" />
          description: The check request
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.OperationsCheckNameAvailabilityResponse"
          />&gt;
        description: Promise<Models.OperationsCheckNameAvailabilityResponse>
  - name: >-
      checkNameAvailability(CheckNameAvailabilityRequest, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResponse>)
    uid: '@azure/arm-synapse.Operations.checkNameAvailability_2'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(request: CheckNameAvailabilityRequest,
        options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: request
          type: <xref uid="@azure/arm-synapse.CheckNameAvailabilityRequest" />
          description: The check request
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.CheckNameAvailabilityResponse" />&gt;
          description: |
            The callback
  - name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      ServiceCallback<CheckNameAvailabilityResponse>)
    uid: '@azure/arm-synapse.Operations.checkNameAvailability_1'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(request: CheckNameAvailabilityRequest,
        callback: ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: request
          type: <xref uid="@azure/arm-synapse.CheckNameAvailabilityRequest" />
          description: The check request
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.CheckNameAvailabilityResponse" />&gt;
          description: |
            The callback
  - name: >-
      getAzureAsyncHeaderResult(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-synapse.Operations.getAzureAsyncHeaderResult'
    package: '@azure/arm-synapse'
    summary: Get the status of an operation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAzureAsyncHeaderResult(resourceGroupName: string,
        workspaceName: string, operationId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: operationId
          type: string
          description: Operation ID
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.OperationsGetAzureAsyncHeaderResultResponse" />&gt;
        description: Promise<Models.OperationsGetAzureAsyncHeaderResultResponse>
  - name: >-
      getAzureAsyncHeaderResult(string, string, string, RequestOptionsBase,
      ServiceCallback<OperationResource>)
    uid: '@azure/arm-synapse.Operations.getAzureAsyncHeaderResult_2'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAzureAsyncHeaderResult(resourceGroupName: string,
        workspaceName: string, operationId: string, options: RequestOptionsBase,
        callback: ServiceCallback<OperationResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: operationId
          type: string
          description: Operation ID
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-synapse.OperationResource"
            />&gt;
          description: |
            The callback
  - name: >-
      getAzureAsyncHeaderResult(string, string, string,
      ServiceCallback<OperationResource>)
    uid: '@azure/arm-synapse.Operations.getAzureAsyncHeaderResult_1'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAzureAsyncHeaderResult(resourceGroupName: string,
        workspaceName: string, operationId: string, callback:
        ServiceCallback<OperationResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: operationId
          type: string
          description: Operation ID
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-synapse.OperationResource"
            />&gt;
          description: |
            The callback
  - name: 'getLocationHeaderResult(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-synapse.Operations.getLocationHeaderResult'
    package: '@azure/arm-synapse'
    summary: Get the result of an operation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLocationHeaderResult(resourceGroupName: string,
        workspaceName: string, operationId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: operationId
          type: string
          description: Operation ID
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      getLocationHeaderResult(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-synapse.Operations.getLocationHeaderResult_2'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLocationHeaderResult(resourceGroupName: string,
        workspaceName: string, operationId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: operationId
          type: string
          description: Operation ID
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getLocationHeaderResult(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-synapse.Operations.getLocationHeaderResult_1'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLocationHeaderResult(resourceGroupName: string,
        workspaceName: string, operationId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: operationId
          type: string
          description: Operation ID
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-synapse.Operations.list'
    package: '@azure/arm-synapse'
    summary: Get all available operations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.OperationsListResponse" />&gt;
        description: Promise<Models.OperationsListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<AvailableRpOperation[]>)'
    uid: '@azure/arm-synapse.Operations.list_2'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<AvailableRpOperation[]>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.AvailableRpOperation" />[]&gt;
          description: |
            The callback
  - name: 'list(ServiceCallback<AvailableRpOperation[]>)'
    uid: '@azure/arm-synapse.Operations.list_1'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<AvailableRpOperation[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.AvailableRpOperation" />[]&gt;
          description: |
            The callback
