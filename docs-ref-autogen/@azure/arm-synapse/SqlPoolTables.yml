### YamlMime:TSType
name: SqlPoolTables
uid: '@azure/arm-synapse.SqlPoolTables'
package: '@azure/arm-synapse'
summary: Class representing a SqlPoolTables.
fullName: SqlPoolTables
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: SqlPoolTables(SynapseManagementClientContext)
    uid: '@azure/arm-synapse.SqlPoolTables.constructor'
    package: '@azure/arm-synapse'
    summary: Create a SqlPoolTables.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new SqlPoolTables(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-synapse.SynapseManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'get(string, string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-synapse.SqlPoolTables.get'
    package: '@azure/arm-synapse'
    summary: Get Sql pool table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: tableName
          type: string
          description: The name of the table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.SqlPoolTablesGetResponse" />&gt;
        description: Promise<Models.SqlPoolTablesGetResponse>
  - name: >-
      get(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<SqlPoolTable>)
    uid: '@azure/arm-synapse.SqlPoolTables.get_2'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, tableName: string, options:
        RequestOptionsBase, callback: ServiceCallback<SqlPoolTable>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: tableName
          type: string
          description: The name of the table.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-synapse.SqlPoolTable"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, string, ServiceCallback<SqlPoolTable>)'
    uid: '@azure/arm-synapse.SqlPoolTables.get_1'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, tableName: string, callback:
        ServiceCallback<SqlPoolTable>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: tableName
          type: string
          description: The name of the table.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-synapse.SqlPoolTable"
            />&gt;
          description: |
            The callback
  - name: >-
      listBySchema(string, string, string, string,
      Models.SqlPoolTablesListBySchemaOptionalParams)
    uid: '@azure/arm-synapse.SqlPoolTables.listBySchema'
    package: '@azure/arm-synapse'
    summary: Gets tables of a given schema in a SQL pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchema(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, options?:
        Models.SqlPoolTablesListBySchemaOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: options
          type: <xref uid="Models.SqlPoolTablesListBySchemaOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.SqlPoolTablesListBySchemaResponse" />&gt;
        description: Promise<Models.SqlPoolTablesListBySchemaResponse>
  - name: >-
      listBySchema(string, string, string, string,
      ServiceCallback<SqlPoolTableListResult>)
    uid: '@azure/arm-synapse.SqlPoolTables.listBySchema_1'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchema(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, callback:
        ServiceCallback<SqlPoolTableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.SqlPoolTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      listBySchema(string, string, string, string,
      SqlPoolTablesListBySchemaOptionalParams,
      ServiceCallback<SqlPoolTableListResult>)
    uid: '@azure/arm-synapse.SqlPoolTables.listBySchema_2'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchema(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, options:
        SqlPoolTablesListBySchemaOptionalParams, callback:
        ServiceCallback<SqlPoolTableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.SqlPoolTablesListBySchemaOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.SqlPoolTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      listBySchemaNext(string,
      Models.SqlPoolTablesListBySchemaNextOptionalParams)
    uid: '@azure/arm-synapse.SqlPoolTables.listBySchemaNext'
    package: '@azure/arm-synapse'
    summary: Gets tables of a given schema in a SQL pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchemaNext(nextPageLink: string, options?:
        Models.SqlPoolTablesListBySchemaNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.SqlPoolTablesListBySchemaNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.SqlPoolTablesListBySchemaNextResponse"
          />&gt;
        description: Promise<Models.SqlPoolTablesListBySchemaNextResponse>
  - name: 'listBySchemaNext(string, ServiceCallback<SqlPoolTableListResult>)'
    uid: '@azure/arm-synapse.SqlPoolTables.listBySchemaNext_1'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchemaNext(nextPageLink: string, callback:
        ServiceCallback<SqlPoolTableListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.SqlPoolTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      listBySchemaNext(string, SqlPoolTablesListBySchemaNextOptionalParams,
      ServiceCallback<SqlPoolTableListResult>)
    uid: '@azure/arm-synapse.SqlPoolTables.listBySchemaNext_2'
    package: '@azure/arm-synapse'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchemaNext(nextPageLink: string, options:
        SqlPoolTablesListBySchemaNextOptionalParams, callback:
        ServiceCallback<SqlPoolTableListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.SqlPoolTablesListBySchemaNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-synapse.SqlPoolTableListResult" />&gt;
          description: |
            The callback
