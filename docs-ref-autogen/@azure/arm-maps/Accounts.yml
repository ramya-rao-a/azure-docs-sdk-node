### YamlMime:TSType
name: Accounts
uid: '@azure/arm-maps.Accounts'
package: '@azure/arm-maps'
summary: Class representing a Accounts.
fullName: Accounts
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Accounts(MapsManagementClientContext)
    uid: '@azure/arm-maps.Accounts.constructor'
    package: '@azure/arm-maps'
    summary: Create a Accounts.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Accounts(client: MapsManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-maps.MapsManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, MapsAccountCreateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-maps.Accounts.createOrUpdate'
    package: '@azure/arm-maps'
    summary: >-
      Create or update a Maps Account. A Maps Account holds the keys which allow
      access to the Maps

      REST APIs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, accountName: string,
        mapsAccountCreateParameters: MapsAccountCreateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountCreateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountCreateParameters" />
          description: The new or updated parameters for the Maps Account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AccountsCreateOrUpdateResponse" />&gt;
        description: Promise<Models.AccountsCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, MapsAccountCreateParameters,
      RequestOptionsBase, ServiceCallback<MapsAccount>)
    uid: '@azure/arm-maps.Accounts.createOrUpdate_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, accountName: string,
        mapsAccountCreateParameters: MapsAccountCreateParameters, options:
        RequestOptionsBase, callback: ServiceCallback<MapsAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountCreateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountCreateParameters" />
          description: The new or updated parameters for the Maps Account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, MapsAccountCreateParameters,
      ServiceCallback<MapsAccount>)
    uid: '@azure/arm-maps.Accounts.createOrUpdate_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, accountName: string,
        mapsAccountCreateParameters: MapsAccountCreateParameters, callback:
        ServiceCallback<MapsAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountCreateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountCreateParameters" />
          description: The new or updated parameters for the Maps Account.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-maps.Accounts.deleteMethod'
    package: '@azure/arm-maps'
    summary: Delete a Maps Account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-maps.Accounts.deleteMethod_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-maps.Accounts.deleteMethod_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-maps.Accounts.get'
    package: '@azure/arm-maps'
    summary: Get a Maps Account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AccountsGetResponse" />&gt;
        description: Promise<Models.AccountsGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<MapsAccount>)'
    uid: '@azure/arm-maps.Accounts.get_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options:
        RequestOptionsBase, callback: ServiceCallback<MapsAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<MapsAccount>)'
    uid: '@azure/arm-maps.Accounts.get_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, callback:
        ServiceCallback<MapsAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-maps.Accounts.listByResourceGroup'
    package: '@azure/arm-maps'
    summary: Get all Maps Accounts in a Resource Group
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AccountsListByResourceGroupResponse"
          />&gt;
        description: Promise<Models.AccountsListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<MapsAccounts>)
    uid: '@azure/arm-maps.Accounts.listByResourceGroup_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<MapsAccounts>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccounts" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<MapsAccounts>)'
    uid: '@azure/arm-maps.Accounts.listByResourceGroup_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<MapsAccounts>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccounts" />&gt;
          description: |
            The callback
  - name: listBySubscription(msRest.RequestOptionsBase)
    uid: '@azure/arm-maps.Accounts.listBySubscription'
    package: '@azure/arm-maps'
    summary: Get all Maps Accounts in a Subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AccountsListBySubscriptionResponse"
          />&gt;
        description: Promise<Models.AccountsListBySubscriptionResponse>
  - name: 'listBySubscription(RequestOptionsBase, ServiceCallback<MapsAccounts>)'
    uid: '@azure/arm-maps.Accounts.listBySubscription_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<MapsAccounts>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccounts" />&gt;
          description: |
            The callback
  - name: listBySubscription(ServiceCallback<MapsAccounts>)
    uid: '@azure/arm-maps.Accounts.listBySubscription_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(callback: ServiceCallback<MapsAccounts>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccounts" />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-maps.Accounts.listKeys'
    package: '@azure/arm-maps'
    summary: >-
      Get the keys to use with the Maps APIs. A key is used to authenticate and
      authorize access to

      the Maps REST APIs. Only one key is needed at a time; two are given to
      provide seamless key

      regeneration.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AccountsListKeysResponse" />&gt;
        description: Promise<Models.AccountsListKeysResponse>
  - name: >-
      listKeys(string, string, RequestOptionsBase,
      ServiceCallback<MapsAccountKeys>)
    uid: '@azure/arm-maps.Accounts.listKeys_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback: ServiceCallback<MapsAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccountKeys"
            />&gt;
          description: |
            The callback
  - name: 'listKeys(string, string, ServiceCallback<MapsAccountKeys>)'
    uid: '@azure/arm-maps.Accounts.listKeys_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<MapsAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccountKeys"
            />&gt;
          description: |
            The callback
  - name: listOperations(msRest.RequestOptionsBase)
    uid: '@azure/arm-maps.Accounts.listOperations'
    package: '@azure/arm-maps'
    summary: List operations available for the Maps Resource Provider
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listOperations(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AccountsListOperationsResponse" />&gt;
        description: Promise<Models.AccountsListOperationsResponse>
  - name: 'listOperations(RequestOptionsBase, ServiceCallback<MapsOperations>)'
    uid: '@azure/arm-maps.Accounts.listOperations_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOperations(options: RequestOptionsBase, callback:
        ServiceCallback<MapsOperations>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsOperations" />&gt;
          description: |
            The callback
  - name: listOperations(ServiceCallback<MapsOperations>)
    uid: '@azure/arm-maps.Accounts.listOperations_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listOperations(callback: ServiceCallback<MapsOperations>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsOperations" />&gt;
          description: |
            The callback
  - name: 'move(string, MapsAccountsMoveRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-maps.Accounts.move'
    package: '@azure/arm-maps'
    summary: Moves Maps Accounts from one ResourceGroup (or Subscription) to another
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function move(resourceGroupName: string, moveRequest:
        MapsAccountsMoveRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains Maps Account to move.
        - id: moveRequest
          type: <xref uid="@azure/arm-maps.MapsAccountsMoveRequest" />
          description: The details of the Maps Account move.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      move(string, MapsAccountsMoveRequest, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-maps.Accounts.move_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function move(resourceGroupName: string, moveRequest:
        MapsAccountsMoveRequest, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains Maps Account to move.
        - id: moveRequest
          type: <xref uid="@azure/arm-maps.MapsAccountsMoveRequest" />
          description: The details of the Maps Account move.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'move(string, MapsAccountsMoveRequest, ServiceCallback<void>)'
    uid: '@azure/arm-maps.Accounts.move_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function move(resourceGroupName: string, moveRequest:
        MapsAccountsMoveRequest, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains Maps Account to move.
        - id: moveRequest
          type: <xref uid="@azure/arm-maps.MapsAccountsMoveRequest" />
          description: The details of the Maps Account move.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, MapsKeySpecification,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-maps.Accounts.regenerateKeys'
    package: '@azure/arm-maps'
    summary: >-
      Regenerate either the primary or secondary key for use with the Maps APIs.
      The old key will stop

      working immediately.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, accountName: string,
        keySpecification: MapsKeySpecification, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: keySpecification
          type: <xref uid="@azure/arm-maps.MapsKeySpecification" />
          description: 'Which key to regenerate:  primary or secondary.'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AccountsRegenerateKeysResponse" />&gt;
        description: Promise<Models.AccountsRegenerateKeysResponse>
  - name: >-
      regenerateKeys(string, string, MapsKeySpecification, RequestOptionsBase,
      ServiceCallback<MapsAccountKeys>)
    uid: '@azure/arm-maps.Accounts.regenerateKeys_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, accountName: string,
        keySpecification: MapsKeySpecification, options: RequestOptionsBase,
        callback: ServiceCallback<MapsAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: keySpecification
          type: <xref uid="@azure/arm-maps.MapsKeySpecification" />
          description: 'Which key to regenerate:  primary or secondary.'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccountKeys"
            />&gt;
          description: |
            The callback
  - name: >-
      regenerateKeys(string, string, MapsKeySpecification,
      ServiceCallback<MapsAccountKeys>)
    uid: '@azure/arm-maps.Accounts.regenerateKeys_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, accountName: string,
        keySpecification: MapsKeySpecification, callback:
        ServiceCallback<MapsAccountKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: keySpecification
          type: <xref uid="@azure/arm-maps.MapsKeySpecification" />
          description: 'Which key to regenerate:  primary or secondary.'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccountKeys"
            />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, MapsAccountUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-maps.Accounts.update'
    package: '@azure/arm-maps'
    summary: >-
      Updates a Maps Account. Only a subset of the parameters may be updated
      after creation, such as

      Sku and Tags.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        mapsAccountUpdateParameters: MapsAccountUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountUpdateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountUpdateParameters" />
          description: The updated parameters for the Maps Account.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AccountsUpdateResponse" />&gt;
        description: Promise<Models.AccountsUpdateResponse>
  - name: >-
      update(string, string, MapsAccountUpdateParameters, RequestOptionsBase,
      ServiceCallback<MapsAccount>)
    uid: '@azure/arm-maps.Accounts.update_2'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        mapsAccountUpdateParameters: MapsAccountUpdateParameters, options:
        RequestOptionsBase, callback: ServiceCallback<MapsAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountUpdateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountUpdateParameters" />
          description: The updated parameters for the Maps Account.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, MapsAccountUpdateParameters,
      ServiceCallback<MapsAccount>)
    uid: '@azure/arm-maps.Accounts.update_1'
    package: '@azure/arm-maps'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        mapsAccountUpdateParameters: MapsAccountUpdateParameters, callback:
        ServiceCallback<MapsAccount>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Azure Resource Group.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountUpdateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountUpdateParameters" />
          description: The updated parameters for the Maps Account.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
          description: |
            The callback
