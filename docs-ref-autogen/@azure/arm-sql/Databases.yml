### YamlMime:TSType
name: Databases
uid: '@azure/arm-sql.Databases'
package: '@azure/arm-sql'
summary: Class representing a Databases.
fullName: Databases
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Databases(SqlManagementClientContext)
    uid: '@azure/arm-sql.Databases.constructor'
    package: '@azure/arm-sql'
    summary: Create a Databases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Databases(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sql.SqlManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateImportOperation(string, string, string, ImportExtensionRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.beginCreateImportOperation'
    package: '@azure/arm-sql'
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database. The existing

      database must be empty.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateImportOperation(resourceGroupName: string,
        serverName: string, databaseName: string, parameters:
        ImportExtensionRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to import into
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportExtensionRequest" />
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateOrUpdate(string, string, string, Database,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: Database, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Database" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.beginDeleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes the database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serverName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginExportMethod(string, string, string, ExportRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.beginExportMethod'
    package: '@azure/arm-sql'
    summary: Exports a database to a bacpac.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginExportMethod(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: ExportRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be exported.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ExportRequest" />
          description: The required parameters for exporting a database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginFailover(string, string, string,
      Models.DatabasesBeginFailoverOptionalParams)
    uid: '@azure/arm-sql.Databases.beginFailover'
    package: '@azure/arm-sql'
    summary: Failovers a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFailover(resourceGroupName: string, serverName: string,
        databaseName: string, options?:
        Models.DatabasesBeginFailoverOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to failover.
        - id: options
          type: <xref uid="Models.DatabasesBeginFailoverOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginImportMethod(string, string, ImportRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.beginImportMethod'
    package: '@azure/arm-sql'
    summary: Imports a bacpac into a new database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginImportMethod(resourceGroupName: string, serverName:
        string, parameters: ImportRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportRequest" />
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginPause(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.beginPause'
    package: '@azure/arm-sql'
    summary: Pauses a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPause(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be paused.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginResume(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.beginResume'
    package: '@azure/arm-sql'
    summary: Resumes a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginResume(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be resumed.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdate(string, string, string, DatabaseUpdate,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: DatabaseUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.DatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpgradeDataWarehouse(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.beginUpgradeDataWarehouse'
    package: '@azure/arm-sql'
    summary: Upgrades a data warehouse.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeDataWarehouse(resourceGroupName: string,
        serverName: string, databaseName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be upgraded.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createImportOperation(string, string, string, ImportExtensionRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.createImportOperation'
    package: '@azure/arm-sql'
    summary: >-
      Creates an import operation that imports a bacpac into an existing
      database. The existing

      database must be empty.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createImportOperation(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: ImportExtensionRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to import into
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportExtensionRequest" />
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabasesCreateImportOperationResponse"
          />&gt;
        description: Promise<Models.DatabasesCreateImportOperationResponse>
  - name: >-
      createOrUpdate(string, string, string, Database,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.createOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: Database, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Database" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesCreateOrUpdateResponse" />&gt;
        description: Promise<Models.DatabasesCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.deleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes the database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      exportMethod(string, string, string, ExportRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.exportMethod'
    package: '@azure/arm-sql'
    summary: Exports a database to a bacpac.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportMethod(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ExportRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be exported.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ExportRequest" />
          description: The required parameters for exporting a database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesExportMethodResponse" />&gt;
        description: Promise<Models.DatabasesExportMethodResponse>
  - name: 'failover(string, string, string, Models.DatabasesFailoverOptionalParams)'
    uid: '@azure/arm-sql.Databases.failover'
    package: '@azure/arm-sql'
    summary: Failovers a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function failover(resourceGroupName: string, serverName: string,
        databaseName: string, options?: Models.DatabasesFailoverOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to failover.
        - id: options
          type: <xref uid="Models.DatabasesFailoverOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.get'
    package: '@azure/arm-sql'
    summary: Gets a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesGetResponse" />&gt;
        description: Promise<Models.DatabasesGetResponse>
  - name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<Database>)'
    uid: '@azure/arm-sql.Databases.get_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<Database>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.Database" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<Database>)'
    uid: '@azure/arm-sql.Databases.get_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, callback: ServiceCallback<Database>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.Database" />&gt;
          description: |
            The callback
  - name: 'importMethod(string, string, ImportRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.importMethod'
    package: '@azure/arm-sql'
    summary: Imports a bacpac into a new database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importMethod(resourceGroupName: string, serverName: string,
        parameters: ImportRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportRequest" />
          description: The required parameters for importing a Bacpac into a database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesImportMethodResponse" />&gt;
        description: Promise<Models.DatabasesImportMethodResponse>
  - name: 'listByElasticPool(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.listByElasticPool'
    package: '@azure/arm-sql'
    summary: Gets a list of databases in an elastic pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByElasticPool(resourceGroupName: string, serverName:
        string, elasticPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: elasticPoolName
          type: string
          description: The name of the elastic pool.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabasesListByElasticPoolResponse"
          />&gt;
        description: Promise<Models.DatabasesListByElasticPoolResponse>
  - name: >-
      listByElasticPool(string, string, string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    uid: '@azure/arm-sql.Databases.listByElasticPool_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByElasticPool(resourceGroupName: string, serverName:
        string, elasticPoolName: string, options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: elasticPoolName
          type: string
          description: The name of the elastic pool.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listByElasticPool(string, string, string,
      ServiceCallback<DatabaseListResult>)
    uid: '@azure/arm-sql.Databases.listByElasticPool_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByElasticPool(resourceGroupName: string, serverName:
        string, elasticPoolName: string, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: elasticPoolName
          type: string
          description: The name of the elastic pool.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByElasticPoolNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.listByElasticPoolNext'
    package: '@azure/arm-sql'
    summary: Gets a list of databases in an elastic pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByElasticPoolNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabasesListByElasticPoolNextResponse"
          />&gt;
        description: Promise<Models.DatabasesListByElasticPoolNextResponse>
  - name: >-
      listByElasticPoolNext(string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    uid: '@azure/arm-sql.Databases.listByElasticPoolNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByElasticPoolNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByElasticPoolNext(string, ServiceCallback<DatabaseListResult>)'
    uid: '@azure/arm-sql.Databases.listByElasticPoolNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByElasticPoolNext(nextPageLink: string, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByServer(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.listByServer'
    package: '@azure/arm-sql'
    summary: Gets a list of databases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesListByServerResponse" />&gt;
        description: Promise<Models.DatabasesListByServerResponse>
  - name: >-
      listByServer(string, string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    uid: '@azure/arm-sql.Databases.listByServer_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByServer(string, string, ServiceCallback<DatabaseListResult>)'
    uid: '@azure/arm-sql.Databases.listByServer_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        callback: ServiceCallback<DatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByServerNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.listByServerNext'
    package: '@azure/arm-sql'
    summary: Gets a list of databases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesListByServerNextResponse" />&gt;
        description: Promise<Models.DatabasesListByServerNextResponse>
  - name: >-
      listByServerNext(string, RequestOptionsBase,
      ServiceCallback<DatabaseListResult>)
    uid: '@azure/arm-sql.Databases.listByServerNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByServerNext(string, ServiceCallback<DatabaseListResult>)'
    uid: '@azure/arm-sql.Databases.listByServerNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, callback:
        ServiceCallback<DatabaseListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseListResult"
            />&gt;
          description: |
            The callback
  - name: 'listMetricDefinitions(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.listMetricDefinitions'
    package: '@azure/arm-sql'
    summary: Returns database metric definitions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, serverName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DatabasesListMetricDefinitionsResponse"
          />&gt;
        description: Promise<Models.DatabasesListMetricDefinitionsResponse>
  - name: >-
      listMetricDefinitions(string, string, string, RequestOptionsBase,
      ServiceCallback<MetricDefinitionListResult>)
    uid: '@azure/arm-sql.Databases.listMetricDefinitions_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, serverName:
        string, databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<MetricDefinitionListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.MetricDefinitionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listMetricDefinitions(string, string, string,
      ServiceCallback<MetricDefinitionListResult>)
    uid: '@azure/arm-sql.Databases.listMetricDefinitions_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, serverName:
        string, databaseName: string, callback:
        ServiceCallback<MetricDefinitionListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.MetricDefinitionListResult" />&gt;
          description: |
            The callback
  - name: 'listMetrics(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.listMetrics'
    package: '@azure/arm-sql'
    summary: Returns database metrics.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, serverName: string,
        databaseName: string, filter: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesListMetricsResponse" />&gt;
        description: Promise<Models.DatabasesListMetricsResponse>
  - name: >-
      listMetrics(string, string, string, string, RequestOptionsBase,
      ServiceCallback<MetricListResult>)
    uid: '@azure/arm-sql.Databases.listMetrics_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, serverName: string,
        databaseName: string, filter: string, options: RequestOptionsBase,
        callback: ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.MetricListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      listMetrics(string, string, string, string,
      ServiceCallback<MetricListResult>)
    uid: '@azure/arm-sql.Databases.listMetrics_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, serverName: string,
        databaseName: string, filter: string, callback:
        ServiceCallback<MetricListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.MetricListResult"
            />&gt;
          description: |
            The callback
  - name: 'pause(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.pause'
    package: '@azure/arm-sql'
    summary: Pauses a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function pause(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be paused.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesPauseResponse" />&gt;
        description: Promise<Models.DatabasesPauseResponse>
  - name: >-
      rename(string, string, string, ResourceMoveDefinition,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Databases.rename'
    package: '@azure/arm-sql'
    summary: Renames a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rename(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ResourceMoveDefinition, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to rename.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ResourceMoveDefinition" />
          description: The resource move definition for renaming this database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      rename(string, string, string, ResourceMoveDefinition, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-sql.Databases.rename_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rename(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ResourceMoveDefinition, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to rename.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ResourceMoveDefinition" />
          description: The resource move definition for renaming this database.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      rename(string, string, string, ResourceMoveDefinition,
      ServiceCallback<void>)
    uid: '@azure/arm-sql.Databases.rename_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rename(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ResourceMoveDefinition, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to rename.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ResourceMoveDefinition" />
          description: The resource move definition for renaming this database.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'resume(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.resume'
    package: '@azure/arm-sql'
    summary: Resumes a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resume(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be resumed.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesResumeResponse" />&gt;
        description: Promise<Models.DatabasesResumeResponse>
  - name: 'update(string, string, string, DatabaseUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.update'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: DatabaseUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.DatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DatabasesUpdateResponse" />&gt;
        description: Promise<Models.DatabasesUpdateResponse>
  - name: 'upgradeDataWarehouse(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Databases.upgradeDataWarehouse'
    package: '@azure/arm-sql'
    summary: Upgrades a data warehouse.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function upgradeDataWarehouse(resourceGroupName: string, serverName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be upgraded.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
