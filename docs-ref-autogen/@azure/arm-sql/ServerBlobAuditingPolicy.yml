### YamlMime:TSType
name: ServerBlobAuditingPolicy
uid: '@azure/arm-sql.ServerBlobAuditingPolicy'
package: '@azure/arm-sql'
summary: A server blob auditing policy.
fullName: ServerBlobAuditingPolicy
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: auditActionsAndGroups
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.auditActionsAndGroups'
    package: '@azure/arm-sql'
    summary: >
      Specifies the Actions-Groups and Actions to audit.

      The recommended set of action groups to use is the following combination -
      this will audit all

      the queries and stored procedures executed against the database, as well
      as successful and

      failed logins:


      BATCH_COMPLETED_GROUP,

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,

      FAILED_DATABASE_AUTHENTICATION_GROUP.


      This above combination is also the set that is configured by default when
      enabling auditing

      from the Azure portal.


      The supported action groups to audit are (note: choose only specific
      groups that cover your

      auditing needs. Using unnecessary groups could lead to very large
      quantities of audit

      records):


      APPLICATION_ROLE_CHANGE_PASSWORD_GROUP

      BACKUP_RESTORE_GROUP

      DATABASE_LOGOUT_GROUP

      DATABASE_OBJECT_CHANGE_GROUP

      DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP

      DATABASE_OBJECT_PERMISSION_CHANGE_GROUP

      DATABASE_OPERATION_GROUP

      DATABASE_PERMISSION_CHANGE_GROUP

      DATABASE_PRINCIPAL_CHANGE_GROUP

      DATABASE_PRINCIPAL_IMPERSONATION_GROUP

      DATABASE_ROLE_MEMBER_CHANGE_GROUP

      FAILED_DATABASE_AUTHENTICATION_GROUP

      SCHEMA_OBJECT_ACCESS_GROUP

      SCHEMA_OBJECT_CHANGE_GROUP

      SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP

      SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP

      SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP

      USER_CHANGE_PASSWORD_GROUP

      BATCH_STARTED_GROUP

      BATCH_COMPLETED_GROUP


      These are groups that cover all sql statements and stored procedures
      executed against the

      database, and should not be used in combination with other groups as this
      will result in

      duplicate audit logs.


      For more information, see [Database-Level Audit Action

      Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).


      For Database auditing policy, specific Actions can also be specified (note
      that Actions cannot

      be specified for Server auditing policy). The supported actions to audit
      are:

      SELECT

      UPDATE

      INSERT

      DELETE

      EXECUTE

      RECEIVE

      REFERENCES


      The general form for defining an action to be audited is:

      {action} ON {object} BY {principal}


      Note that <object> in the above format can refer to an object like a
      table, view, or stored

      procedure, or an entire database or schema. For the latter cases, the
      forms

      DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.


      For example:

      SELECT on dbo.myTable by public

      SELECT on DATABASE::myDatabase by public

      SELECT on SCHEMA::mySchema by public


      For more information, see [Database-Level Audit

      Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
    fullName: auditActionsAndGroups
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'auditActionsAndGroups?: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: id
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.id'
    package: '@azure/arm-sql'
    summary: >-
      Resource ID.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: isAzureMonitorTargetEnabled
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.isAzureMonitorTargetEnabled'
    package: '@azure/arm-sql'
    summary: >
      Specifies whether audit events are sent to Azure Monitor.

      In order to send the events to Azure Monitor, specify 'state' as 'Enabled'
      and

      'isAzureMonitorTargetEnabled' as true.

      When using REST API to configure auditing, Diagnostic Settings with
      'SQLSecurityAuditEvents'

      diagnostic logs category on the database should be also created.

      Note that for server level audit you should use the 'master' database as
      {databaseName}.


      Diagnostic Settings URI format:

      PUT

      https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview


      For more information, see [Diagnostic Settings REST

      API](https://go.microsoft.com/fwlink/?linkid=2033207)

      or [Diagnostic Settings
      PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
    fullName: isAzureMonitorTargetEnabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isAzureMonitorTargetEnabled?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: isStorageSecondaryKeyInUse
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.isStorageSecondaryKeyInUse'
    package: '@azure/arm-sql'
    summary: >-
      Specifies whether storageAccountAccessKey value is the storage's secondary
      key.
    fullName: isStorageSecondaryKeyInUse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isStorageSecondaryKeyInUse?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: name
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.name'
    package: '@azure/arm-sql'
    summary: >-
      Resource name.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: retentionDays
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.retentionDays'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the number of days to keep in the audit logs in the storage
      account.
    fullName: retentionDays
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'retentionDays?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: state
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.state'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the state of the policy. If state is Enabled, storageEndpoint or

      isAzureMonitorTargetEnabled are required. Possible values include:
      'Enabled', 'Disabled'
    fullName: state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'state: BlobAuditingPolicyState'
      return:
        type: <xref uid="@azure/arm-sql.BlobAuditingPolicyState" />
        description: ''
  - name: storageAccountAccessKey
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.storageAccountAccessKey'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the identifier key of the auditing storage account. If state is
      Enabled and

      storageEndpoint is specified, storageAccountAccessKey is required.
    fullName: storageAccountAccessKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'storageAccountAccessKey?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: storageAccountSubscriptionId
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.storageAccountSubscriptionId'
    package: '@azure/arm-sql'
    summary: Specifies the blob storage subscription Id.
    fullName: storageAccountSubscriptionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'storageAccountSubscriptionId?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: storageEndpoint
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.storageEndpoint'
    package: '@azure/arm-sql'
    summary: >-
      Specifies the blob storage endpoint (e.g.
      https://MyAccount.blob.core.windows.net). If state

      is Enabled, storageEndpoint is required.
    fullName: storageEndpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'storageEndpoint?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: type
    uid: '@azure/arm-sql.ServerBlobAuditingPolicy.type'
    package: '@azure/arm-sql'
    summary: >-
      Resource type.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type?: undefined | string'
      return:
        type: undefined | string
        description: ''
extends: <xref uid="@azure/arm-sql.ProxyResource" />
