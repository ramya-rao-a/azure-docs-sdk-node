### YamlMime:TSType
name: Servers
uid: '@azure/arm-sql.Servers'
package: '@azure/arm-sql'
summary: Class representing a Servers.
fullName: Servers
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Servers(SqlManagementClientContext)
    uid: '@azure/arm-sql.Servers.constructor'
    package: '@azure/arm-sql'
    summary: Create a Servers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Servers(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sql.SqlManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'beginCreateOrUpdate(string, string, Server, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates or updates a server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, parameters: Server, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Server" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.beginDeleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes a server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serverName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginUpdate(string, string, ServerUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates a server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serverName: string,
        parameters: ServerUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ServerUpdate" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Servers.checkNameAvailability'
    package: '@azure/arm-sql'
    summary: Determines whether a resource can be created with the specified name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters: CheckNameAvailabilityRequest,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-sql.CheckNameAvailabilityRequest" />
          description: The parameters to request for name availability.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ServersCheckNameAvailabilityResponse"
          />&gt;
        description: Promise<Models.ServersCheckNameAvailabilityResponse>
  - name: >-
      checkNameAvailability(CheckNameAvailabilityRequest, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResponse>)
    uid: '@azure/arm-sql.Servers.checkNameAvailability_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters: CheckNameAvailabilityRequest,
        options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-sql.CheckNameAvailabilityRequest" />
          description: The parameters to request for name availability.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.CheckNameAvailabilityResponse" />&gt;
          description: |
            The callback
  - name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      ServiceCallback<CheckNameAvailabilityResponse>)
    uid: '@azure/arm-sql.Servers.checkNameAvailability_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters: CheckNameAvailabilityRequest,
        callback: ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-sql.CheckNameAvailabilityRequest" />
          description: The parameters to request for name availability.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.CheckNameAvailabilityResponse" />&gt;
          description: |
            The callback
  - name: 'createOrUpdate(string, string, Server, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.createOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates or updates a server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        parameters: Server, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Server" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServersCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ServersCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.deleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes a server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serverName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.get'
    package: '@azure/arm-sql'
    summary: Gets a server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServersGetResponse" />&gt;
        description: Promise<Models.ServersGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Server>)'
    uid: '@azure/arm-sql.Servers.get_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Server>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.Server" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Server>)'
    uid: '@azure/arm-sql.Servers.get_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, callback:
        ServiceCallback<Server>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.Server" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.Servers.list'
    package: '@azure/arm-sql'
    summary: Gets a list of all servers in the subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServersListResponse" />&gt;
        description: Promise<Models.ServersListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<ServerListResult>)'
    uid: '@azure/arm-sql.Servers.list_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<ServerListResult>)
    uid: '@azure/arm-sql.Servers.list_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ServerListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.listByResourceGroup'
    package: '@azure/arm-sql'
    summary: Gets a list of servers in a resource groups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ServersListByResourceGroupResponse"
          />&gt;
        description: Promise<Models.ServersListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ServerListResult>)
    uid: '@azure/arm-sql.Servers.listByResourceGroup_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ServerListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<ServerListResult>)'
    uid: '@azure/arm-sql.Servers.listByResourceGroup_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.listByResourceGroupNext'
    package: '@azure/arm-sql'
    summary: Gets a list of servers in a resource groups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ServersListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.ServersListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ServerListResult>)
    uid: '@azure/arm-sql.Servers.listByResourceGroupNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<ServerListResult>)'
    uid: '@azure/arm-sql.Servers.listByResourceGroupNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.listNext'
    package: '@azure/arm-sql'
    summary: Gets a list of all servers in the subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServersListNextResponse" />&gt;
        description: Promise<Models.ServersListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<ServerListResult>)'
    uid: '@azure/arm-sql.Servers.listNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ServerListResult>)'
    uid: '@azure/arm-sql.Servers.listNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ServerListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.ServerListResult"
            />&gt;
          description: |
            The callback
  - name: 'update(string, string, ServerUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.Servers.update'
    package: '@azure/arm-sql'
    summary: Updates a server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serverName: string,
        parameters: ServerUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ServerUpdate" />
          description: The requested server resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServersUpdateResponse" />&gt;
        description: Promise<Models.ServersUpdateResponse>
