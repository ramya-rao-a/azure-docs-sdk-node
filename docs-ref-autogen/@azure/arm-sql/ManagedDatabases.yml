### YamlMime:TSType
name: ManagedDatabases
uid: '@azure/arm-sql.ManagedDatabases'
package: '@azure/arm-sql'
summary: Class representing a ManagedDatabases.
fullName: ManagedDatabases
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ManagedDatabases(SqlManagementClientContext)
    uid: '@azure/arm-sql.ManagedDatabases.constructor'
    package: '@azure/arm-sql'
    summary: Create a ManagedDatabases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ManagedDatabases(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sql.SqlManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCompleteRestore(string, string, string,
      CompleteDatabaseRestoreDefinition, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.ManagedDatabases.beginCompleteRestore'
    package: '@azure/arm-sql'
    summary: Completes the restore operation on a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCompleteRestore(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        CompleteDatabaseRestoreDefinition, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CompleteDatabaseRestoreDefinition" />
          description: The definition for completing the restore of this managed database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateOrUpdate(string, string, string, ManagedDatabase,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.ManagedDatabases.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        ManagedDatabase, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabase" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.ManagedDatabases.beginDeleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdate(string, string, string, ManagedDatabaseUpdate,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.ManagedDatabases.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, parameters: ManagedDatabaseUpdate,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      completeRestore(string, string, string, CompleteDatabaseRestoreDefinition,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.ManagedDatabases.completeRestore'
    package: '@azure/arm-sql'
    summary: Completes the restore operation on a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function completeRestore(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, parameters:
        CompleteDatabaseRestoreDefinition, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CompleteDatabaseRestoreDefinition" />
          description: The definition for completing the restore of this managed database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      createOrUpdate(string, string, string, ManagedDatabase,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.ManagedDatabases.createOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, parameters: ManagedDatabase, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabase" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ManagedDatabasesCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.ManagedDatabasesCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.ManagedDatabases.deleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.ManagedDatabases.get'
    package: '@azure/arm-sql'
    summary: Gets a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ManagedDatabasesGetResponse" />&gt;
        description: Promise<Models.ManagedDatabasesGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ManagedDatabase>)
    uid: '@azure/arm-sql.ManagedDatabases.get_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedDatabase>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.ManagedDatabase" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<ManagedDatabase>)'
    uid: '@azure/arm-sql.ManagedDatabases.get_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, callback: ServiceCallback<ManagedDatabase>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.ManagedDatabase" />&gt;
          description: |
            The callback
  - name: 'listByInstance(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.ManagedDatabases.listByInstance'
    package: '@azure/arm-sql'
    summary: Gets a list of managed databases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ManagedDatabasesListByInstanceResponse"
          />&gt;
        description: Promise<Models.ManagedDatabasesListByInstanceResponse>
  - name: >-
      listByInstance(string, string, RequestOptionsBase,
      ServiceCallback<ManagedDatabaseListResult>)
    uid: '@azure/arm-sql.ManagedDatabases.listByInstance_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.ManagedDatabaseListResult" />&gt;
          description: |
            The callback
  - name: 'listByInstance(string, string, ServiceCallback<ManagedDatabaseListResult>)'
    uid: '@azure/arm-sql.ManagedDatabases.listByInstance_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, callback: ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.ManagedDatabaseListResult" />&gt;
          description: |
            The callback
  - name: 'listByInstanceNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.ManagedDatabases.listByInstanceNext'
    package: '@azure/arm-sql'
    summary: Gets a list of managed databases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagedDatabasesListByInstanceNextResponse" />&gt;
        description: Promise<Models.ManagedDatabasesListByInstanceNextResponse>
  - name: >-
      listByInstanceNext(string, RequestOptionsBase,
      ServiceCallback<ManagedDatabaseListResult>)
    uid: '@azure/arm-sql.ManagedDatabases.listByInstanceNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.ManagedDatabaseListResult" />&gt;
          description: |
            The callback
  - name: 'listByInstanceNext(string, ServiceCallback<ManagedDatabaseListResult>)'
    uid: '@azure/arm-sql.ManagedDatabases.listByInstanceNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByInstanceNext(nextPageLink: string, callback:
        ServiceCallback<ManagedDatabaseListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.ManagedDatabaseListResult" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, ManagedDatabaseUpdate,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.ManagedDatabases.update'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, parameters: ManagedDatabaseUpdate, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ManagedDatabasesUpdateResponse" />&gt;
        description: Promise<Models.ManagedDatabasesUpdateResponse>
