### YamlMime:TSType
name: ServerAdministrators
uid: '@azure/arm-postgresql.ServerAdministrators'
package: '@azure/arm-postgresql'
summary: Class representing a ServerAdministrators.
fullName: ServerAdministrators
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ServerAdministrators(PostgreSQLManagementClientContext)
    uid: '@azure/arm-postgresql.ServerAdministrators.constructor'
    package: '@azure/arm-postgresql'
    summary: Create a ServerAdministrators.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ServerAdministrators(client: PostgreSQLManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/arm-postgresql.PostgreSQLManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, ServerAdministratorResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-postgresql.ServerAdministrators.beginCreateOrUpdate'
    package: '@azure/arm-postgresql'
    summary: >-
      Creates or update active directory administrator on an existing server.
      The update action will

      overwrite the existing administrator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, properties: ServerAdministratorResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: properties
          type: <xref uid="@azure/arm-postgresql.ServerAdministratorResource" />
          description: >-
            The required parameters for creating or updating an AAD server
            administrator.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerAdministrators.beginDeleteMethod'
    package: '@azure/arm-postgresql'
    summary: Deletes server active directory administrator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serverName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrUpdate(string, string, ServerAdministratorResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-postgresql.ServerAdministrators.createOrUpdate'
    package: '@azure/arm-postgresql'
    summary: >-
      Creates or update active directory administrator on an existing server.
      The update action will

      overwrite the existing administrator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        properties: ServerAdministratorResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: properties
          type: <xref uid="@azure/arm-postgresql.ServerAdministratorResource" />
          description: >-
            The required parameters for creating or updating an AAD server
            administrator.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ServerAdministratorsCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ServerAdministratorsCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerAdministrators.deleteMethod'
    package: '@azure/arm-postgresql'
    summary: Deletes server active directory administrator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serverName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerAdministrators.get'
    package: '@azure/arm-postgresql'
    summary: Gets information about a AAD server administrator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServerAdministratorsGetResponse" />&gt;
        description: Promise<Models.ServerAdministratorsGetResponse>
  - name: >-
      get(string, string, RequestOptionsBase,
      ServiceCallback<ServerAdministratorResource>)
    uid: '@azure/arm-postgresql.ServerAdministrators.get_2'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ServerAdministratorResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerAdministratorResource" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<ServerAdministratorResource>)'
    uid: '@azure/arm-postgresql.ServerAdministrators.get_1'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, callback:
        ServiceCallback<ServerAdministratorResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerAdministratorResource" />&gt;
          description: |
            The callback
  - name: 'list(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerAdministrators.list'
    package: '@azure/arm-postgresql'
    summary: Returns a list of server Administrators.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serverName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServerAdministratorsListResponse" />&gt;
        description: Promise<Models.ServerAdministratorsListResponse>
  - name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<ServerAdministratorResourceListResult>)
    uid: '@azure/arm-postgresql.ServerAdministrators.list_2'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serverName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ServerAdministratorResourceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerAdministratorResourceListResult"
            />&gt;
          description: |
            The callback
  - name: >-
      list(string, string,
      ServiceCallback<ServerAdministratorResourceListResult>)
    uid: '@azure/arm-postgresql.ServerAdministrators.list_1'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serverName: string, callback:
        ServiceCallback<ServerAdministratorResourceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerAdministratorResourceListResult"
            />&gt;
          description: |
            The callback
