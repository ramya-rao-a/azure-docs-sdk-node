### YamlMime:TSType
name: ServerKeys
uid: '@azure/arm-postgresql.ServerKeys'
package: '@azure/arm-postgresql'
summary: Class representing a ServerKeys.
fullName: ServerKeys
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ServerKeys(PostgreSQLManagementClientContext)
    uid: '@azure/arm-postgresql.ServerKeys.constructor'
    package: '@azure/arm-postgresql'
    summary: Create a ServerKeys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ServerKeys(client: PostgreSQLManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/arm-postgresql.PostgreSQLManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, ServerKey, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-postgresql.ServerKeys.beginCreateOrUpdate'
    package: '@azure/arm-postgresql'
    summary: Creates or updates a PostgreSQL Server key.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(serverName: string, keyName: string,
        parameters: ServerKey, resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: serverName
          type: string
          description: The name of the server.
        - id: keyName
          type: string
          description: >-
            The name of the PostgreSQL Server key to be operated on (updated or
            created).
        - id: parameters
          type: <xref uid="@azure/arm-postgresql.ServerKey" />
          description: The requested PostgreSQL Server key resource state.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerKeys.beginDeleteMethod'
    package: '@azure/arm-postgresql'
    summary: Deletes the PostgreSQL Server key with the given name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(serverName: string, keyName: string,
        resourceGroupName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: serverName
          type: string
          description: The name of the server.
        - id: keyName
          type: string
          description: The name of the PostgreSQL Server key to be deleted.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrUpdate(string, string, ServerKey, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-postgresql.ServerKeys.createOrUpdate'
    package: '@azure/arm-postgresql'
    summary: Creates or updates a PostgreSQL Server key.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(serverName: string, keyName: string, parameters:
        ServerKey, resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: serverName
          type: string
          description: The name of the server.
        - id: keyName
          type: string
          description: >-
            The name of the PostgreSQL Server key to be operated on (updated or
            created).
        - id: parameters
          type: <xref uid="@azure/arm-postgresql.ServerKey" />
          description: The requested PostgreSQL Server key resource state.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServerKeysCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ServerKeysCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerKeys.deleteMethod'
    package: '@azure/arm-postgresql'
    summary: Deletes the PostgreSQL Server key with the given name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(serverName: string, keyName: string,
        resourceGroupName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: serverName
          type: string
          description: The name of the server.
        - id: keyName
          type: string
          description: The name of the PostgreSQL Server key to be deleted.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerKeys.get'
    package: '@azure/arm-postgresql'
    summary: Gets a PostgreSQL Server key.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, keyName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: keyName
          type: string
          description: The name of the PostgreSQL Server key to be retrieved.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServerKeysGetResponse" />&gt;
        description: Promise<Models.ServerKeysGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ServerKey>)
    uid: '@azure/arm-postgresql.ServerKeys.get_2'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, keyName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ServerKey>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: keyName
          type: string
          description: The name of the PostgreSQL Server key to be retrieved.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-postgresql.ServerKey"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<ServerKey>)'
    uid: '@azure/arm-postgresql.ServerKeys.get_1'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, keyName:
        string, callback: ServiceCallback<ServerKey>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: keyName
          type: string
          description: The name of the PostgreSQL Server key to be retrieved.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-postgresql.ServerKey"
            />&gt;
          description: |
            The callback
  - name: 'list(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerKeys.list'
    package: '@azure/arm-postgresql'
    summary: Gets a list of  Server keys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serverName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServerKeysListResponse" />&gt;
        description: Promise<Models.ServerKeysListResponse>
  - name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<ServerKeyListResult>)
    uid: '@azure/arm-postgresql.ServerKeys.list_2'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serverName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerKeyListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, string, ServiceCallback<ServerKeyListResult>)'
    uid: '@azure/arm-postgresql.ServerKeys.list_1'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serverName: string, callback:
        ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerKeyListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-postgresql.ServerKeys.listNext'
    package: '@azure/arm-postgresql'
    summary: Gets a list of  Server keys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ServerKeysListNextResponse" />&gt;
        description: Promise<Models.ServerKeysListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<ServerKeyListResult>)'
    uid: '@azure/arm-postgresql.ServerKeys.listNext_2'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerKeyListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ServerKeyListResult>)'
    uid: '@azure/arm-postgresql.ServerKeys.listNext_1'
    package: '@azure/arm-postgresql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ServerKeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-postgresql.ServerKeyListResult" />&gt;
          description: |
            The callback
