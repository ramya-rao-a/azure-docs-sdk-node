### YamlMime:TSType
name: Pool
uid: '@azure/arm-batch.Pool'
package: '@azure/arm-batch'
summary: Contains information about a pool.
fullName: Pool
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: allocationState
    uid: '@azure/arm-batch.Pool.allocationState'
    package: '@azure/arm-batch'
    summary: >-
      Whether the pool is resizing. Possible values include: 'Steady',
      'Resizing', 'Stopping'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: allocationState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allocationState?: AllocationState'
      return:
        type: <xref uid="@azure/arm-batch.AllocationState" />
        description: ''
  - name: allocationStateTransitionTime
    uid: '@azure/arm-batch.Pool.allocationStateTransitionTime'
    package: '@azure/arm-batch'
    summary: >-
      The time at which the pool entered its current allocation state. **NOTE:
      This property will

      not be serialized. It can only be populated by the server.**
    fullName: allocationStateTransitionTime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allocationStateTransitionTime?: Date'
      return:
        type: Date
        description: ''
  - name: applicationLicenses
    uid: '@azure/arm-batch.Pool.applicationLicenses'
    package: '@azure/arm-batch'
    summary: >-
      The list of application licenses the Batch service will make available on
      each compute node in

      the pool. The list of application licenses must be a subset of available
      Batch service

      application licenses. If a license is requested which is not supported,
      pool creation will

      fail.
    fullName: applicationLicenses
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'applicationLicenses?: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: applicationPackages
    uid: '@azure/arm-batch.Pool.applicationPackages'
    package: '@azure/arm-batch'
    summary: >-
      The list of application packages to be installed on each compute node in
      the pool. Changes to

      application package references affect all new compute nodes joining the
      pool, but do not

      affect compute nodes that are already in the pool until they are rebooted
      or reimaged. There

      is a maximum of 10 application package references on any given pool.
    fullName: applicationPackages
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'applicationPackages?: ApplicationPackageReference[]'
      return:
        type: '<xref uid="@azure/arm-batch.ApplicationPackageReference" />[]'
        description: ''
  - name: autoScaleRun
    uid: '@azure/arm-batch.Pool.autoScaleRun'
    package: '@azure/arm-batch'
    summary: >-
      The results and errors from the last execution of the autoscale formula.
      This property is set

      only if the pool automatically scales, i.e. autoScaleSettings are used.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: autoScaleRun
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoScaleRun?: AutoScaleRun'
      return:
        type: <xref uid="@azure/arm-batch.AutoScaleRun" />
        description: ''
  - name: certificates
    uid: '@azure/arm-batch.Pool.certificates'
    package: '@azure/arm-batch'
    summary: >-
      The list of certificates to be installed on each compute node in the pool.
      For Windows compute

      nodes, the Batch service installs the certificates to the specified
      certificate store and

      location. For Linux compute nodes, the certificates are stored in a
      directory inside the task

      working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
      supplied to the

      task to query for this location. For certificates with visibility of
      'remoteUser', a 'certs'

      directory is created in the user's home directory (e.g.,
      /home/{user-name}/certs) and

      certificates are placed in that directory.
    fullName: certificates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'certificates?: CertificateReference[]'
      return:
        type: '<xref uid="@azure/arm-batch.CertificateReference" />[]'
        description: ''
  - name: creationTime
    uid: '@azure/arm-batch.Pool.creationTime'
    package: '@azure/arm-batch'
    summary: >-
      The creation time of the pool. **NOTE: This property will not be
      serialized. It can only be

      populated by the server.**
    fullName: creationTime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'creationTime?: Date'
      return:
        type: Date
        description: ''
  - name: currentDedicatedNodes
    uid: '@azure/arm-batch.Pool.currentDedicatedNodes'
    package: '@azure/arm-batch'
    summary: >-
      The number of compute nodes currently in the pool. **NOTE: This property
      will not be

      serialized. It can only be populated by the server.**
    fullName: currentDedicatedNodes
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'currentDedicatedNodes?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: currentLowPriorityNodes
    uid: '@azure/arm-batch.Pool.currentLowPriorityNodes'
    package: '@azure/arm-batch'
    summary: >-
      The number of low priority compute nodes currently in the pool. **NOTE:
      This property will not

      be serialized. It can only be populated by the server.**
    fullName: currentLowPriorityNodes
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'currentLowPriorityNodes?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: deploymentConfiguration
    uid: '@azure/arm-batch.Pool.deploymentConfiguration'
    package: '@azure/arm-batch'
    summary: >-
      This property describes how the pool nodes will be deployed - using Cloud
      Services or Virtual

      Machines. Using CloudServiceConfiguration specifies that the nodes should
      be creating using

      Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure
      Virtual Machines

      (IaaS).
    fullName: deploymentConfiguration
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deploymentConfiguration?: DeploymentConfiguration'
      return:
        type: <xref uid="@azure/arm-batch.DeploymentConfiguration" />
        description: ''
  - name: displayName
    uid: '@azure/arm-batch.Pool.displayName'
    package: '@azure/arm-batch'
    summary: >-
      The display name for the pool. The display name need not be unique and can
      contain any Unicode

      characters up to a maximum length of 1024.
    fullName: displayName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'displayName?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: etag
    uid: '@azure/arm-batch.Pool.etag'
    package: '@azure/arm-batch'
    summary: >-
      The ETag of the resource, used for concurrency statements.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: etag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'etag?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: id
    uid: '@azure/arm-batch.Pool.id'
    package: '@azure/arm-batch'
    summary: >-
      The ID of the resource.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: interNodeCommunication
    uid: '@azure/arm-batch.Pool.interNodeCommunication'
    package: '@azure/arm-batch'
    summary: >-
      Whether the pool permits direct communication between nodes. This imposes
      restrictions on

      which nodes can be assigned to the pool. Enabling this value can reduce
      the chance of the

      requested number of nodes to be allocated in the pool. If not specified,
      this value defaults

      to 'Disabled'. Possible values include: 'Enabled', 'Disabled'
    fullName: interNodeCommunication
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'interNodeCommunication?: InterNodeCommunicationState'
      return:
        type: <xref uid="@azure/arm-batch.InterNodeCommunicationState" />
        description: ''
  - name: lastModified
    uid: '@azure/arm-batch.Pool.lastModified'
    package: '@azure/arm-batch'
    summary: >-
      The last modified time of the pool. This is the last time at which the
      pool level data, such

      as the targetDedicatedNodes or autoScaleSettings, changed. It does not
      factor in node-level

      changes such as a compute node changing state.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: lastModified
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lastModified?: Date'
      return:
        type: Date
        description: ''
  - name: metadata
    uid: '@azure/arm-batch.Pool.metadata'
    package: '@azure/arm-batch'
    summary: >-
      A list of name-value pairs associated with the pool as metadata. The Batch
      service does not

      assign any meaning to metadata; it is solely for the use of user code.
    fullName: metadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'metadata?: MetadataItem[]'
      return:
        type: '<xref uid="@azure/arm-batch.MetadataItem" />[]'
        description: ''
  - name: mountConfiguration
    uid: '@azure/arm-batch.Pool.mountConfiguration'
    package: '@azure/arm-batch'
    summary: >-
      A list of file systems to mount on each node in the pool. This supports
      Azure Files, NFS,

      CIFS/SMB, and Blobfuse.
    fullName: mountConfiguration
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mountConfiguration?: MountConfiguration[]'
      return:
        type: '<xref uid="@azure/arm-batch.MountConfiguration" />[]'
        description: ''
  - name: name
    uid: '@azure/arm-batch.Pool.name'
    package: '@azure/arm-batch'
    summary: >-
      The name of the resource.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: networkConfiguration
    uid: '@azure/arm-batch.Pool.networkConfiguration'
    package: '@azure/arm-batch'
    summary: The network configuration for the pool.
    fullName: networkConfiguration
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'networkConfiguration?: NetworkConfiguration'
      return:
        type: <xref uid="@azure/arm-batch.NetworkConfiguration" />
        description: ''
  - name: provisioningState
    uid: '@azure/arm-batch.Pool.provisioningState'
    package: '@azure/arm-batch'
    summary: >-
      The current state of the pool. Possible values include: 'Succeeded',
      'Deleting'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: provisioningState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'provisioningState?: PoolProvisioningState'
      return:
        type: <xref uid="@azure/arm-batch.PoolProvisioningState" />
        description: ''
  - name: provisioningStateTransitionTime
    uid: '@azure/arm-batch.Pool.provisioningStateTransitionTime'
    package: '@azure/arm-batch'
    summary: >-
      The time at which the pool entered its current state. **NOTE: This
      property will not be

      serialized. It can only be populated by the server.**
    fullName: provisioningStateTransitionTime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'provisioningStateTransitionTime?: Date'
      return:
        type: Date
        description: ''
  - name: resizeOperationStatus
    uid: '@azure/arm-batch.Pool.resizeOperationStatus'
    package: '@azure/arm-batch'
    summary: >-
      Contains details about the current or last completed resize operation.
      **NOTE: This property

      will not be serialized. It can only be populated by the server.**
    fullName: resizeOperationStatus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resizeOperationStatus?: ResizeOperationStatus'
      return:
        type: <xref uid="@azure/arm-batch.ResizeOperationStatus" />
        description: ''
  - name: scaleSettings
    uid: '@azure/arm-batch.Pool.scaleSettings'
    package: '@azure/arm-batch'
    summary: Settings which configure the number of nodes in the pool.
    fullName: scaleSettings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scaleSettings?: ScaleSettings'
      return:
        type: <xref uid="@azure/arm-batch.ScaleSettings" />
        description: ''
  - name: startTask
    uid: '@azure/arm-batch.Pool.startTask'
    package: '@azure/arm-batch'
    summary: >-
      A task specified to run on each compute node as it joins the pool. In an
      PATCH (update)

      operation, this property can be set to an empty object to remove the start
      task from the pool.
    fullName: startTask
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'startTask?: StartTask'
      return:
        type: <xref uid="@azure/arm-batch.StartTask" />
        description: ''
  - name: taskSchedulingPolicy
    uid: '@azure/arm-batch.Pool.taskSchedulingPolicy'
    package: '@azure/arm-batch'
    summary: >-
      How tasks are distributed across compute nodes in a pool. If not
      specified, the default is

      spread.
    fullName: taskSchedulingPolicy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'taskSchedulingPolicy?: TaskSchedulingPolicy'
      return:
        type: <xref uid="@azure/arm-batch.TaskSchedulingPolicy" />
        description: ''
  - name: taskSlotsPerNode
    uid: '@azure/arm-batch.Pool.taskSlotsPerNode'
    package: '@azure/arm-batch'
    summary: >-
      The number of task slots that can be used to run concurrent tasks on a
      single compute node in

      the pool. The default value is 1. The maximum value is the smaller of 4
      times the number of

      cores of the vmSize of the pool or 256.
    fullName: taskSlotsPerNode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'taskSlotsPerNode?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: type
    uid: '@azure/arm-batch.Pool.type'
    package: '@azure/arm-batch'
    summary: >-
      The type of the resource.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: userAccounts
    uid: '@azure/arm-batch.Pool.userAccounts'
    package: '@azure/arm-batch'
    summary: The list of user accounts to be created on each node in the pool.
    fullName: userAccounts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userAccounts?: UserAccount[]'
      return:
        type: '<xref uid="@azure/arm-batch.UserAccount" />[]'
        description: ''
  - name: vmSize
    uid: '@azure/arm-batch.Pool.vmSize'
    package: '@azure/arm-batch'
    summary: >-
      The size of virtual machines in the pool. All VMs in a pool are the same
      size. For information

      about available sizes of virtual machines for Cloud Services pools (pools
      created with

      cloudServiceConfiguration), see Sizes for Cloud Services

      (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
      Batch

      supports all Cloud Services VM sizes except ExtraSmall. For information
      about available VM

      sizes for pools using images from the Virtual Machines Marketplace (pools
      created with

      virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)

      (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
      or Sizes

      for Virtual Machines (Windows)

      (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
      Batch

      supports all Azure VM sizes except STANDARD_A0 and those with premium
      storage (STANDARD_GS,

      STANDARD_DS, and STANDARD_DSV2 series).
    fullName: vmSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vmSize?: undefined | string'
      return:
        type: undefined | string
        description: ''
extends: <xref uid="@azure/arm-batch.ProxyResource" />
