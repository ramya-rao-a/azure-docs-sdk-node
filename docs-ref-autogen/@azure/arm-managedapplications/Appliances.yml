### YamlMime:TSType
name: Appliances
uid: '@azure/arm-managedapplications.Appliances'
package: '@azure/arm-managedapplications'
summary: Class representing a Appliances.
fullName: Appliances
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Appliances(ManagedApplicationClientContext)
    uid: '@azure/arm-managedapplications.Appliances.constructor'
    package: '@azure/arm-managedapplications'
    summary: Create a Appliances.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Appliances(client: ManagedApplicationClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-managedapplications.ManagedApplicationClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'beginCreateOrUpdate(string, string, Appliance, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.beginCreateOrUpdate'
    package: '@azure/arm-managedapplications'
    summary: Creates a new appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, applianceName:
        string, parameters: Appliance, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: parameters
          type: <xref uid="@azure/arm-managedapplications.Appliance" />
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginCreateOrUpdateById(string, Appliance, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.beginCreateOrUpdateById'
    package: '@azure/arm-managedapplications'
    summary: Creates a new appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateById(applianceId: string, parameters:
        Appliance, options?: msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: parameters
          type: <xref uid="@azure/arm-managedapplications.Appliance" />
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteById(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.beginDeleteById'
    package: '@azure/arm-managedapplications'
    summary: Deletes the appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteById(applianceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.beginDeleteMethod'
    package: '@azure/arm-managedapplications'
    summary: Deletes the appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, applianceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'createOrUpdate(string, string, Appliance, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.createOrUpdate'
    package: '@azure/arm-managedapplications'
    summary: Creates a new appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, applianceName:
        string, parameters: Appliance, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: parameters
          type: <xref uid="@azure/arm-managedapplications.Appliance" />
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AppliancesCreateOrUpdateResponse" />&gt;
        description: Promise<Models.AppliancesCreateOrUpdateResponse>
  - name: 'createOrUpdateById(string, Appliance, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.createOrUpdateById'
    package: '@azure/arm-managedapplications'
    summary: Creates a new appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateById(applianceId: string, parameters: Appliance,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: parameters
          type: <xref uid="@azure/arm-managedapplications.Appliance" />
          description: Parameters supplied to the create or update an appliance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AppliancesCreateOrUpdateByIdResponse"
          />&gt;
        description: Promise<Models.AppliancesCreateOrUpdateByIdResponse>
  - name: 'deleteById(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.deleteById'
    package: '@azure/arm-managedapplications'
    summary: Deletes the appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteById(applianceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.deleteMethod'
    package: '@azure/arm-managedapplications'
    summary: Deletes the appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, applianceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.get'
    package: '@azure/arm-managedapplications'
    summary: Gets the appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, applianceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AppliancesGetResponse" />&gt;
        description: Promise<Models.AppliancesGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Appliance>)'
    uid: '@azure/arm-managedapplications.Appliances.get_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, applianceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Appliance>)'
    uid: '@azure/arm-managedapplications.Appliances.get_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, applianceName: string, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
  - name: 'getById(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.getById'
    package: '@azure/arm-managedapplications'
    summary: Gets the appliance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(applianceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AppliancesGetByIdResponse" />&gt;
        description: Promise<Models.AppliancesGetByIdResponse>
  - name: 'getById(string, RequestOptionsBase, ServiceCallback<Appliance>)'
    uid: '@azure/arm-managedapplications.Appliances.getById_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(applianceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
  - name: 'getById(string, ServiceCallback<Appliance>)'
    uid: '@azure/arm-managedapplications.Appliances.getById_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(applianceId: string, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.listByResourceGroup'
    package: '@azure/arm-managedapplications'
    summary: Gets all the appliances within a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AppliancesListByResourceGroupResponse"
          />&gt;
        description: Promise<Models.AppliancesListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    uid: '@azure/arm-managedapplications.Appliances.listByResourceGroup_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ApplianceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<ApplianceListResult>)'
    uid: '@azure/arm-managedapplications.Appliances.listByResourceGroup_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.listByResourceGroupNext'
    package: '@azure/arm-managedapplications'
    summary: Gets all the appliances within a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AppliancesListByResourceGroupNextResponse" />&gt;
        description: Promise<Models.AppliancesListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    uid: '@azure/arm-managedapplications.Appliances.listByResourceGroupNext_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<ApplianceListResult>)'
    uid: '@azure/arm-managedapplications.Appliances.listByResourceGroupNext_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: listBySubscription(msRest.RequestOptionsBase)
    uid: '@azure/arm-managedapplications.Appliances.listBySubscription'
    package: '@azure/arm-managedapplications'
    summary: Gets all the appliances within a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AppliancesListBySubscriptionResponse"
          />&gt;
        description: Promise<Models.AppliancesListBySubscriptionResponse>
  - name: >-
      listBySubscription(RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    uid: '@azure/arm-managedapplications.Appliances.listBySubscription_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: listBySubscription(ServiceCallback<ApplianceListResult>)
    uid: '@azure/arm-managedapplications.Appliances.listBySubscription_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managedapplications.Appliances.listBySubscriptionNext'
    package: '@azure/arm-managedapplications'
    summary: Gets all the appliances within a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AppliancesListBySubscriptionNextResponse"
          />&gt;
        description: Promise<Models.AppliancesListBySubscriptionNextResponse>
  - name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<ApplianceListResult>)
    uid: '@azure/arm-managedapplications.Appliances.listBySubscriptionNext_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionNext(string, ServiceCallback<ApplianceListResult>)'
    uid: '@azure/arm-managedapplications.Appliances.listBySubscriptionNext_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<ApplianceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.ApplianceListResult" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, AppliancesUpdateOptionalParams,
      ServiceCallback<Appliance>)
    uid: '@azure/arm-managedapplications.Appliances.update_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, applianceName: string,
        options: AppliancesUpdateOptionalParams, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managedapplications.AppliancesUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
  - name: 'update(string, string, Models.AppliancesUpdateOptionalParams)'
    uid: '@azure/arm-managedapplications.Appliances.update'
    package: '@azure/arm-managedapplications'
    summary: >-
      Updates an existing appliance. The only value that can be updated via
      PATCH currently is the

      tags.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, applianceName: string,
        options?: Models.AppliancesUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: options
          type: <xref uid="Models.AppliancesUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AppliancesUpdateResponse" />&gt;
        description: Promise<Models.AppliancesUpdateResponse>
  - name: 'update(string, string, ServiceCallback<Appliance>)'
    uid: '@azure/arm-managedapplications.Appliances.update_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, applianceName: string,
        callback: ServiceCallback<Appliance>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: applianceName
          type: string
          description: The name of the appliance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
  - name: >-
      updateById(string, AppliancesUpdateByIdOptionalParams,
      ServiceCallback<Appliance>)
    uid: '@azure/arm-managedapplications.Appliances.updateById_2'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateById(applianceId: string, options:
        AppliancesUpdateByIdOptionalParams, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managedapplications.AppliancesUpdateByIdOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
  - name: 'updateById(string, Models.AppliancesUpdateByIdOptionalParams)'
    uid: '@azure/arm-managedapplications.Appliances.updateById'
    package: '@azure/arm-managedapplications'
    summary: >-
      Updates an existing appliance. The only value that can be updated via
      PATCH currently is the

      tags.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateById(applianceId: string, options?:
        Models.AppliancesUpdateByIdOptionalParams)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: options
          type: <xref uid="Models.AppliancesUpdateByIdOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AppliancesUpdateByIdResponse" />&gt;
        description: Promise<Models.AppliancesUpdateByIdResponse>
  - name: 'updateById(string, ServiceCallback<Appliance>)'
    uid: '@azure/arm-managedapplications.Appliances.updateById_1'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateById(applianceId: string, callback:
        ServiceCallback<Appliance>)
      parameters:
        - id: applianceId
          type: string
          description: >-
            The fully qualified ID of the appliance, including the appliance
            name and the

            appliance resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/Microsoft.Solutions/appliances/{appliance-name}
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managedapplications.Appliance" />&gt;
          description: |
            The callback
