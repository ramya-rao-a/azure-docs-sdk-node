### YamlMime:TSType
name: DpsCertificate
uid: '@azure/arm-deviceprovisioningservices.DpsCertificate'
package: '@azure/arm-deviceprovisioningservices'
summary: Class representing a DpsCertificate.
fullName: DpsCertificate
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: DpsCertificate(IotDpsClientContext)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.constructor'
    package: '@azure/arm-deviceprovisioningservices'
    summary: Create a DpsCertificate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DpsCertificate(client: IotDpsClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.IotDpsClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, CertificateBodyDescription,
      DpsCertificateCreateOrUpdateOptionalParams,
      ServiceCallback<CertificateResponse>)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.createOrUpdate_2'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string,
        provisioningServiceName: string, certificateName: string,
        certificateDescription: CertificateBodyDescription, options:
        DpsCertificateCreateOrUpdateOptionalParams, callback:
        ServiceCallback<CertificateResponse>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: provisioningServiceName
          type: string
          description: The name of the provisioning service.
        - id: certificateName
          type: string
          description: The name of the certificate create or update.
        - id: certificateDescription
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.CertificateBodyDescription"
            />
          description: The certificate body.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.DpsCertificateCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateResponse"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, CertificateBodyDescription,
      Models.DpsCertificateCreateOrUpdateOptionalParams)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.createOrUpdate'
    package: '@azure/arm-deviceprovisioningservices'
    summary: Add new certificate or update an existing certificate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string,
        provisioningServiceName: string, certificateName: string,
        certificateDescription: CertificateBodyDescription, options?:
        Models.DpsCertificateCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: provisioningServiceName
          type: string
          description: The name of the provisioning service.
        - id: certificateName
          type: string
          description: The name of the certificate create or update.
        - id: certificateDescription
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.CertificateBodyDescription"
            />
          description: The certificate body.
        - id: options
          type: <xref uid="Models.DpsCertificateCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DpsCertificateCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.DpsCertificateCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, CertificateBodyDescription,
      ServiceCallback<CertificateResponse>)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.createOrUpdate_1'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string,
        provisioningServiceName: string, certificateName: string,
        certificateDescription: CertificateBodyDescription, callback:
        ServiceCallback<CertificateResponse>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: provisioningServiceName
          type: string
          description: The name of the provisioning service.
        - id: certificateName
          type: string
          description: The name of the certificate create or update.
        - id: certificateDescription
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.CertificateBodyDescription"
            />
          description: The certificate body.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateResponse"
            />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string,
      DpsCertificateDeleteMethodOptionalParams, ServiceCallback<void>)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.deleteMethod_2'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, ifMatch: string,
        provisioningServiceName: string, certificateName: string, options:
        DpsCertificateDeleteMethodOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: ifMatch
          type: string
          description: ETag of the certificate
        - id: provisioningServiceName
          type: string
          description: The name of the provisioning service.
        - id: certificateName
          type: string
          description: >-
            This is a mandatory field, and is the logical name of the
            certificate

            that the provisioning service will access by.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.DpsCertificateDeleteMethodOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string,
      Models.DpsCertificateDeleteMethodOptionalParams)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.deleteMethod'
    package: '@azure/arm-deviceprovisioningservices'
    summary: >-
      Deletes the specified certificate assosciated with the Provisioning
      Service
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, ifMatch: string,
        provisioningServiceName: string, certificateName: string, options?:
        Models.DpsCertificateDeleteMethodOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: ifMatch
          type: string
          description: ETag of the certificate
        - id: provisioningServiceName
          type: string
          description: The name of the provisioning service.
        - id: certificateName
          type: string
          description: >-
            This is a mandatory field, and is the logical name of the
            certificate

            that the provisioning service will access by.
        - id: options
          type: <xref uid="Models.DpsCertificateDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.deleteMethod_1'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, ifMatch: string,
        provisioningServiceName: string, certificateName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: ifMatch
          type: string
          description: ETag of the certificate
        - id: provisioningServiceName
          type: string
          description: The name of the provisioning service.
        - id: certificateName
          type: string
          description: >-
            This is a mandatory field, and is the logical name of the
            certificate

            that the provisioning service will access by.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      generateVerificationCode(string, string, string, string,
      DpsCertificateGenerateVerificationCodeOptionalParams,
      ServiceCallback<VerificationCodeResponse>)
    uid: >-
      @azure/arm-deviceprovisioningservices.DpsCertificate.generateVerificationCode_2
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateVerificationCode(certificateName: string, ifMatch:
        string, resourceGroupName: string, provisioningServiceName: string,
        options: DpsCertificateGenerateVerificationCodeOptionalParams, callback:
        ServiceCallback<VerificationCodeResponse>)
      parameters:
        - id: certificateName
          type: string
          description: |-
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
        - id: ifMatch
          type: string
          description: >-
            ETag of the certificate. This is required to update an existing
            certificate, and

            ignored while creating a brand new certificate.
        - id: resourceGroupName
          type: string
          description: name of resource group.
        - id: provisioningServiceName
          type: string
          description: Name of provisioning service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.DpsCertificateGenerateVerificationCodeOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.VerificationCodeResponse"
            />&gt;
          description: |
            The callback
  - name: >-
      generateVerificationCode(string, string, string, string,
      Models.DpsCertificateGenerateVerificationCodeOptionalParams)
    uid: >-
      @azure/arm-deviceprovisioningservices.DpsCertificate.generateVerificationCode
    package: '@azure/arm-deviceprovisioningservices'
    summary: Generate verification code for Proof of Possession.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateVerificationCode(certificateName: string, ifMatch:
        string, resourceGroupName: string, provisioningServiceName: string,
        options?: Models.DpsCertificateGenerateVerificationCodeOptionalParams)
      parameters:
        - id: certificateName
          type: string
          description: |-
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
        - id: ifMatch
          type: string
          description: >-
            ETag of the certificate. This is required to update an existing
            certificate, and

            ignored while creating a brand new certificate.
        - id: resourceGroupName
          type: string
          description: name of resource group.
        - id: provisioningServiceName
          type: string
          description: Name of provisioning service.
        - id: options
          type: >-
            <xref
            uid="Models.DpsCertificateGenerateVerificationCodeOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DpsCertificateGenerateVerificationCodeResponse" />&gt;
        description: Promise<Models.DpsCertificateGenerateVerificationCodeResponse>
  - name: >-
      generateVerificationCode(string, string, string, string,
      ServiceCallback<VerificationCodeResponse>)
    uid: >-
      @azure/arm-deviceprovisioningservices.DpsCertificate.generateVerificationCode_1
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateVerificationCode(certificateName: string, ifMatch:
        string, resourceGroupName: string, provisioningServiceName: string,
        callback: ServiceCallback<VerificationCodeResponse>)
      parameters:
        - id: certificateName
          type: string
          description: |-
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
        - id: ifMatch
          type: string
          description: >-
            ETag of the certificate. This is required to update an existing
            certificate, and

            ignored while creating a brand new certificate.
        - id: resourceGroupName
          type: string
          description: name of resource group.
        - id: provisioningServiceName
          type: string
          description: Name of provisioning service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.VerificationCodeResponse"
            />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, DpsCertificateGetOptionalParams,
      ServiceCallback<CertificateResponse>)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.get_2'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(certificateName: string, resourceGroupName: string,
        provisioningServiceName: string, options:
        DpsCertificateGetOptionalParams, callback:
        ServiceCallback<CertificateResponse>)
      parameters:
        - id: certificateName
          type: string
          description: Name of the certificate to retrieve.
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: provisioningServiceName
          type: string
          description: |-
            Name of the provisioning service the certificate is associated
            with.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.DpsCertificateGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateResponse"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, Models.DpsCertificateGetOptionalParams)'
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.get'
    package: '@azure/arm-deviceprovisioningservices'
    summary: Get the certificate from the provisioning service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(certificateName: string, resourceGroupName: string,
        provisioningServiceName: string, options?:
        Models.DpsCertificateGetOptionalParams)
      parameters:
        - id: certificateName
          type: string
          description: Name of the certificate to retrieve.
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: provisioningServiceName
          type: string
          description: |-
            Name of the provisioning service the certificate is associated
            with.
        - id: options
          type: <xref uid="Models.DpsCertificateGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DpsCertificateGetResponse" />&gt;
        description: Promise<Models.DpsCertificateGetResponse>
  - name: 'get(string, string, string, ServiceCallback<CertificateResponse>)'
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.get_1'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(certificateName: string, resourceGroupName: string,
        provisioningServiceName: string, callback:
        ServiceCallback<CertificateResponse>)
      parameters:
        - id: certificateName
          type: string
          description: Name of the certificate to retrieve.
        - id: resourceGroupName
          type: string
          description: Resource group identifier.
        - id: provisioningServiceName
          type: string
          description: |-
            Name of the provisioning service the certificate is associated
            with.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateResponse"
            />&gt;
          description: |
            The callback
  - name: 'list(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.list'
    package: '@azure/arm-deviceprovisioningservices'
    summary: Get all the certificates tied to the provisioning service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, provisioningServiceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group.
        - id: provisioningServiceName
          type: string
          description: Name of provisioning service to retrieve certificates for.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DpsCertificateListResponse" />&gt;
        description: Promise<Models.DpsCertificateListResponse>
  - name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<CertificateListDescription>)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.list_2'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, provisioningServiceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<CertificateListDescription>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group.
        - id: provisioningServiceName
          type: string
          description: Name of provisioning service to retrieve certificates for.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateListDescription"
            />&gt;
          description: |
            The callback
  - name: 'list(string, string, ServiceCallback<CertificateListDescription>)'
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.list_1'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, provisioningServiceName:
        string, callback: ServiceCallback<CertificateListDescription>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of resource group.
        - id: provisioningServiceName
          type: string
          description: Name of provisioning service to retrieve certificates for.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateListDescription"
            />&gt;
          description: |
            The callback
  - name: >-
      verifyCertificate(string, string, VerificationCodeRequest, string, string,
      DpsCertificateVerifyCertificateOptionalParams,
      ServiceCallback<CertificateResponse>)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.verifyCertificate_2'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verifyCertificate(certificateName: string, ifMatch: string,
        request: VerificationCodeRequest, resourceGroupName: string,
        provisioningServiceName: string, options:
        DpsCertificateVerifyCertificateOptionalParams, callback:
        ServiceCallback<CertificateResponse>)
      parameters:
        - id: certificateName
          type: string
          description: |-
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
        - id: ifMatch
          type: string
          description: ETag of the certificate.
        - id: request
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.VerificationCodeRequest"
            />
          description: The name of the certificate
        - id: resourceGroupName
          type: string
          description: Resource group name.
        - id: provisioningServiceName
          type: string
          description: Provisioning service name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.DpsCertificateVerifyCertificateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateResponse"
            />&gt;
          description: |
            The callback
  - name: >-
      verifyCertificate(string, string, VerificationCodeRequest, string, string,
      Models.DpsCertificateVerifyCertificateOptionalParams)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.verifyCertificate'
    package: '@azure/arm-deviceprovisioningservices'
    summary: >-
      Verifies the certificate's private key possession by providing the leaf
      cert issued by the

      verifying pre uploaded certificate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verifyCertificate(certificateName: string, ifMatch: string,
        request: VerificationCodeRequest, resourceGroupName: string,
        provisioningServiceName: string, options?:
        Models.DpsCertificateVerifyCertificateOptionalParams)
      parameters:
        - id: certificateName
          type: string
          description: |-
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
        - id: ifMatch
          type: string
          description: ETag of the certificate.
        - id: request
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.VerificationCodeRequest"
            />
          description: The name of the certificate
        - id: resourceGroupName
          type: string
          description: Resource group name.
        - id: provisioningServiceName
          type: string
          description: Provisioning service name.
        - id: options
          type: <xref uid="Models.DpsCertificateVerifyCertificateOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DpsCertificateVerifyCertificateResponse"
          />&gt;
        description: Promise<Models.DpsCertificateVerifyCertificateResponse>
  - name: >-
      verifyCertificate(string, string, VerificationCodeRequest, string, string,
      ServiceCallback<CertificateResponse>)
    uid: '@azure/arm-deviceprovisioningservices.DpsCertificate.verifyCertificate_1'
    package: '@azure/arm-deviceprovisioningservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verifyCertificate(certificateName: string, ifMatch: string,
        request: VerificationCodeRequest, resourceGroupName: string,
        provisioningServiceName: string, callback:
        ServiceCallback<CertificateResponse>)
      parameters:
        - id: certificateName
          type: string
          description: |-
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
        - id: ifMatch
          type: string
          description: ETag of the certificate.
        - id: request
          type: >-
            <xref
            uid="@azure/arm-deviceprovisioningservices.VerificationCodeRequest"
            />
          description: The name of the certificate
        - id: resourceGroupName
          type: string
          description: Resource group name.
        - id: provisioningServiceName
          type: string
          description: Provisioning service name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-deviceprovisioningservices.CertificateResponse"
            />&gt;
          description: |
            The callback
