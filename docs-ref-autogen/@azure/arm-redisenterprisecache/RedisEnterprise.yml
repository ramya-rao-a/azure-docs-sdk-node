### YamlMime:TSType
name: RedisEnterprise
uid: '@azure/arm-redisenterprisecache.RedisEnterprise'
package: '@azure/arm-redisenterprisecache'
summary: Class representing a RedisEnterprise.
fullName: RedisEnterprise
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: RedisEnterprise(RedisEnterpriseManagementClientContext)
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.constructor'
    package: '@azure/arm-redisenterprisecache'
    summary: Create a RedisEnterprise.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new RedisEnterprise(client: RedisEnterpriseManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.RedisEnterpriseManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'beginCreate(string, string, Cluster, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.beginCreate'
    package: '@azure/arm-redisenterprisecache'
    summary: >-
      Creates or updates an existing (overwrite/recreate, with potential
      downtime) cache cluster
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, clusterName: string,
        parameters: Cluster, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.Cluster" />
          description: Parameters supplied to the Create RedisEnterprise operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.beginDeleteMethod'
    package: '@azure/arm-redisenterprisecache'
    summary: Deletes a RedisEnterprise cache cluster.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, clusterName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginUpdate(string, string, ClusterUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.beginUpdate'
    package: '@azure/arm-redisenterprisecache'
    summary: Updates an existing RedisEnterprise cluster
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, clusterName: string,
        parameters: ClusterUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.ClusterUpdate" />
          description: Parameters supplied to the Update RedisEnterprise operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'create(string, string, Cluster, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.create'
    package: '@azure/arm-redisenterprisecache'
    summary: >-
      Creates or updates an existing (overwrite/recreate, with potential
      downtime) cache cluster
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, clusterName: string,
        parameters: Cluster, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.Cluster" />
          description: Parameters supplied to the Create RedisEnterprise operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisEnterpriseCreateResponse" />&gt;
        description: Promise<Models.RedisEnterpriseCreateResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.deleteMethod'
    package: '@azure/arm-redisenterprisecache'
    summary: Deletes a RedisEnterprise cache cluster.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, clusterName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.get'
    package: '@azure/arm-redisenterprisecache'
    summary: Gets information about a RedisEnterprise cluster
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisEnterpriseGetResponse" />&gt;
        description: Promise<Models.RedisEnterpriseGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Cluster>)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.get_2'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Cluster>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.Cluster" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Cluster>)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.get_1'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, callback:
        ServiceCallback<Cluster>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.Cluster" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.list'
    package: '@azure/arm-redisenterprisecache'
    summary: Gets all RedisEnterprise clusters in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisEnterpriseListResponse" />&gt;
        description: Promise<Models.RedisEnterpriseListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<ClusterList>)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.list_2'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ClusterList>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<ClusterList>)
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.list_1'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ClusterList>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listByResourceGroup'
    package: '@azure/arm-redisenterprisecache'
    summary: Lists all RedisEnterprise clusters in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.RedisEnterpriseListByResourceGroupResponse" />&gt;
        description: Promise<Models.RedisEnterpriseListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ClusterList>)
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listByResourceGroup_2'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ClusterList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<ClusterList>)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listByResourceGroup_1'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ClusterList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listByResourceGroupNext'
    package: '@azure/arm-redisenterprisecache'
    summary: Lists all RedisEnterprise clusters in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.RedisEnterpriseListByResourceGroupNextResponse" />&gt;
        description: Promise<Models.RedisEnterpriseListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ClusterList>)
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listByResourceGroupNext_2'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ClusterList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<ClusterList>)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listByResourceGroupNext_1'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ClusterList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listNext'
    package: '@azure/arm-redisenterprisecache'
    summary: Gets all RedisEnterprise clusters in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisEnterpriseListNextResponse" />&gt;
        description: Promise<Models.RedisEnterpriseListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<ClusterList>)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listNext_2'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ClusterList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ClusterList>)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.listNext_1'
    package: '@azure/arm-redisenterprisecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ClusterList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-redisenterprisecache.ClusterList" />&gt;
          description: |
            The callback
  - name: 'update(string, string, ClusterUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-redisenterprisecache.RedisEnterprise.update'
    package: '@azure/arm-redisenterprisecache'
    summary: Updates an existing RedisEnterprise cluster
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, clusterName: string,
        parameters: ClusterUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the RedisEnterprise cluster.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.ClusterUpdate" />
          description: Parameters supplied to the Update RedisEnterprise operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RedisEnterpriseUpdateResponse" />&gt;
        description: Promise<Models.RedisEnterpriseUpdateResponse>
