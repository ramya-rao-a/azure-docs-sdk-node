### YamlMime:TSType
name: Partner
uid: '@azure/arm-managementpartner.Partner'
package: '@azure/arm-managementpartner'
summary: Class representing a Partner.
fullName: Partner
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Partner(ACEProvisioningManagementPartnerAPIContext)
    uid: '@azure/arm-managementpartner.Partner.constructor'
    package: '@azure/arm-managementpartner'
    summary: Create a Partner.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Partner(client: ACEProvisioningManagementPartnerAPIContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'create(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managementpartner.Partner.create'
    package: '@azure/arm-managementpartner'
    summary: Create a management partner for the objectId and tenantId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(partnerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PartnerCreateResponse" />&gt;
        description: Promise<Models.PartnerCreateResponse>
  - name: 'create(string, RequestOptionsBase, ServiceCallback<PartnerResponse>)'
    uid: '@azure/arm-managementpartner.Partner.create_2'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(partnerId: string, options: RequestOptionsBase,
        callback: ServiceCallback<PartnerResponse>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managementpartner.PartnerResponse" />&gt;
          description: |
            The callback
  - name: 'create(string, ServiceCallback<PartnerResponse>)'
    uid: '@azure/arm-managementpartner.Partner.create_1'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(partnerId: string, callback:
        ServiceCallback<PartnerResponse>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managementpartner.PartnerResponse" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managementpartner.Partner.deleteMethod'
    package: '@azure/arm-managementpartner'
    summary: Delete the management partner for the objectId and tenantId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(partnerId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-managementpartner.Partner.deleteMethod_2'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(partnerId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, ServiceCallback<void>)'
    uid: '@azure/arm-managementpartner.Partner.deleteMethod_1'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(partnerId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managementpartner.Partner.get'
    package: '@azure/arm-managementpartner'
    summary: 'Get the management partner using the partnerId, objectId and tenantId.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(partnerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PartnerGetResponse" />&gt;
        description: Promise<Models.PartnerGetResponse>
  - name: 'get(string, RequestOptionsBase, ServiceCallback<PartnerResponse>)'
    uid: '@azure/arm-managementpartner.Partner.get_2'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(partnerId: string, options: RequestOptionsBase, callback:
        ServiceCallback<PartnerResponse>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managementpartner.PartnerResponse" />&gt;
          description: |
            The callback
  - name: 'get(string, ServiceCallback<PartnerResponse>)'
    uid: '@azure/arm-managementpartner.Partner.get_1'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(partnerId: string, callback:
        ServiceCallback<PartnerResponse>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managementpartner.PartnerResponse" />&gt;
          description: |
            The callback
  - name: 'update(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-managementpartner.Partner.update'
    package: '@azure/arm-managementpartner'
    summary: Update the management partner for the objectId and tenantId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function update(partnerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PartnerUpdateResponse" />&gt;
        description: Promise<Models.PartnerUpdateResponse>
  - name: 'update(string, RequestOptionsBase, ServiceCallback<PartnerResponse>)'
    uid: '@azure/arm-managementpartner.Partner.update_2'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(partnerId: string, options: RequestOptionsBase,
        callback: ServiceCallback<PartnerResponse>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managementpartner.PartnerResponse" />&gt;
          description: |
            The callback
  - name: 'update(string, ServiceCallback<PartnerResponse>)'
    uid: '@azure/arm-managementpartner.Partner.update_1'
    package: '@azure/arm-managementpartner'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(partnerId: string, callback:
        ServiceCallback<PartnerResponse>)
      parameters:
        - id: partnerId
          type: string
          description: Id of the Partner
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-managementpartner.PartnerResponse" />&gt;
          description: |
            The callback
