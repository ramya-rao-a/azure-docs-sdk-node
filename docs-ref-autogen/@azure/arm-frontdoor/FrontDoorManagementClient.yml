### YamlMime:TSType
name: FrontDoorManagementClient
uid: '@azure/arm-frontdoor.FrontDoorManagementClient'
package: '@azure/arm-frontdoor'
summary: ''
fullName: FrontDoorManagementClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      FrontDoorManagementClient(ServiceClientCredentials, string,
      Models.FrontDoorManagementClientOptions)
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.constructor'
    package: '@azure/arm-frontdoor'
    summary: Initializes a new instance of the FrontDoorManagementClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new FrontDoorManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?:
        Models.FrontDoorManagementClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type: string
          description: >-
            The subscription credentials which uniquely identify the Microsoft
            Azure

            subscription. The subscription ID forms part of the URI for every
            service call.
        - id: options
          type: <xref uid="Models.FrontDoorManagementClientOptions" />
          description: ''
properties:
  - name: acceptLanguage
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.acceptLanguage'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        type: string
        description: ''
  - name: credentials
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.credentials'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type: ServiceClientCredentials
        description: ''
  - name: endpoints
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.endpoints'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: endpoints
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoints: Endpoints'
      return:
        type: <xref uid="@azure/arm-frontdoor.Endpoints" />
        description: ''
  - name: experiments
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.experiments'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: experiments
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'experiments: Experiments'
      return:
        type: <xref uid="@azure/arm-frontdoor.Experiments" />
        description: ''
  - name: frontDoors
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.frontDoors'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: frontDoors
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'frontDoors: FrontDoors'
      return:
        type: <xref uid="@azure/arm-frontdoor.FrontDoors" />
        description: ''
  - name: frontendEndpoints
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.frontendEndpoints'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: frontendEndpoints
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'frontendEndpoints: FrontendEndpoints'
      return:
        type: <xref uid="@azure/arm-frontdoor.FrontendEndpoints" />
        description: ''
  - name: longRunningOperationRetryTimeout
    uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.longRunningOperationRetryTimeout
    package: '@azure/arm-frontdoor'
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: managedRuleSets
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.managedRuleSets'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: managedRuleSets
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'managedRuleSets: ManagedRuleSets'
      return:
        type: <xref uid="@azure/arm-frontdoor.ManagedRuleSets" />
        description: ''
  - name: networkExperimentProfiles
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.networkExperimentProfiles'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: networkExperimentProfiles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'networkExperimentProfiles: NetworkExperimentProfiles'
      return:
        type: <xref uid="@azure/arm-frontdoor.NetworkExperimentProfiles" />
        description: ''
  - name: policies
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.policies'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: policies
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'policies: Policies'
      return:
        type: <xref uid="@azure/arm-frontdoor.Policies" />
        description: ''
  - name: preconfiguredEndpoints
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.preconfiguredEndpoints'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: preconfiguredEndpoints
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'preconfiguredEndpoints: PreconfiguredEndpoints'
      return:
        type: <xref uid="@azure/arm-frontdoor.PreconfiguredEndpoints" />
        description: ''
  - name: reports
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.reports'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: reports
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'reports: Reports'
      return:
        type: <xref uid="@azure/arm-frontdoor.Reports" />
        description: ''
  - name: rulesEngines
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.rulesEngines'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: rulesEngines
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rulesEngines: RulesEngines'
      return:
        type: <xref uid="@azure/arm-frontdoor.RulesEngines" />
        description: ''
  - name: subscriptionId
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.subscriptionId'
    package: '@azure/arm-frontdoor'
    summary: ''
    fullName: subscriptionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionId: string'
      return:
        type: string
        description: ''
methods:
  - name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.beginLongRunningRequest'
    package: '@azure/arm-frontdoor'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
  - name: >-
      checkFrontDoorNameAvailability(CheckNameAvailabilityInput,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability
    package: '@azure/arm-frontdoor'
    summary: Check the availability of a Front Door resource name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailability(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type: <xref uid="@azure/arm-frontdoor.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CheckFrontDoorNameAvailabilityResponse"
          />&gt;
        description: Promise<Models.CheckFrontDoorNameAvailabilityResponse>
  - name: >-
      checkFrontDoorNameAvailability(CheckNameAvailabilityInput,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityOutput>)
    uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability_2
    package: '@azure/arm-frontdoor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailability(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type: <xref uid="@azure/arm-frontdoor.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-frontdoor.CheckNameAvailabilityOutput" />&gt;
          description: |
            The callback
  - name: >-
      checkFrontDoorNameAvailability(CheckNameAvailabilityInput,
      ServiceCallback<CheckNameAvailabilityOutput>)
    uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailability_1
    package: '@azure/arm-frontdoor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailability(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type: <xref uid="@azure/arm-frontdoor.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-frontdoor.CheckNameAvailabilityOutput" />&gt;
          description: |
            The callback
  - name: >-
      checkFrontDoorNameAvailabilityWithSubscription(CheckNameAvailabilityInput,
      msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription
    package: '@azure/arm-frontdoor'
    summary: Check the availability of a Front Door subdomain.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailabilityWithSubscription(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type: <xref uid="@azure/arm-frontdoor.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CheckFrontDoorNameAvailabilityWithSubscriptionResponse"
          />&gt;
        description: Promise<Models.CheckFrontDoorNameAvailabilityWithSubscriptionResponse>
  - name: >-
      checkFrontDoorNameAvailabilityWithSubscription(CheckNameAvailabilityInput,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityOutput>)
    uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription_2
    package: '@azure/arm-frontdoor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailabilityWithSubscription(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type: <xref uid="@azure/arm-frontdoor.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-frontdoor.CheckNameAvailabilityOutput" />&gt;
          description: |
            The callback
  - name: >-
      checkFrontDoorNameAvailabilityWithSubscription(CheckNameAvailabilityInput,
      ServiceCallback<CheckNameAvailabilityOutput>)
    uid: >-
      @azure/arm-frontdoor.FrontDoorManagementClient.checkFrontDoorNameAvailabilityWithSubscription_1
    package: '@azure/arm-frontdoor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        checkFrontDoorNameAvailabilityWithSubscription(checkFrontDoorNameAvailabilityInput:
        CheckNameAvailabilityInput, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: checkFrontDoorNameAvailabilityInput
          type: <xref uid="@azure/arm-frontdoor.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-frontdoor.CheckNameAvailabilityOutput" />&gt;
          description: |
            The callback
  - name: restoreLROPoller(LROPollState)
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.restoreLROPoller'
    package: '@azure/arm-frontdoor'
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type: LROPollState
          description: ''
      return:
        type: LROPoller
        description: ''
  - name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendLongRunningRequest'
    package: '@azure/arm-frontdoor'
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
  - name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendLRORequest'
    package: '@azure/arm-frontdoor'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type: OperationSpec
          description: The specification for the operation.
        - id: options
          type: RequestOptionsBase
          description: Additional options to be sent while making the request.
      return:
        type: Promise&lt;LROPoller&gt;
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendOperationRequest'
    package: '@azure/arm-frontdoor'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/arm-frontdoor.FrontDoorManagementClient.sendRequest'
    package: '@azure/arm-frontdoor'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
extends: <xref uid="@azure/arm-frontdoor.FrontDoorManagementClientContext" />
