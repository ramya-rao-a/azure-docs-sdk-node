### YamlMime:TSType
name: Images
uid: '@azure/arm-compute.Images'
package: '@azure/arm-compute'
summary: Class representing a Images.
fullName: Images
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Images(ComputeManagementClientContext)
    uid: '@azure/arm-compute.Images.constructor'
    package: '@azure/arm-compute'
    summary: Create a Images.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Images(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-compute.ComputeManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'beginCreateOrUpdate(string, string, Image, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.beginCreateOrUpdate'
    package: '@azure/arm-compute'
    summary: Create or update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, imageName:
        string, parameters: Image, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.Image" />
          description: Parameters supplied to the Create Image operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.beginDeleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes an Image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, imageName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginUpdate(string, string, ImageUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.beginUpdate'
    package: '@azure/arm-compute'
    summary: Update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.ImageUpdate" />
          description: Parameters supplied to the Update Image operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'createOrUpdate(string, string, Image, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.createOrUpdate'
    package: '@azure/arm-compute'
    summary: Create or update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, imageName: string,
        parameters: Image, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.Image" />
          description: Parameters supplied to the Create Image operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ImagesCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ImagesCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.deleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes an Image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, imageName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, ImagesGetOptionalParams, ServiceCallback<Image>)'
    uid: '@azure/arm-compute.Images.get_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, options:
        ImagesGetOptionalParams, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.Image" />&gt;
          description: |
            The callback
  - name: 'get(string, string, Models.ImagesGetOptionalParams)'
    uid: '@azure/arm-compute.Images.get'
    package: '@azure/arm-compute'
    summary: Gets an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, options?:
        Models.ImagesGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: options
          type: <xref uid="Models.ImagesGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ImagesGetResponse" />&gt;
        description: Promise<Models.ImagesGetResponse>
  - name: 'get(string, string, ServiceCallback<Image>)'
    uid: '@azure/arm-compute.Images.get_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, callback:
        ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.Image" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-compute.Images.list'
    package: '@azure/arm-compute'
    summary: >-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the

      next page of Images. Do this till nextLink is null to fetch all the
      Images.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ImagesListResponse" />&gt;
        description: Promise<Models.ImagesListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<ImageListResult>)'
    uid: '@azure/arm-compute.Images.list_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<ImageListResult>)
    uid: '@azure/arm-compute.Images.list_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ImageListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.listByResourceGroup'
    package: '@azure/arm-compute'
    summary: Gets the list of images under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ImagesListByResourceGroupResponse" />&gt;
        description: Promise<Models.ImagesListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<ImageListResult>)
    uid: '@azure/arm-compute.Images.listByResourceGroup_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<ImageListResult>)'
    uid: '@azure/arm-compute.Images.listByResourceGroup_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.listByResourceGroupNext'
    package: '@azure/arm-compute'
    summary: Gets the list of images under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ImagesListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.ImagesListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ImageListResult>)
    uid: '@azure/arm-compute.Images.listByResourceGroupNext_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<ImageListResult>)'
    uid: '@azure/arm-compute.Images.listByResourceGroupNext_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.listNext'
    package: '@azure/arm-compute'
    summary: >-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the

      next page of Images. Do this till nextLink is null to fetch all the
      Images.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ImagesListNextResponse" />&gt;
        description: Promise<Models.ImagesListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<ImageListResult>)'
    uid: '@azure/arm-compute.Images.listNext_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ImageListResult>)'
    uid: '@azure/arm-compute.Images.listNext_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.ImageListResult"
            />&gt;
          description: |
            The callback
  - name: 'update(string, string, ImageUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Images.update'
    package: '@azure/arm-compute'
    summary: Update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.ImageUpdate" />
          description: Parameters supplied to the Update Image operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ImagesUpdateResponse" />&gt;
        description: Promise<Models.ImagesUpdateResponse>
