### YamlMime:TSType
name: VaultCertificate
uid: '@azure/arm-compute.VaultCertificate'
package: '@azure/arm-compute'
summary: >-
  Describes a single certificate reference in a Key Vault, and where the
  certificate should reside

  on the VM.
fullName: VaultCertificate
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: certificateStore
    uid: '@azure/arm-compute.VaultCertificate.certificateStore'
    package: '@azure/arm-compute'
    summary: >-
      For Windows VMs, specifies the certificate store on the Virtual Machine to
      which the

      certificate should be added. The specified certificate store is implicitly
      in the LocalMachine

      account. <br><br>For Linux VMs, the certificate file is placed under the
      /var/lib/waagent

      directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509
      certificate file

      and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files
      are .pem formatted.
    fullName: certificateStore
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'certificateStore?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: certificateUrl
    uid: '@azure/arm-compute.VaultCertificate.certificateUrl'
    package: '@azure/arm-compute'
    summary: >-
      This is the URL of a certificate that has been uploaded to Key Vault as a
      secret. For adding a

      secret to the Key Vault, see [Add a key or secret to the key

      vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).
      In this case,

      your certificate needs to be It is the Base64 encoding of the following
      JSON Object which is

      encoded in UTF-8: <br><br> {<br> 
      "data":"<Base64-encoded-certificate>",<br>

      "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
    fullName: certificateUrl
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'certificateUrl?: undefined | string'
      return:
        type: undefined | string
        description: ''
