### YamlMime:TSType
name: CloudServiceRoleInstances
uid: '@azure/arm-compute.CloudServiceRoleInstances'
package: '@azure/arm-compute'
summary: Class representing a CloudServiceRoleInstances.
fullName: CloudServiceRoleInstances
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: CloudServiceRoleInstances(ComputeManagementClientContext)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.constructor'
    package: '@azure/arm-compute'
    summary: Create a CloudServiceRoleInstances.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new CloudServiceRoleInstances(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-compute.ComputeManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.beginDeleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes a role instance from a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginRebuild(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.beginRebuild'
    package: '@azure/arm-compute'
    summary: >-
      The Rebuild Role Instance asynchronous operation reinstalls the operating
      system on instances of

      web roles or worker roles and initializes the storage resources that are
      used by them. If you do

      not want to initialize storage resources, you can use Reimage Role
      Instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRebuild(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginReimage(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.beginReimage'
    package: '@azure/arm-compute'
    summary: >-
      The Reimage Role Instance asynchronous operation reinstalls the operating
      system on instances of

      web roles or worker roles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginReimage(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginRestart(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.beginRestart'
    package: '@azure/arm-compute'
    summary: >-
      The Reboot Role Instance asynchronous operation requests a reboot of a
      role instance in the

      cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.deleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes a role instance from a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      get(string, string, string, CloudServiceRoleInstancesGetOptionalParams,
      ServiceCallback<RoleInstance>)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.get_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(roleInstanceName: string, resourceGroupName: string,
        cloudServiceName: string, options:
        CloudServiceRoleInstancesGetOptionalParams, callback:
        ServiceCallback<RoleInstance>)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServiceRoleInstancesGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.RoleInstance"
            />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string,
      Models.CloudServiceRoleInstancesGetOptionalParams)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.get'
    package: '@azure/arm-compute'
    summary: Gets a role instance from a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(roleInstanceName: string, resourceGroupName: string,
        cloudServiceName: string, options?:
        Models.CloudServiceRoleInstancesGetOptionalParams)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="Models.CloudServiceRoleInstancesGetOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CloudServiceRoleInstancesGetResponse"
          />&gt;
        description: Promise<Models.CloudServiceRoleInstancesGetResponse>
  - name: 'get(string, string, string, ServiceCallback<RoleInstance>)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.get_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(roleInstanceName: string, resourceGroupName: string,
        cloudServiceName: string, callback: ServiceCallback<RoleInstance>)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.RoleInstance"
            />&gt;
          description: |
            The callback
  - name: 'getInstanceView(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.getInstanceView'
    package: '@azure/arm-compute'
    summary: >-
      Retrieves information about the run-time state of a role instance in a
      cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceView(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CloudServiceRoleInstancesGetInstanceViewResponse" />&gt;
        description: Promise<Models.CloudServiceRoleInstancesGetInstanceViewResponse>
  - name: >-
      getInstanceView(string, string, string, RequestOptionsBase,
      ServiceCallback<RoleInstanceInstanceView>)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.getInstanceView_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceView(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, options: RequestOptionsBase, callback:
        ServiceCallback<RoleInstanceInstanceView>)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.RoleInstanceInstanceView" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceView(string, string, string,
      ServiceCallback<RoleInstanceInstanceView>)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.getInstanceView_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceView(roleInstanceName: string, resourceGroupName:
        string, cloudServiceName: string, callback:
        ServiceCallback<RoleInstanceInstanceView>)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.RoleInstanceInstanceView" />&gt;
          description: |
            The callback
  - name: 'getRemoteDesktopFile(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.getRemoteDesktopFile'
    package: '@azure/arm-compute'
    summary: Gets a remote desktop file for a role instance in a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRemoteDesktopFile(roleInstanceName: string,
        resourceGroupName: string, cloudServiceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CloudServiceRoleInstancesGetRemoteDesktopFileResponse"
          />&gt;
        description: Promise<Models.CloudServiceRoleInstancesGetRemoteDesktopFileResponse>
  - name: >-
      getRemoteDesktopFile(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.getRemoteDesktopFile_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRemoteDesktopFile(roleInstanceName: string,
        resourceGroupName: string, cloudServiceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getRemoteDesktopFile(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.getRemoteDesktopFile_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRemoteDesktopFile(roleInstanceName: string,
        resourceGroupName: string, cloudServiceName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      list(string, string, CloudServiceRoleInstancesListOptionalParams,
      ServiceCallback<RoleInstanceListResult>)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.list_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, cloudServiceName: string,
        options: CloudServiceRoleInstancesListOptionalParams, callback:
        ServiceCallback<RoleInstanceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServiceRoleInstancesListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.RoleInstanceListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, string, Models.CloudServiceRoleInstancesListOptionalParams)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.list'
    package: '@azure/arm-compute'
    summary: >-
      Gets the list of all role instances in a cloud service. Use nextLink
      property in the response to

      get the next page of role instances. Do this till nextLink is null to
      fetch all the role

      instances.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, cloudServiceName: string,
        options?: Models.CloudServiceRoleInstancesListOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="Models.CloudServiceRoleInstancesListOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CloudServiceRoleInstancesListResponse"
          />&gt;
        description: Promise<Models.CloudServiceRoleInstancesListResponse>
  - name: 'list(string, string, ServiceCallback<RoleInstanceListResult>)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.list_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, cloudServiceName: string,
        callback: ServiceCallback<RoleInstanceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.RoleInstanceListResult" />&gt;
          description: |
            The callback
  - name: >-
      listNext(string, CloudServiceRoleInstancesListNextOptionalParams,
      ServiceCallback<RoleInstanceListResult>)
    uid: '@azure/arm-compute.CloudServiceRoleInstances.listNext_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        CloudServiceRoleInstancesListNextOptionalParams, callback:
        ServiceCallback<RoleInstanceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServiceRoleInstancesListNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.RoleInstanceListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.CloudServiceRoleInstancesListNextOptionalParams)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.listNext'
    package: '@azure/arm-compute'
    summary: >-
      Gets the list of all role instances in a cloud service. Use nextLink
      property in the response to

      get the next page of role instances. Do this till nextLink is null to
      fetch all the role

      instances.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.CloudServiceRoleInstancesListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref uid="Models.CloudServiceRoleInstancesListNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.CloudServiceRoleInstancesListNextResponse" />&gt;
        description: Promise<Models.CloudServiceRoleInstancesListNextResponse>
  - name: 'listNext(string, ServiceCallback<RoleInstanceListResult>)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.listNext_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RoleInstanceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.RoleInstanceListResult" />&gt;
          description: |
            The callback
  - name: 'rebuild(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.rebuild'
    package: '@azure/arm-compute'
    summary: >-
      The Rebuild Role Instance asynchronous operation reinstalls the operating
      system on instances of

      web roles or worker roles and initializes the storage resources that are
      used by them. If you do

      not want to initialize storage resources, you can use Reimage Role
      Instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rebuild(roleInstanceName: string, resourceGroupName: string,
        cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'reimage(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.reimage'
    package: '@azure/arm-compute'
    summary: >-
      The Reimage Role Instance asynchronous operation reinstalls the operating
      system on instances of

      web roles or worker roles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reimage(roleInstanceName: string, resourceGroupName: string,
        cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'restart(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServiceRoleInstances.restart'
    package: '@azure/arm-compute'
    summary: >-
      The Reboot Role Instance asynchronous operation requests a reboot of a
      role instance in the

      cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restart(roleInstanceName: string, resourceGroupName: string,
        cloudServiceName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: roleInstanceName
          type: string
          description: Name of the role instance.
        - id: resourceGroupName
          type: string
          description: ''
        - id: cloudServiceName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
