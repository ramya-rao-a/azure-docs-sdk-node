### YamlMime:TSType
name: Disks
uid: '@azure/arm-compute.Disks'
package: '@azure/arm-compute'
summary: Class representing a Disks.
fullName: Disks
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Disks(ComputeManagementClientContext)
    uid: '@azure/arm-compute.Disks.constructor'
    package: '@azure/arm-compute'
    summary: Create a Disks.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Disks(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-compute.ComputeManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'beginCreateOrUpdate(string, string, Disk, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.beginCreateOrUpdate'
    package: '@azure/arm-compute'
    summary: Creates or updates a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, diskName:
        string, disk: Disk, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: disk
          type: <xref uid="@azure/arm-compute.Disk" />
          description: Disk object supplied in the body of the Put disk operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.beginDeleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, diskName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginGrantAccess(string, string, GrantAccessData,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-compute.Disks.beginGrantAccess'
    package: '@azure/arm-compute'
    summary: Grants access to a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginGrantAccess(resourceGroupName: string, diskName: string,
        grantAccessData: GrantAccessData, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: grantAccessData
          type: <xref uid="@azure/arm-compute.GrantAccessData" />
          description: >-
            Access data object supplied in the body of the get disk access
            operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginRevokeAccess(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.beginRevokeAccess'
    package: '@azure/arm-compute'
    summary: Revokes access to a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRevokeAccess(resourceGroupName: string, diskName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginUpdate(string, string, DiskUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.beginUpdate'
    package: '@azure/arm-compute'
    summary: Updates (patches) a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, diskName: string, disk:
        DiskUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: disk
          type: <xref uid="@azure/arm-compute.DiskUpdate" />
          description: Disk object supplied in the body of the Patch disk operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'createOrUpdate(string, string, Disk, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.createOrUpdate'
    package: '@azure/arm-compute'
    summary: Creates or updates a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, diskName: string,
        disk: Disk, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: disk
          type: <xref uid="@azure/arm-compute.Disk" />
          description: Disk object supplied in the body of the Put disk operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DisksCreateOrUpdateResponse" />&gt;
        description: Promise<Models.DisksCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.deleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, diskName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.get'
    package: '@azure/arm-compute'
    summary: Gets information about a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, diskName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DisksGetResponse" />&gt;
        description: Promise<Models.DisksGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Disk>)'
    uid: '@azure/arm-compute.Disks.get_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, diskName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Disk>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.Disk" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Disk>)'
    uid: '@azure/arm-compute.Disks.get_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, diskName: string, callback:
        ServiceCallback<Disk>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.Disk" />&gt;
          description: |
            The callback
  - name: 'grantAccess(string, string, GrantAccessData, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.grantAccess'
    package: '@azure/arm-compute'
    summary: Grants access to a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function grantAccess(resourceGroupName: string, diskName: string,
        grantAccessData: GrantAccessData, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: grantAccessData
          type: <xref uid="@azure/arm-compute.GrantAccessData" />
          description: >-
            Access data object supplied in the body of the get disk access
            operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DisksGrantAccessResponse" />&gt;
        description: Promise<Models.DisksGrantAccessResponse>
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-compute.Disks.list'
    package: '@azure/arm-compute'
    summary: Lists all the disks under a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DisksListResponse" />&gt;
        description: Promise<Models.DisksListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<DiskList>)'
    uid: '@azure/arm-compute.Disks.list_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<DiskList>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<DiskList>)
    uid: '@azure/arm-compute.Disks.list_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<DiskList>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.listByResourceGroup'
    package: '@azure/arm-compute'
    summary: Lists all the disks under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DisksListByResourceGroupResponse" />&gt;
        description: Promise<Models.DisksListByResourceGroupResponse>
  - name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<DiskList>)'
    uid: '@azure/arm-compute.Disks.listByResourceGroup_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<DiskList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<DiskList>)'
    uid: '@azure/arm-compute.Disks.listByResourceGroup_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<DiskList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.listByResourceGroupNext'
    package: '@azure/arm-compute'
    summary: Lists all the disks under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.DisksListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.DisksListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<DiskList>)
    uid: '@azure/arm-compute.Disks.listByResourceGroupNext_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DiskList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<DiskList>)'
    uid: '@azure/arm-compute.Disks.listByResourceGroupNext_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<DiskList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.listNext'
    package: '@azure/arm-compute'
    summary: Lists all the disks under a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DisksListNextResponse" />&gt;
        description: Promise<Models.DisksListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<DiskList>)'
    uid: '@azure/arm-compute.Disks.listNext_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<DiskList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<DiskList>)'
    uid: '@azure/arm-compute.Disks.listNext_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<DiskList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-compute.DiskList" />&gt;
          description: |
            The callback
  - name: 'revokeAccess(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.revokeAccess'
    package: '@azure/arm-compute'
    summary: Revokes access to a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function revokeAccess(resourceGroupName: string, diskName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'update(string, string, DiskUpdate, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.Disks.update'
    package: '@azure/arm-compute'
    summary: Updates (patches) a disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, diskName: string, disk:
        DiskUpdate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: diskName
          type: string
          description: >-
            The name of the managed disk that is being created. The name can't
            be changed

            after the disk is created. Supported characters for the name are
            a-z, A-Z, 0-9 and _. The

            maximum name length is 80 characters.
        - id: disk
          type: <xref uid="@azure/arm-compute.DiskUpdate" />
          description: Disk object supplied in the body of the Patch disk operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DisksUpdateResponse" />&gt;
        description: Promise<Models.DisksUpdateResponse>
