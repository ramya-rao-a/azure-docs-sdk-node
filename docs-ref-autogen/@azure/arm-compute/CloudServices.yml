### YamlMime:TSType
name: CloudServices
uid: '@azure/arm-compute.CloudServices'
package: '@azure/arm-compute'
summary: Class representing a CloudServices.
fullName: CloudServices
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: CloudServices(ComputeManagementClientContext)
    uid: '@azure/arm-compute.CloudServices.constructor'
    package: '@azure/arm-compute'
    summary: Create a CloudServices.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new CloudServices(client: ComputeManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-compute.ComputeManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string,
      Models.CloudServicesBeginCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginCreateOrUpdate'
    package: '@azure/arm-compute'
    summary: >-
      Create or update a cloud service. Please note some properties can be set
      only during cloud

      service creation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        cloudServiceName: string, options?:
        Models.CloudServicesBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesBeginCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginDeleteInstances(string, string,
      Models.CloudServicesBeginDeleteInstancesOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginDeleteInstances'
    package: '@azure/arm-compute'
    summary: Deletes role instances in a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string,
        cloudServiceName: string, options?:
        Models.CloudServicesBeginDeleteInstancesOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref uid="Models.CloudServicesBeginDeleteInstancesOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.beginDeleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, cloudServiceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginPowerOff(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.beginPowerOff'
    package: '@azure/arm-compute'
    summary: >-
      Power off the cloud service. Note that resources are still attached and
      you are getting charged

      for the resources.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, cloudServiceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRebuild(string, string,
      Models.CloudServicesBeginRebuildOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginRebuild'
    package: '@azure/arm-compute'
    summary: >-
      Rebuild Role Instances reinstalls the operating system on instances of web
      roles or worker roles

      and initializes the storage resources that are used by them. If you do not
      want to initialize

      storage resources, you can use Reimage Role Instances.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRebuild(resourceGroupName: string, cloudServiceName:
        string, options?: Models.CloudServicesBeginRebuildOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesBeginRebuildOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginReimage(string, string,
      Models.CloudServicesBeginReimageOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginReimage'
    package: '@azure/arm-compute'
    summary: >-
      Reimage asynchronous operation reinstalls the operating system on
      instances of web roles or

      worker roles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, cloudServiceName:
        string, options?: Models.CloudServicesBeginReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesBeginReimageOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestart(string, string,
      Models.CloudServicesBeginRestartOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginRestart'
    package: '@azure/arm-compute'
    summary: Restarts one or more role instances in a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, cloudServiceName:
        string, options?: Models.CloudServicesBeginRestartOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesBeginRestartOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginStart(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.beginStart'
    package: '@azure/arm-compute'
    summary: Starts the cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, cloudServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginUpdate(string, string, Models.CloudServicesBeginUpdateOptionalParams)'
    uid: '@azure/arm-compute.CloudServices.beginUpdate'
    package: '@azure/arm-compute'
    summary: Update a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, cloudServiceName:
        string, options?: Models.CloudServicesBeginUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesBeginUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrUpdate(string, string,
      Models.CloudServicesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.CloudServices.createOrUpdate'
    package: '@azure/arm-compute'
    summary: >-
      Create or update a cloud service. Please note some properties can be set
      only during cloud

      service creation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, cloudServiceName:
        string, options?: Models.CloudServicesCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CloudServicesCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.CloudServicesCreateOrUpdateResponse>
  - name: >-
      deleteInstances(string, string,
      Models.CloudServicesDeleteInstancesOptionalParams)
    uid: '@azure/arm-compute.CloudServices.deleteInstances'
    package: '@azure/arm-compute'
    summary: Deletes role instances in a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, cloudServiceName:
        string, options?: Models.CloudServicesDeleteInstancesOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesDeleteInstancesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.deleteMethod'
    package: '@azure/arm-compute'
    summary: Deletes a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, cloudServiceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.get'
    package: '@azure/arm-compute'
    summary: Display information about a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cloudServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CloudServicesGetResponse" />&gt;
        description: Promise<Models.CloudServicesGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<CloudService>)'
    uid: '@azure/arm-compute.CloudServices.get_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cloudServiceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<CloudService>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.CloudService"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<CloudService>)'
    uid: '@azure/arm-compute.CloudServices.get_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cloudServiceName: string,
        callback: ServiceCallback<CloudService>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-compute.CloudService"
            />&gt;
          description: |
            The callback
  - name: 'getInstanceView(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.getInstanceView'
    package: '@azure/arm-compute'
    summary: Gets the status of a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, cloudServiceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CloudServicesGetInstanceViewResponse"
          />&gt;
        description: Promise<Models.CloudServicesGetInstanceViewResponse>
  - name: >-
      getInstanceView(string, string, RequestOptionsBase,
      ServiceCallback<CloudServiceInstanceView>)
    uid: '@azure/arm-compute.CloudServices.getInstanceView_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, cloudServiceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<CloudServiceInstanceView>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceInstanceView" />&gt;
          description: |
            The callback
  - name: 'getInstanceView(string, string, ServiceCallback<CloudServiceInstanceView>)'
    uid: '@azure/arm-compute.CloudServices.getInstanceView_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, cloudServiceName:
        string, callback: ServiceCallback<CloudServiceInstanceView>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceInstanceView" />&gt;
          description: |
            The callback
  - name: 'list(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.list'
    package: '@azure/arm-compute'
    summary: >-
      Gets a list of all cloud services under a resource group. Use nextLink
      property in the response

      to get the next page of Cloud Services. Do this till nextLink is null to
      fetch all the Cloud

      Services.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CloudServicesListResponse" />&gt;
        description: Promise<Models.CloudServicesListResponse>
  - name: 'list(string, RequestOptionsBase, ServiceCallback<CloudServiceListResult>)'
    uid: '@azure/arm-compute.CloudServices.list_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<CloudServiceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: 'list(string, ServiceCallback<CloudServiceListResult>)'
    uid: '@azure/arm-compute.CloudServices.list_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<CloudServiceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: listAll(msRest.RequestOptionsBase)
    uid: '@azure/arm-compute.CloudServices.listAll'
    package: '@azure/arm-compute'
    summary: >-
      Gets a list of all cloud services in the subscription, regardless of the
      associated resource

      group. Use nextLink property in the response to get the next page of Cloud
      Services. Do this

      till nextLink is null to fetch all the Cloud Services.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listAll(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CloudServicesListAllResponse" />&gt;
        description: Promise<Models.CloudServicesListAllResponse>
  - name: 'listAll(RequestOptionsBase, ServiceCallback<CloudServiceListResult>)'
    uid: '@azure/arm-compute.CloudServices.listAll_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options: RequestOptionsBase, callback:
        ServiceCallback<CloudServiceListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: listAll(ServiceCallback<CloudServiceListResult>)
    uid: '@azure/arm-compute.CloudServices.listAll_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listAll(callback: ServiceCallback<CloudServiceListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: 'listAllNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.listAllNext'
    package: '@azure/arm-compute'
    summary: >-
      Gets a list of all cloud services in the subscription, regardless of the
      associated resource

      group. Use nextLink property in the response to get the next page of Cloud
      Services. Do this

      till nextLink is null to fetch all the Cloud Services.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CloudServicesListAllNextResponse" />&gt;
        description: Promise<Models.CloudServicesListAllNextResponse>
  - name: >-
      listAllNext(string, RequestOptionsBase,
      ServiceCallback<CloudServiceListResult>)
    uid: '@azure/arm-compute.CloudServices.listAllNext_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<CloudServiceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: 'listAllNext(string, ServiceCallback<CloudServiceListResult>)'
    uid: '@azure/arm-compute.CloudServices.listAllNext_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<CloudServiceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.listNext'
    package: '@azure/arm-compute'
    summary: >-
      Gets a list of all cloud services under a resource group. Use nextLink
      property in the response

      to get the next page of Cloud Services. Do this till nextLink is null to
      fetch all the Cloud

      Services.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CloudServicesListNextResponse" />&gt;
        description: Promise<Models.CloudServicesListNextResponse>
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<CloudServiceListResult>)
    uid: '@azure/arm-compute.CloudServices.listNext_2'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<CloudServiceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<CloudServiceListResult>)'
    uid: '@azure/arm-compute.CloudServices.listNext_1'
    package: '@azure/arm-compute'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CloudServiceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-compute.CloudServiceListResult" />&gt;
          description: |
            The callback
  - name: 'powerOff(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.powerOff'
    package: '@azure/arm-compute'
    summary: >-
      Power off the cloud service. Note that resources are still attached and
      you are getting charged

      for the resources.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, cloudServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'rebuild(string, string, Models.CloudServicesRebuildOptionalParams)'
    uid: '@azure/arm-compute.CloudServices.rebuild'
    package: '@azure/arm-compute'
    summary: >-
      Rebuild Role Instances reinstalls the operating system on instances of web
      roles or worker roles

      and initializes the storage resources that are used by them. If you do not
      want to initialize

      storage resources, you can use Reimage Role Instances.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rebuild(resourceGroupName: string, cloudServiceName: string,
        options?: Models.CloudServicesRebuildOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesRebuildOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'reimage(string, string, Models.CloudServicesReimageOptionalParams)'
    uid: '@azure/arm-compute.CloudServices.reimage'
    package: '@azure/arm-compute'
    summary: >-
      Reimage asynchronous operation reinstalls the operating system on
      instances of web roles or

      worker roles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reimage(resourceGroupName: string, cloudServiceName: string,
        options?: Models.CloudServicesReimageOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesReimageOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'restart(string, string, Models.CloudServicesRestartOptionalParams)'
    uid: '@azure/arm-compute.CloudServices.restart'
    package: '@azure/arm-compute'
    summary: Restarts one or more role instances in a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restart(resourceGroupName: string, cloudServiceName: string,
        options?: Models.CloudServicesRestartOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesRestartOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'start(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-compute.CloudServices.start'
    package: '@azure/arm-compute'
    summary: Starts the cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function start(resourceGroupName: string, cloudServiceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'update(string, string, Models.CloudServicesUpdateOptionalParams)'
    uid: '@azure/arm-compute.CloudServices.update'
    package: '@azure/arm-compute'
    summary: Update a cloud service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, cloudServiceName: string,
        options?: Models.CloudServicesUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="Models.CloudServicesUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CloudServicesUpdateResponse" />&gt;
        description: Promise<Models.CloudServicesUpdateResponse>
