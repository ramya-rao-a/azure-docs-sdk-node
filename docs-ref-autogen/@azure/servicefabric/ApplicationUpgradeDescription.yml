### YamlMime:TSType
name: ApplicationUpgradeDescription
uid: '@azure/servicefabric.ApplicationUpgradeDescription'
package: '@azure/servicefabric'
summary: >-
  Describes the parameters for an application upgrade. Note that upgrade
  description replaces the

  existing application description. This means that if the parameters are not
  specified, the

  existing parameters on the applications will be overwritten with the empty
  parameters list. This

  would result in the application using the default value of the parameters from
  the application

  manifest. If you do not want to change any existing parameter values, please
  get the application

  parameters first using the GetApplicationInfo query and then supply those
  values as Parameters

  in this ApplicationUpgradeDescription.
fullName: ApplicationUpgradeDescription
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: applicationHealthPolicy
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.applicationHealthPolicy'
    package: '@azure/servicefabric'
    summary: >-
      Defines a health policy used to evaluate the health of an application or
      one of its children

      entities.
    fullName: applicationHealthPolicy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'applicationHealthPolicy?: ApplicationHealthPolicy'
      return:
        type: <xref uid="@azure/servicefabric.ApplicationHealthPolicy" />
        description: ''
  - name: forceRestart
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.forceRestart'
    package: '@azure/servicefabric'
    summary: >-
      If true, then processes are forcefully restarted during upgrade even when
      the code version has

      not changed (the upgrade only changes configuration or data).
    fullName: forceRestart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forceRestart?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: instanceCloseDelayDurationInSeconds
    uid: >-
      @azure/servicefabric.ApplicationUpgradeDescription.instanceCloseDelayDurationInSeconds
    package: '@azure/servicefabric'
    summary: >-
      Duration in seconds, to wait before a stateless instance is closed, to
      allow the active

      requests to drain gracefully. This would be effective when the instance is
      closing during the

      application/cluster

      upgrade, only for those instances which have a non-zero delay duration
      configured in the

      service description. See InstanceCloseDelayDurationSeconds property in
      $ref:

      "#/definitions/StatelessServiceDescription.yaml" for details.

      Note, the default value of InstanceCloseDelayDurationInSeconds is
      4294967295, which indicates

      that the behavior will entirely depend on the delay configured in the
      stateless service

      description.
    fullName: instanceCloseDelayDurationInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'instanceCloseDelayDurationInSeconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: monitoringPolicy
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.monitoringPolicy'
    package: '@azure/servicefabric'
    summary: Describes the parameters for monitoring an upgrade in Monitored mode.
    fullName: monitoringPolicy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'monitoringPolicy?: MonitoringPolicyDescription'
      return:
        type: <xref uid="@azure/servicefabric.MonitoringPolicyDescription" />
        description: ''
  - name: name
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.name'
    package: '@azure/servicefabric'
    summary: 'The name of the target application, including the ''fabric:'' URI scheme.'
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        type: string
        description: ''
  - name: parameters
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.parameters'
    package: '@azure/servicefabric'
    summary: >-
      List of application parameters with overridden values from their default
      values specified in

      the application manifest.
    fullName: parameters
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'parameters?: ApplicationParameter[]'
      return:
        type: '<xref uid="@azure/servicefabric.ApplicationParameter" />[]'
        description: ''
  - name: rollingUpgradeMode
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.rollingUpgradeMode'
    package: '@azure/servicefabric'
    summary: >-
      The mode used to monitor health during a rolling upgrade. The values are
      UnmonitoredAuto,

      UnmonitoredManual, and Monitored. Possible values include: 'Invalid',
      'UnmonitoredAuto',

      'UnmonitoredManual', 'Monitored'. Default value: 'UnmonitoredAuto'.
    fullName: rollingUpgradeMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rollingUpgradeMode?: UpgradeMode'
      return:
        type: <xref uid="@azure/servicefabric.UpgradeMode" />
        description: ''
  - name: sortOrder
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.sortOrder'
    package: '@azure/servicefabric'
    summary: >-
      Defines the order in which an upgrade proceeds through the cluster.
      Possible values include:

      'Invalid', 'Default', 'Numeric', 'Lexicographical', 'ReverseNumeric',

      'ReverseLexicographical'. Default value: 'Default'.
    fullName: sortOrder
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sortOrder?: UpgradeSortOrder'
      return:
        type: <xref uid="@azure/servicefabric.UpgradeSortOrder" />
        description: ''
  - name: targetApplicationTypeVersion
    uid: >-
      @azure/servicefabric.ApplicationUpgradeDescription.targetApplicationTypeVersion
    package: '@azure/servicefabric'
    summary: >-
      The target application type version (found in the application manifest)
      for the application

      upgrade.
    fullName: targetApplicationTypeVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'targetApplicationTypeVersion: string'
      return:
        type: string
        description: ''
  - name: upgradeKind
    uid: '@azure/servicefabric.ApplicationUpgradeDescription.upgradeKind'
    package: '@azure/servicefabric'
    summary: >-
      The kind of upgrade out of the following possible values. Possible values
      include: 'Invalid',

      'Rolling'. Default value: 'Rolling'.
    fullName: upgradeKind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'upgradeKind: UpgradeKind'
      return:
        type: <xref uid="@azure/servicefabric.UpgradeKind" />
        description: ''
  - name: upgradeReplicaSetCheckTimeoutInSeconds
    uid: >-
      @azure/servicefabric.ApplicationUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
    package: '@azure/servicefabric'
    summary: >-
      The maximum amount of time to block processing of an upgrade domain and
      prevent loss of

      availability when there are unexpected issues. When this timeout expires,
      processing of the

      upgrade domain will proceed regardless of availability loss issues. The
      timeout is reset at

      the start of each upgrade domain. Valid values are between 0 and
      42949672925 inclusive.

      (unsigned 32-bit integer).
    fullName: upgradeReplicaSetCheckTimeoutInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'upgradeReplicaSetCheckTimeoutInSeconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
