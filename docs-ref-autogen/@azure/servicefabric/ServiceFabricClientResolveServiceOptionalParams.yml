### YamlMime:TSType
name: ServiceFabricClientResolveServiceOptionalParams
uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
package: '@azure/servicefabric'
summary: Optional Parameters.
fullName: ServiceFabricClientResolveServiceOptionalParams
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: abortSignal
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.abortSignal
    package: '@azure/servicefabric'
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type: AbortSignalLike
        description: ''
  - name: customHeaders
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.customHeaders
    package: '@azure/servicefabric'
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type: 'undefined | [key: string]: string'
        description: ''
  - name: onDownloadProgress
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.onDownloadProgress
    package: '@azure/servicefabric'
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: onUploadProgress
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.onUploadProgress
    package: '@azure/servicefabric'
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: partitionKeyType
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.partitionKeyType
    package: '@azure/servicefabric'
    summary: >-
      Key type for the partition. This parameter is required if the partition
      scheme for the service

      is Int64Range or Named. The possible values are following.

      - None (1) - Indicates that the PartitionKeyValue parameter is not
      specified. This is valid

      for the partitions with partitioning scheme as Singleton. This is the
      default value. The value

      is 1.

      - Int64Range (2) - Indicates that the PartitionKeyValue parameter is an
      int64 partition key.

      This is valid for the partitions with partitioning scheme as Int64Range.
      The value is 2.

      - Named (3) - Indicates that the PartitionKeyValue parameter is a name of
      the partition. This

      is valid for the partitions with partitioning scheme as Named. The value
      is 3.
    fullName: partitionKeyType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'partitionKeyType?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: partitionKeyValue
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.partitionKeyValue
    package: '@azure/servicefabric'
    summary: >-
      Partition key. This is required if the partition scheme for the service is
      Int64Range or

      Named.

      This is not the partition ID, but rather, either the integer key value, or
      the name of the

      partition ID.

      For example, if your service is using ranged partitions from 0 to 10, then
      they

      PartitionKeyValue would be an

      integer in that range. Query service description to see the range or name.
    fullName: partitionKeyValue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'partitionKeyValue?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: previousRspVersion
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.previousRspVersion
    package: '@azure/servicefabric'
    summary: >-
      The value in the Version field of the response that was received
      previously. This is required

      if the user knows that the result that was gotten previously is stale.
    fullName: previousRspVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'previousRspVersion?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: timeout
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.timeout
    package: '@azure/servicefabric'
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: timeoutParameter
    uid: >-
      @azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams.timeoutParameter
    package: '@azure/servicefabric'
    summary: >-
      The server timeout for performing the operation in seconds. This timeout
      specifies the time

      duration that the client is willing to wait for the requested operation to
      complete. The

      default value for this parameter is 60 seconds. Default value: 60.
    fullName: timeoutParameter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type: undefined | number
        description: ''
extends: RequestOptionsBase
