### YamlMime:TSType
name: RepairTask
uid: '@azure/servicefabric.RepairTask'
package: '@azure/servicefabric'
summary: >
  Represents a repair task, which includes information about what kind of repair
  was requested,

  what its progress is, and what its final result was.

  This type supports the Service Fabric platform; it is not meant to be used
  directly from your

  code.
fullName: RepairTask
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: action
    uid: '@azure/servicefabric.RepairTask.action'
    package: '@azure/servicefabric'
    summary: >-
      The requested repair action. Must be specified when the repair task is
      created, and is

      immutable once set.
    fullName: action
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'action: string'
      return:
        type: string
        description: ''
  - name: description
    uid: '@azure/servicefabric.RepairTask.description'
    package: '@azure/servicefabric'
    summary: >-
      A description of the purpose of the repair task, or other informational
      details.

      May be set when the repair task is created, and is immutable once set.
    fullName: description
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'description?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: executor
    uid: '@azure/servicefabric.RepairTask.executor'
    package: '@azure/servicefabric'
    summary: >-
      The name of the repair executor. Must be specified in Claimed and later
      states, and is

      immutable once set.
    fullName: executor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'executor?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: executorData
    uid: '@azure/servicefabric.RepairTask.executorData'
    package: '@azure/servicefabric'
    summary: >-
      A data string that the repair executor can use to store its internal
      state.
    fullName: executorData
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'executorData?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: flags
    uid: '@azure/servicefabric.RepairTask.flags'
    package: '@azure/servicefabric'
    summary: >-
      A bitwise-OR of the following values, which gives additional details about
      the status of the

      repair task.

      - 1 - Cancellation of the repair has been requested

      - 2 - Abort of the repair has been requested

      - 4 - Approval of the repair was forced via client request
    fullName: flags
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'flags?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: history
    uid: '@azure/servicefabric.RepairTask.history'
    package: '@azure/servicefabric'
    summary: >-
      An object that contains timestamps of the repair task's state transitions.

      These timestamps are updated by the system, and cannot be directly
      modified.
    fullName: history
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'history?: RepairTaskHistory'
      return:
        type: <xref uid="@azure/servicefabric.RepairTaskHistory" />
        description: ''
  - name: impact
    uid: '@azure/servicefabric.RepairTask.impact'
    package: '@azure/servicefabric'
    summary: >-
      The impact object determines what actions the system will take to prepare
      for the impact of

      the repair, prior to approving execution of the repair.

      Impact must be specified by the repair executor when transitioning to the
      Preparing state, and

      is immutable once set.
    fullName: impact
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'impact?: RepairImpactDescriptionBaseUnion'
      return:
        type: <xref uid="@azure/servicefabric.RepairImpactDescriptionBaseUnion" />
        description: ''
  - name: performPreparingHealthCheck
    uid: '@azure/servicefabric.RepairTask.performPreparingHealthCheck'
    package: '@azure/servicefabric'
    summary: >-
      A value to determine if health checks will be performed when the repair
      task enters the

      Preparing state.
    fullName: performPreparingHealthCheck
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'performPreparingHealthCheck?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: performRestoringHealthCheck
    uid: '@azure/servicefabric.RepairTask.performRestoringHealthCheck'
    package: '@azure/servicefabric'
    summary: >-
      A value to determine if health checks will be performed when the repair
      task enters the

      Restoring state.
    fullName: performRestoringHealthCheck
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'performRestoringHealthCheck?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: preparingHealthCheckState
    uid: '@azure/servicefabric.RepairTask.preparingHealthCheckState'
    package: '@azure/servicefabric'
    summary: >-
      The workflow state of the health check when the repair task is in the
      Preparing state.

      Possible values include: 'NotStarted', 'InProgress', 'Succeeded',
      'Skipped', 'TimedOut'
    fullName: preparingHealthCheckState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'preparingHealthCheckState?: RepairTaskHealthCheckState'
      return:
        type: <xref uid="@azure/servicefabric.RepairTaskHealthCheckState" />
        description: ''
  - name: restoringHealthCheckState
    uid: '@azure/servicefabric.RepairTask.restoringHealthCheckState'
    package: '@azure/servicefabric'
    summary: >-
      The workflow state of the health check when the repair task is in the
      Restoring state.

      Possible values include: 'NotStarted', 'InProgress', 'Succeeded',
      'Skipped', 'TimedOut'
    fullName: restoringHealthCheckState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'restoringHealthCheckState?: RepairTaskHealthCheckState'
      return:
        type: <xref uid="@azure/servicefabric.RepairTaskHealthCheckState" />
        description: ''
  - name: resultCode
    uid: '@azure/servicefabric.RepairTask.resultCode'
    package: '@azure/servicefabric'
    summary: >-
      A numeric value providing additional details about the result of the
      repair task execution.

      May be specified in the Restoring and later states, and is immutable once
      set.
    fullName: resultCode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resultCode?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: resultDetails
    uid: '@azure/servicefabric.RepairTask.resultDetails'
    package: '@azure/servicefabric'
    summary: >-
      A string providing additional details about the result of the repair task
      execution.

      May be specified in the Restoring and later states, and is immutable once
      set.
    fullName: resultDetails
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resultDetails?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: resultStatus
    uid: '@azure/servicefabric.RepairTask.resultStatus'
    package: '@azure/servicefabric'
    summary: >-
      A value describing the overall result of the repair task execution. Must
      be specified in the

      Restoring and later states, and is immutable once set. Possible values
      include: 'Invalid',

      'Succeeded', 'Cancelled', 'Interrupted', 'Failed', 'Pending'
    fullName: resultStatus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resultStatus?: ResultStatus'
      return:
        type: <xref uid="@azure/servicefabric.ResultStatus" />
        description: ''
  - name: state
    uid: '@azure/servicefabric.RepairTask.state'
    package: '@azure/servicefabric'
    summary: >-
      The workflow state of the repair task. Valid initial states are Created,
      Claimed, and

      Preparing. Possible values include: 'Invalid', 'Created', 'Claimed',
      'Preparing', 'Approved',

      'Executing', 'Restoring', 'Completed'
    fullName: state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'state: State'
      return:
        type: <xref uid="@azure/servicefabric.State" />
        description: ''
  - name: target
    uid: '@azure/servicefabric.RepairTask.target'
    package: '@azure/servicefabric'
    summary: >-
      The target object determines what actions the system will take to prepare
      for the impact of

      the repair, prior to approving execution of the repair.

      May be set when the repair task is created, and is immutable once set.
    fullName: target
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'target?: RepairTargetDescriptionBaseUnion'
      return:
        type: <xref uid="@azure/servicefabric.RepairTargetDescriptionBaseUnion" />
        description: ''
  - name: taskId
    uid: '@azure/servicefabric.RepairTask.taskId'
    package: '@azure/servicefabric'
    summary: The ID of the repair task.
    fullName: taskId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'taskId: string'
      return:
        type: string
        description: ''
  - name: version
    uid: '@azure/servicefabric.RepairTask.version'
    package: '@azure/servicefabric'
    summary: >-
      The version of the repair task.

      When creating a new repair task, the version must be set to zero.  When
      updating a repair

      task,

      the version is used for optimistic concurrency checks.  If the version is

      set to zero, the update will not check for write conflicts.  If the
      version is set to a

      non-zero value, then the

      update will only succeed if the actual current version of the repair task
      matches this value.
    fullName: version
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'version?: undefined | string'
      return:
        type: undefined | string
        description: ''
