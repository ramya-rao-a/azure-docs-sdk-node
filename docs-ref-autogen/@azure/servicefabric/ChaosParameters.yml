### YamlMime:TSType
name: ChaosParameters
uid: '@azure/servicefabric.ChaosParameters'
package: '@azure/servicefabric'
summary: Defines all the parameters to configure a Chaos run.
fullName: ChaosParameters
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: chaosTargetFilter
    uid: '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
    package: '@azure/servicefabric'
    summary: >-
      List of cluster entities to target for Chaos faults.

      This filter can be used to target Chaos faults only to certain node types
      or only to certain

      application instances. If ChaosTargetFilter is not used, Chaos faults all
      cluster entities.

      If ChaosTargetFilter is used, Chaos faults only the entities that meet the
      ChaosTargetFilter

      specification.
    fullName: chaosTargetFilter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'chaosTargetFilter?: ChaosTargetFilter'
      return:
        type: <xref uid="@azure/servicefabric.ChaosTargetFilter" />
        description: ''
  - name: clusterHealthPolicy
    uid: '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
    package: '@azure/servicefabric'
    summary: >-
      Passed-in cluster health policy is used to validate health of the cluster
      in between Chaos

      iterations. If the cluster health is in error or if an unexpected
      exception happens during

      fault execution--to provide the cluster with some time to
      recuperate--Chaos will wait for 30

      minutes before the next health-check.
    fullName: clusterHealthPolicy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clusterHealthPolicy?: ClusterHealthPolicy'
      return:
        type: <xref uid="@azure/servicefabric.ClusterHealthPolicy" />
        description: ''
  - name: context
    uid: '@azure/servicefabric.ChaosParameters.context'
    package: '@azure/servicefabric'
    summary: >-
      Describes a map, which is a collection of (string, string) type key-value
      pairs. The map can

      be used to record information about

      the Chaos run. There cannot be more than 100 such pairs and each string
      (key or value) can be

      at most 4095 characters long.

      This map is set by the starter of the Chaos run to optionally store the
      context about the

      specific run.
    fullName: context
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context?: ChaosContext'
      return:
        type: <xref uid="@azure/servicefabric.ChaosContext" />
        description: ''
  - name: enableMoveReplicaFaults
    uid: '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
    package: '@azure/servicefabric'
    summary: >-
      Enables or disables the move primary and move secondary faults. Default
      value: true.
    fullName: enableMoveReplicaFaults
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableMoveReplicaFaults?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: maxClusterStabilizationTimeoutInSeconds
    uid: >-
      @azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds
    package: '@azure/servicefabric'
    summary: >-
      The maximum amount of time to wait for all cluster entities to become
      stable and healthy.

      Chaos executes in iterations and at the start of each iteration it
      validates the health of

      cluster entities.

      During validation if a cluster entity is not stable and healthy within

      MaxClusterStabilizationTimeoutInSeconds, Chaos generates a validation
      failed event. Default

      value: 60.
    fullName: maxClusterStabilizationTimeoutInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxClusterStabilizationTimeoutInSeconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: maxConcurrentFaults
    uid: '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
    package: '@azure/servicefabric'
    summary: >-
      MaxConcurrentFaults is the maximum number of concurrent faults induced per
      iteration.

      Chaos executes in iterations and two consecutive iterations are separated
      by a validation

      phase.

      The higher the concurrency, the more aggressive the injection of faults,
      leading to inducing

      more complex series of states to uncover bugs.

      The recommendation is to start with a value of 2 or 3 and to exercise
      caution while moving up.

      Default value: 1.
    fullName: maxConcurrentFaults
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxConcurrentFaults?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: timeToRunInSeconds
    uid: '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
    package: '@azure/servicefabric'
    summary: >-
      Total time (in seconds) for which Chaos will run before automatically
      stopping. The maximum

      allowed value is 4,294,967,295 (System.UInt32.MaxValue). Default value:
      '4294967295'.
    fullName: timeToRunInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeToRunInSeconds?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: waitTimeBetweenFaultsInSeconds
    uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
    package: '@azure/servicefabric'
    summary: >-
      Wait time (in seconds) between consecutive faults within a single
      iteration.

      The larger the value, the lower the overlapping between faults and the
      simpler the sequence of

      state transitions that the cluster goes through.

      The recommendation is to start with a value between 1 and 5 and exercise
      caution while moving

      up. Default value: 20.
    fullName: waitTimeBetweenFaultsInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'waitTimeBetweenFaultsInSeconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: waitTimeBetweenIterationsInSeconds
    uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    package: '@azure/servicefabric'
    summary: >-
      Time-separation (in seconds) between two consecutive iterations of Chaos.

      The larger the value, the lower the fault injection rate. Default value:
      30.
    fullName: waitTimeBetweenIterationsInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'waitTimeBetweenIterationsInSeconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
