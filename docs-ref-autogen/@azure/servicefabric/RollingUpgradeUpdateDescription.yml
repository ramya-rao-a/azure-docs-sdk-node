### YamlMime:TSType
name: RollingUpgradeUpdateDescription
uid: '@azure/servicefabric.RollingUpgradeUpdateDescription'
package: '@azure/servicefabric'
summary: >-
  Describes the parameters for updating a rolling upgrade of application or
  cluster.
fullName: RollingUpgradeUpdateDescription
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: failureAction
    uid: '@azure/servicefabric.RollingUpgradeUpdateDescription.failureAction'
    package: '@azure/servicefabric'
    summary: >-
      The compensating action to perform when a Monitored upgrade encounters
      monitoring policy or

      health policy violations.

      Invalid indicates the failure action is invalid. Rollback specifies that
      the upgrade will

      start rolling back automatically.

      Manual indicates that the upgrade will switch to UnmonitoredManual upgrade
      mode. Possible

      values include: 'Invalid', 'Rollback', 'Manual'
    fullName: failureAction
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'failureAction?: FailureAction'
      return:
        type: <xref uid="@azure/servicefabric.FailureAction" />
        description: ''
  - name: forceRestart
    uid: '@azure/servicefabric.RollingUpgradeUpdateDescription.forceRestart'
    package: '@azure/servicefabric'
    summary: >-
      If true, then processes are forcefully restarted during upgrade even when
      the code version has

      not changed (the upgrade only changes configuration or data).
    fullName: forceRestart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forceRestart?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: healthCheckRetryTimeoutInMilliseconds
    uid: >-
      @azure/servicefabric.RollingUpgradeUpdateDescription.healthCheckRetryTimeoutInMilliseconds
    package: '@azure/servicefabric'
    summary: >-
      The amount of time to retry health evaluation when the application or
      cluster is unhealthy

      before FailureAction is executed. It is first interpreted as a string
      representing an ISO 8601

      duration. If that fails, then it is interpreted as a number representing
      the total number of

      milliseconds.
    fullName: healthCheckRetryTimeoutInMilliseconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'healthCheckRetryTimeoutInMilliseconds?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: healthCheckStableDurationInMilliseconds
    uid: >-
      @azure/servicefabric.RollingUpgradeUpdateDescription.healthCheckStableDurationInMilliseconds
    package: '@azure/servicefabric'
    summary: >-
      The amount of time that the application or cluster must remain healthy
      before the upgrade

      proceeds to the next upgrade domain. It is first interpreted as a string
      representing an ISO

      8601 duration. If that fails, then it is interpreted as a number
      representing the total number

      of milliseconds.
    fullName: healthCheckStableDurationInMilliseconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'healthCheckStableDurationInMilliseconds?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: healthCheckWaitDurationInMilliseconds
    uid: >-
      @azure/servicefabric.RollingUpgradeUpdateDescription.healthCheckWaitDurationInMilliseconds
    package: '@azure/servicefabric'
    summary: >-
      The amount of time to wait after completing an upgrade domain before
      applying health policies.

      It is first interpreted as a string representing an ISO 8601 duration. If
      that fails, then it

      is interpreted as a number representing the total number of milliseconds.
    fullName: healthCheckWaitDurationInMilliseconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'healthCheckWaitDurationInMilliseconds?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: instanceCloseDelayDurationInSeconds
    uid: >-
      @azure/servicefabric.RollingUpgradeUpdateDescription.instanceCloseDelayDurationInSeconds
    package: '@azure/servicefabric'
    summary: >-
      Duration in seconds, to wait before a stateless instance is closed, to
      allow the active

      requests to drain gracefully. This would be effective when the instance is
      closing during the

      application/cluster

      upgrade, only for those instances which have a non-zero delay duration
      configured in the

      service description. See InstanceCloseDelayDurationSeconds property in
      $ref:

      "#/definitions/StatelessServiceDescription.yaml" for details.

      Note, the default value of InstanceCloseDelayDurationInSeconds is
      4294967295, which indicates

      that the behavior will entirely depend on the delay configured in the
      stateless service

      description.
    fullName: instanceCloseDelayDurationInSeconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'instanceCloseDelayDurationInSeconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: replicaSetCheckTimeoutInMilliseconds
    uid: >-
      @azure/servicefabric.RollingUpgradeUpdateDescription.replicaSetCheckTimeoutInMilliseconds
    package: '@azure/servicefabric'
    summary: >-
      The maximum amount of time to block processing of an upgrade domain and
      prevent loss of

      availability when there are unexpected issues. When this timeout expires,
      processing of the

      upgrade domain will proceed regardless of availability loss issues. The
      timeout is reset at

      the start of each upgrade domain. Valid values are between 0 and
      42949672925 inclusive.

      (unsigned 32-bit integer).
    fullName: replicaSetCheckTimeoutInMilliseconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'replicaSetCheckTimeoutInMilliseconds?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: rollingUpgradeMode
    uid: '@azure/servicefabric.RollingUpgradeUpdateDescription.rollingUpgradeMode'
    package: '@azure/servicefabric'
    summary: >-
      The mode used to monitor health during a rolling upgrade. The values are
      UnmonitoredAuto,

      UnmonitoredManual, and Monitored. Possible values include: 'Invalid',
      'UnmonitoredAuto',

      'UnmonitoredManual', 'Monitored'. Default value: 'UnmonitoredAuto'.
    fullName: rollingUpgradeMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rollingUpgradeMode: UpgradeMode'
      return:
        type: <xref uid="@azure/servicefabric.UpgradeMode" />
        description: ''
  - name: upgradeDomainTimeoutInMilliseconds
    uid: >-
      @azure/servicefabric.RollingUpgradeUpdateDescription.upgradeDomainTimeoutInMilliseconds
    package: '@azure/servicefabric'
    summary: >-
      The amount of time each upgrade domain has to complete before
      FailureAction is executed. It is

      first interpreted as a string representing an ISO 8601 duration. If that
      fails, then it is

      interpreted as a number representing the total number of milliseconds.
    fullName: upgradeDomainTimeoutInMilliseconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'upgradeDomainTimeoutInMilliseconds?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: upgradeTimeoutInMilliseconds
    uid: >-
      @azure/servicefabric.RollingUpgradeUpdateDescription.upgradeTimeoutInMilliseconds
    package: '@azure/servicefabric'
    summary: >-
      The amount of time the overall upgrade has to complete before
      FailureAction is executed. It is

      first interpreted as a string representing an ISO 8601 duration. If that
      fails, then it is

      interpreted as a number representing the total number of milliseconds.
    fullName: upgradeTimeoutInMilliseconds
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'upgradeTimeoutInMilliseconds?: undefined | string'
      return:
        type: undefined | string
        description: ''
