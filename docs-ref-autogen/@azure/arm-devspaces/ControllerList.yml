### YamlMime:TSType
name: ControllerList
uid: '@azure/arm-devspaces.ControllerList'
package: '@azure/arm-devspaces'
summary: ''
fullName: ControllerList
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: Array
    uid: '@azure/arm-devspaces.ControllerList.Array'
    package: '@azure/arm-devspaces'
    summary: ''
    fullName: Array
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type: ArrayConstructor
        description: ''
  - name: length
    uid: '@azure/arm-devspaces.ControllerList.length'
    package: '@azure/arm-devspaces'
    summary: >-
      Gets or sets the length of the array. This is a number one higher than the
      highest element defined in an array.
    fullName: length
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'length: number'
      return:
        type: number
        description: ''
  - name: nextLink
    uid: '@azure/arm-devspaces.ControllerList.nextLink'
    package: '@azure/arm-devspaces'
    summary: ''
    fullName: nextLink
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type: undefined | string
        description: ''
methods:
  - name: 'concat(ConcatArray<Controller>[])'
    uid: '@azure/arm-devspaces.ControllerList.concat'
    package: '@azure/arm-devspaces'
    summary: Combines two or more arrays.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function concat(items: ConcatArray<Controller>[])'
      parameters:
        - id: items
          type: 'ConcatArray&lt;<xref uid="@azure/arm-devspaces.Controller" />&gt;[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
        description: ''
  - name: 'concat(T | ConcatArray<T>[])'
    uid: '@azure/arm-devspaces.ControllerList.concat_1'
    package: '@azure/arm-devspaces'
    summary: Combines two or more arrays.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type: 'T | ConcatArray&lt;T&gt;[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
        description: ''
  - name: 'copyWithin(number, number, undefined | number)'
    uid: '@azure/arm-devspaces.ControllerList.copyWithin'
    package: '@azure/arm-devspaces'
    summary: >-
      Returns the this object after copying a section of the array identified by
      start and end

      to the same array starting at position target
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function copyWithin(target: number, start: number, end?: undefined |
        number)
      parameters:
        - id: target
          type: number
          description: >-
            If target is negative, it is treated as length+target where length
            is the

            length of the array.
        - id: start
          type: number
          description: >-
            If start is negative, it is treated as length+start. If end is
            negative, it

            is treated as length+end.
        - id: end
          type: undefined | number
          description: >
            If not specified, length of the this object is used as its default
            value.
      return:
        type: this
        description: ''
  - name: entries()
    uid: '@azure/arm-devspaces.ControllerList.entries'
    package: '@azure/arm-devspaces'
    summary: 'Returns an iterable of key, value pairs for every entry in the array'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function entries()
      return:
        type: IterableIterator&lt;Object&gt;
        description: ''
  - name: >-
      every((value: Controller, index: number, array: Controller[]) => unknown,
      any)
    uid: '@azure/arm-devspaces.ControllerList.every'
    package: '@azure/arm-devspaces'
    summary: Determines whether all the members of an array satisfy the specified test.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function every(callbackfn: (value: Controller, index: number, array:
        Controller[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type: >-
            (value: Controller, index: number, array: Controller[]) =&gt;
            unknown
          description: >-
            A function that accepts up to three arguments. The every method
            calls the callbackfn function for each element in array1 until the
            callbackfn returns false, or until the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: boolean
        description: ''
  - name: 'fill(Controller, undefined | number, undefined | number)'
    uid: '@azure/arm-devspaces.ControllerList.fill'
    package: '@azure/arm-devspaces'
    summary: >-
      Returns the this object after filling the section identified by start and
      end with value
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fill(value: Controller, start?: undefined | number, end?:
        undefined | number)
      parameters:
        - id: value
          type: <xref uid="@azure/arm-devspaces.Controller" />
          description: value to fill array section with
        - id: start
          type: undefined | number
          description: >-
            index to start filling the array at. If start is negative, it is
            treated as

            length+start where length is the length of the array.
        - id: end
          type: undefined | number
          description: >
            index to stop filling the array at. If end is negative, it is
            treated as

            length+end.
      return:
        type: this
        description: ''
  - name: >-
      filter((value: Controller, index: number, array: Controller[]) => unknown,
      any)
    uid: '@azure/arm-devspaces.ControllerList.filter_1'
    package: '@azure/arm-devspaces'
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function filter(callbackfn: (value: Controller, index: number, array:
        Controller[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type: >-
            (value: Controller, index: number, array: Controller[]) =&gt;
            unknown
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
        description: ''
  - name: >-
      filter<S>((value: Controller, index: number, array: Controller[]) =>
      boolean, any)
    uid: '@azure/arm-devspaces.ControllerList.filter'
    package: '@azure/arm-devspaces'
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function filter<S>(callbackfn: (value: Controller, index: number, array:
        Controller[]) => boolean, thisArg?: any)
      parameters:
        - id: callbackfn
          type: >-
            (value: Controller, index: number, array: Controller[]) =&gt;
            boolean
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: 'S[]'
        description: ''
  - name: >-
      find((value: Controller, index: number, obj: Controller[]) => unknown,
      any)
    uid: '@azure/arm-devspaces.ControllerList.find_1'
    package: '@azure/arm-devspaces'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function find(predicate: (value: Controller, index: number, obj:
        Controller[]) => unknown, thisArg?: any)
      parameters:
        - id: predicate
          type: '(value: Controller, index: number, obj: Controller[]) =&gt; unknown'
          description: ''
        - id: thisArg
          type: any
          description: ''
      return:
        type: <xref uid="@azure/arm-devspaces.Controller" /> | undefined
        description: ''
  - name: >-
      find<S>((this: void, value: Controller, index: number, obj: Controller[])
      => boolean, any)
    uid: '@azure/arm-devspaces.ControllerList.find'
    package: '@azure/arm-devspaces'
    summary: >-
      Returns the value of the first element in the array where predicate is
      true, and undefined

      otherwise.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function find<S>(predicate: (this: void, value: Controller, index:
        number, obj: Controller[]) => boolean, thisArg?: any)
      parameters:
        - id: predicate
          type: >-
            (this: void, value: Controller, index: number, obj: Controller[])
            =&gt; boolean
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found, find

            immediately returns that element value. Otherwise, find returns
            undefined.
        - id: thisArg
          type: any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
      return:
        type: S | undefined
        description: ''
  - name: >-
      findIndex((value: Controller, index: number, obj: Controller[]) =>
      unknown, any)
    uid: '@azure/arm-devspaces.ControllerList.findIndex'
    package: '@azure/arm-devspaces'
    summary: >-
      Returns the index of the first element in the array where predicate is
      true, and -1

      otherwise.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function findIndex(predicate: (value: Controller, index: number, obj:
        Controller[]) => unknown, thisArg?: any)
      parameters:
        - id: predicate
          type: '(value: Controller, index: number, obj: Controller[]) =&gt; unknown'
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found,

            findIndex immediately returns that element index. Otherwise,
            findIndex returns -1.
        - id: thisArg
          type: any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
      return:
        type: number
        description: ''
  - name: >-
      forEach((value: Controller, index: number, array: Controller[]) => void,
      any)
    uid: '@azure/arm-devspaces.ControllerList.forEach'
    package: '@azure/arm-devspaces'
    summary: Performs the specified action for each element in an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forEach(callbackfn: (value: Controller, index: number, array:
        Controller[]) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: Controller, index: number, array: Controller[]) =&gt; void'
          description: >-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
  - name: 'includes(Controller, undefined | number)'
    uid: '@azure/arm-devspaces.ControllerList.includes'
    package: '@azure/arm-devspaces'
    summary: >-
      Determines whether an array includes a certain element, returning true or
      false as appropriate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function includes(searchElement: Controller, fromIndex?: undefined |
        number)
      parameters:
        - id: searchElement
          type: <xref uid="@azure/arm-devspaces.Controller" />
          description: The element to search for.
        - id: fromIndex
          type: undefined | number
          description: >
            The position in this array at which to begin searching for
            searchElement.
      return:
        type: boolean
        description: ''
  - name: 'indexOf(Controller, undefined | number)'
    uid: '@azure/arm-devspaces.ControllerList.indexOf'
    package: '@azure/arm-devspaces'
    summary: Returns the index of the first occurrence of a value in an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function indexOf(searchElement: Controller, fromIndex?: undefined |
        number)
      parameters:
        - id: searchElement
          type: <xref uid="@azure/arm-devspaces.Controller" />
          description: The value to locate in the array.
        - id: fromIndex
          type: undefined | number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at index 0.
      return:
        type: number
        description: ''
  - name: join(undefined | string)
    uid: '@azure/arm-devspaces.ControllerList.join'
    package: '@azure/arm-devspaces'
    summary: >-
      Adds all the elements of an array separated by the specified separator
      string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type: undefined | string
          description: >
            A string used to separate one element of an array from the next in
            the resulting String. If omitted, the array elements are separated
            with a comma.
      return:
        type: string
        description: ''
  - name: keys()
    uid: '@azure/arm-devspaces.ControllerList.keys'
    package: '@azure/arm-devspaces'
    summary: Returns an iterable of keys in the array
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function keys()
      return:
        type: IterableIterator&lt;number&gt;
        description: ''
  - name: 'lastIndexOf(Controller, undefined | number)'
    uid: '@azure/arm-devspaces.ControllerList.lastIndexOf'
    package: '@azure/arm-devspaces'
    summary: Returns the index of the last occurrence of a specified value in an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function lastIndexOf(searchElement: Controller, fromIndex?: undefined |
        number)
      parameters:
        - id: searchElement
          type: <xref uid="@azure/arm-devspaces.Controller" />
          description: The value to locate in the array.
        - id: fromIndex
          type: undefined | number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at the last index in the array.
      return:
        type: number
        description: ''
  - name: 'map<U>((value: Controller, index: number, array: Controller[]) => U, any)'
    uid: '@azure/arm-devspaces.ControllerList.map'
    package: '@azure/arm-devspaces'
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that contains the results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function map<U>(callbackfn: (value: Controller, index: number, array:
        Controller[]) => U, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: Controller, index: number, array: Controller[]) =&gt; U'
          description: >-
            A function that accepts up to three arguments. The map method calls
            the callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: 'U[]'
        description: ''
  - name: pop()
    uid: '@azure/arm-devspaces.ControllerList.pop'
    package: '@azure/arm-devspaces'
    summary: Removes the last element from an array and returns it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function pop()
      return:
        type: <xref uid="@azure/arm-devspaces.Controller" /> | undefined
        description: ''
  - name: 'push(Controller[])'
    uid: '@azure/arm-devspaces.ControllerList.push'
    package: '@azure/arm-devspaces'
    summary: 'Appends new elements to an array, and returns the new length of the array.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function push(items: Controller[])'
      parameters:
        - id: items
          type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
          description: |
            New elements of the Array.
      return:
        type: number
        description: ''
  - name: >-
      reduce((previousValue: Controller, currentValue: Controller, currentIndex:
      number, array: Controller[]) => Controller)
    uid: '@azure/arm-devspaces.ControllerList.reduce'
    package: '@azure/arm-devspaces'
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: Controller, currentValue:
        Controller, currentIndex: number, array: Controller[]) => Controller)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: Controller, currentValue: Controller, currentIndex:
            number, array: Controller[]) =&gt; Controller
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type: <xref uid="@azure/arm-devspaces.Controller" />
        description: ''
  - name: >-
      reduce((previousValue: Controller, currentValue: Controller, currentIndex:
      number, array: Controller[]) => Controller, Controller)
    uid: '@azure/arm-devspaces.ControllerList.reduce_1'
    package: '@azure/arm-devspaces'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: Controller, currentValue:
        Controller, currentIndex: number, array: Controller[]) => Controller,
        initialValue: Controller)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: Controller, currentValue: Controller, currentIndex:
            number, array: Controller[]) =&gt; Controller
          description: ''
        - id: initialValue
          type: <xref uid="@azure/arm-devspaces.Controller" />
          description: ''
      return:
        type: <xref uid="@azure/arm-devspaces.Controller" />
        description: ''
  - name: >-
      reduce<U>((previousValue: U, currentValue: Controller, currentIndex:
      number, array: Controller[]) => U, U)
    uid: '@azure/arm-devspaces.ControllerList.reduce_2'
    package: '@azure/arm-devspaces'
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue:
        Controller, currentIndex: number, array: Controller[]) => U,
        initialValue: U)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: Controller, currentIndex: number,
            array: Controller[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type: U
        description: ''
  - name: >-
      reduceRight((previousValue: Controller, currentValue: Controller,
      currentIndex: number, array: Controller[]) => Controller)
    uid: '@azure/arm-devspaces.ControllerList.reduceRight'
    package: '@azure/arm-devspaces'
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: Controller,
        currentValue: Controller, currentIndex: number, array: Controller[]) =>
        Controller)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: Controller, currentValue: Controller, currentIndex:
            number, array: Controller[]) =&gt; Controller
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type: <xref uid="@azure/arm-devspaces.Controller" />
        description: ''
  - name: >-
      reduceRight((previousValue: Controller, currentValue: Controller,
      currentIndex: number, array: Controller[]) => Controller, Controller)
    uid: '@azure/arm-devspaces.ControllerList.reduceRight_1'
    package: '@azure/arm-devspaces'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: Controller,
        currentValue: Controller, currentIndex: number, array: Controller[]) =>
        Controller, initialValue: Controller)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: Controller, currentValue: Controller, currentIndex:
            number, array: Controller[]) =&gt; Controller
          description: ''
        - id: initialValue
          type: <xref uid="@azure/arm-devspaces.Controller" />
          description: ''
      return:
        type: <xref uid="@azure/arm-devspaces.Controller" />
        description: ''
  - name: >-
      reduceRight<U>((previousValue: U, currentValue: Controller, currentIndex:
      number, array: Controller[]) => U, U)
    uid: '@azure/arm-devspaces.ControllerList.reduceRight_2'
    package: '@azure/arm-devspaces'
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        Controller, currentIndex: number, array: Controller[]) => U,
        initialValue: U)
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: Controller, currentIndex: number,
            array: Controller[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type: U
        description: ''
  - name: reverse()
    uid: '@azure/arm-devspaces.ControllerList.reverse'
    package: '@azure/arm-devspaces'
    summary: Reverses the elements in an Array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function reverse()
      return:
        type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
        description: ''
  - name: shift()
    uid: '@azure/arm-devspaces.ControllerList.shift'
    package: '@azure/arm-devspaces'
    summary: Removes the first element from an array and returns it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function shift()
      return:
        type: <xref uid="@azure/arm-devspaces.Controller" /> | undefined
        description: ''
  - name: 'slice(undefined | number, undefined | number)'
    uid: '@azure/arm-devspaces.ControllerList.slice'
    package: '@azure/arm-devspaces'
    summary: Returns a section of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type: undefined | number
          description: The beginning of the specified portion of the array.
        - id: end
          type: undefined | number
          description: |
            The end of the specified portion of the array.
      return:
        type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
        description: ''
  - name: >-
      some((value: Controller, index: number, array: Controller[]) => unknown,
      any)
    uid: '@azure/arm-devspaces.ControllerList.some'
    package: '@azure/arm-devspaces'
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function some(callbackfn: (value: Controller, index: number, array:
        Controller[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type: >-
            (value: Controller, index: number, array: Controller[]) =&gt;
            unknown
          description: >-
            A function that accepts up to three arguments. The some method calls
            the callbackfn function for each element in array1 until the
            callbackfn returns true, or until the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        type: boolean
        description: ''
  - name: 'sort(undefined | (a: Controller, b: Controller) => number)'
    uid: '@azure/arm-devspaces.ControllerList.sort'
    package: '@azure/arm-devspaces'
    summary: Sorts an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sort(compareFn?: undefined | (a: Controller, b: Controller) =>
        number)
      parameters:
        - id: compareFn
          type: 'undefined | (a: Controller, b: Controller) =&gt; number'
          description: >
            The name of the function used to determine the order of the
            elements. If omitted, the elements are sorted in ascending, ASCII
            character order.
      return:
        type: this
        description: ''
  - name: 'splice(number, number, Controller[])'
    uid: '@azure/arm-devspaces.ControllerList.splice_1'
    package: '@azure/arm-devspaces'
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Controller[])'
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: number
          description: The number of elements to remove.
        - id: items
          type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
          description: |
            Elements to insert into the array in place of the deleted elements.
      return:
        type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
        description: ''
  - name: 'splice(number, undefined | number)'
    uid: '@azure/arm-devspaces.ControllerList.splice'
    package: '@azure/arm-devspaces'
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: undefined | number
          description: |
            The number of elements to remove.
      return:
        type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
        description: ''
  - name: toLocaleString()
    uid: '@azure/arm-devspaces.ControllerList.toLocaleString'
    package: '@azure/arm-devspaces'
    summary: >-
      Returns a string representation of an array. The elements are converted to
      string using their toLocalString methods.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function toLocaleString()
      return:
        type: string
        description: ''
  - name: toString()
    uid: '@azure/arm-devspaces.ControllerList.toString'
    package: '@azure/arm-devspaces'
    summary: Returns a string representation of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function toString()
      return:
        type: string
        description: ''
  - name: 'unshift(Controller[])'
    uid: '@azure/arm-devspaces.ControllerList.unshift'
    package: '@azure/arm-devspaces'
    summary: Inserts new elements at the start of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unshift(items: Controller[])'
      parameters:
        - id: items
          type: '<xref uid="@azure/arm-devspaces.Controller" />[]'
          description: |
            Elements to insert at the start of the Array.
      return:
        type: number
        description: ''
  - name: values()
    uid: '@azure/arm-devspaces.ControllerList.values'
    package: '@azure/arm-devspaces'
    summary: Returns an iterable of values in the array
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function values()
      return:
        type: IterableIterator&lt;<xref uid="@azure/arm-devspaces.Controller" />&gt;
        description: ''
extends: Array&lt;<xref uid="@azure/arm-devspaces.Controller" />&gt;
