### YamlMime:TSType
name: WebApps
uid: '@azure/arm-appservice.WebApps'
package: '@azure/arm-appservice'
summary: Class representing a WebApps.
fullName: WebApps
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: WebApps(WebSiteManagementClientContext)
    uid: '@azure/arm-appservice.WebApps.constructor'
    package: '@azure/arm-appservice'
    summary: Create a WebApps.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new WebApps(client: WebSiteManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-appservice.WebSiteManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      addPremierAddOn(string, string, string, PremierAddOn,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.addPremierAddOn'
    package: '@azure/arm-appservice'
    summary: Description for Updates a named add-on of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOn" />
          description: A JSON representation of the edited premier add-on.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsAddPremierAddOnResponse" />&gt;
        description: Promise<Models.WebAppsAddPremierAddOnResponse>
  - name: >-
      addPremierAddOn(string, string, string, PremierAddOn, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.addPremierAddOn_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, options:
        RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOn" />
          description: A JSON representation of the edited premier add-on.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      addPremierAddOn(string, string, string, PremierAddOn,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.addPremierAddOn_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOn" />
          description: A JSON representation of the edited premier add-on.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      addPremierAddOnSlot(string, string, string, PremierAddOn, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.addPremierAddOnSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates a named add-on of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOn" />
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsAddPremierAddOnSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsAddPremierAddOnSlotResponse>
  - name: >-
      addPremierAddOnSlot(string, string, string, PremierAddOn, string,
      RequestOptionsBase, ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.addPremierAddOnSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOn" />
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      addPremierAddOnSlot(string, string, string, PremierAddOn, string,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.addPremierAddOnSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOn, slot: string,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOn" />
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      analyzeCustomHostname(string, string,
      Models.WebAppsAnalyzeCustomHostnameOptionalParams)
    uid: '@azure/arm-appservice.WebApps.analyzeCustomHostname'
    package: '@azure/arm-appservice'
    summary: Description for Analyze a custom hostname.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeCustomHostname(resourceGroupName: string, name: string,
        options?: Models.WebAppsAnalyzeCustomHostnameOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="Models.WebAppsAnalyzeCustomHostnameOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsAnalyzeCustomHostnameResponse"
          />&gt;
        description: Promise<Models.WebAppsAnalyzeCustomHostnameResponse>
  - name: >-
      analyzeCustomHostname(string, string,
      ServiceCallback<CustomHostnameAnalysisResult>)
    uid: '@azure/arm-appservice.WebApps.analyzeCustomHostname_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeCustomHostname(resourceGroupName: string, name: string,
        callback: ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CustomHostnameAnalysisResult" />&gt;
          description: |
            The callback
  - name: >-
      analyzeCustomHostname(string, string,
      WebAppsAnalyzeCustomHostnameOptionalParams,
      ServiceCallback<CustomHostnameAnalysisResult>)
    uid: '@azure/arm-appservice.WebApps.analyzeCustomHostname_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeCustomHostname(resourceGroupName: string, name: string,
        options: WebAppsAnalyzeCustomHostnameOptionalParams, callback:
        ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsAnalyzeCustomHostnameOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CustomHostnameAnalysisResult" />&gt;
          description: |
            The callback
  - name: >-
      analyzeCustomHostnameSlot(string, string, string,
      Models.WebAppsAnalyzeCustomHostnameSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot'
    package: '@azure/arm-appservice'
    summary: Description for Analyze a custom hostname.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeCustomHostnameSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsAnalyzeCustomHostnameSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="Models.WebAppsAnalyzeCustomHostnameSlotOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsAnalyzeCustomHostnameSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsAnalyzeCustomHostnameSlotResponse>
  - name: >-
      analyzeCustomHostnameSlot(string, string, string,
      ServiceCallback<CustomHostnameAnalysisResult>)
    uid: '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeCustomHostnameSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CustomHostnameAnalysisResult" />&gt;
          description: |
            The callback
  - name: >-
      analyzeCustomHostnameSlot(string, string, string,
      WebAppsAnalyzeCustomHostnameSlotOptionalParams,
      ServiceCallback<CustomHostnameAnalysisResult>)
    uid: '@azure/arm-appservice.WebApps.analyzeCustomHostnameSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeCustomHostnameSlot(resourceGroupName: string, name:
        string, slot: string, options:
        WebAppsAnalyzeCustomHostnameSlotOptionalParams, callback:
        ServiceCallback<CustomHostnameAnalysisResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsAnalyzeCustomHostnameSlotOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CustomHostnameAnalysisResult" />&gt;
          description: |
            The callback
  - name: >-
      applySlotConfigToProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.applySlotConfigToProduction'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Applies the configuration settings from the target slot
      onto the current slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function applySlotConfigToProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      applySlotConfigToProduction(string, string, CsmSlotEntity,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.applySlotConfigToProduction_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function applySlotConfigToProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      applySlotConfigToProduction(string, string, CsmSlotEntity,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.applySlotConfigToProduction_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function applySlotConfigToProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      applySlotConfigurationSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.applySlotConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Applies the configuration settings from the target slot
      onto the current slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function applySlotConfigurationSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      applySlotConfigurationSlot(string, string, CsmSlotEntity, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.applySlotConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function applySlotConfigurationSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      applySlotConfigurationSlot(string, string, CsmSlotEntity, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.applySlotConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function applySlotConfigurationSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      approveOrRejectPrivateEndpointConnection(string, string, string,
      PrivateLinkConnectionApprovalRequestResource, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.approveOrRejectPrivateEndpointConnection'
    package: '@azure/arm-appservice'
    summary: Description for Approves or rejects a private endpoint connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function approveOrRejectPrivateEndpointConnection(resourceGroupName:
        string, name: string, privateEndpointConnectionName: string,
        privateEndpointWrapper: PrivateLinkConnectionApprovalRequestResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: privateEndpointConnectionName
          type: string
          description: ''
        - id: privateEndpointWrapper
          type: >-
            <xref
            uid="@azure/arm-appservice.PrivateLinkConnectionApprovalRequestResource"
            />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsApproveOrRejectPrivateEndpointConnectionResponse"
          />&gt;
        description: >-
          Promise<Models.WebAppsApproveOrRejectPrivateEndpointConnectionResponse>
  - name: 'backup(string, string, BackupRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.backup'
    package: '@azure/arm-appservice'
    summary: Description for Creates a backup of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backup(resourceGroupName: string, name: string, request:
        BackupRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsBackupResponse" />&gt;
        description: Promise<Models.WebAppsBackupResponse>
  - name: >-
      backup(string, string, BackupRequest, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.backup_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backup(resourceGroupName: string, name: string, request:
        BackupRequest, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: 'backup(string, string, BackupRequest, ServiceCallback<BackupItem>)'
    uid: '@azure/arm-appservice.WebApps.backup_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backup(resourceGroupName: string, name: string, request:
        BackupRequest, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      backupSlot(string, string, BackupRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.backupSlot'
    package: '@azure/arm-appservice'
    summary: Description for Creates a backup of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupSlot(resourceGroupName: string, name: string, request:
        BackupRequest, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            backup for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsBackupSlotResponse" />&gt;
        description: Promise<Models.WebAppsBackupSlotResponse>
  - name: >-
      backupSlot(string, string, BackupRequest, string, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.backupSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupSlot(resourceGroupName: string, name: string, request:
        BackupRequest, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            backup for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      backupSlot(string, string, BackupRequest, string,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.backupSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupSlot(resourceGroupName: string, name: string, request:
        BackupRequest, slot: string, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: >-
            Backup configuration. You can use the JSON response from the POST
            action as input

            here.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            backup for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      beginApproveOrRejectPrivateEndpointConnection(string, string, string,
      PrivateLinkConnectionApprovalRequestResource, msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-appservice.WebApps.beginApproveOrRejectPrivateEndpointConnection
    package: '@azure/arm-appservice'
    summary: Description for Approves or rejects a private endpoint connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginApproveOrRejectPrivateEndpointConnection(resourceGroupName: string,
        name: string, privateEndpointConnectionName: string,
        privateEndpointWrapper: PrivateLinkConnectionApprovalRequestResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: privateEndpointConnectionName
          type: string
          description: ''
        - id: privateEndpointWrapper
          type: >-
            <xref
            uid="@azure/arm-appservice.PrivateLinkConnectionApprovalRequestResource"
            />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCopyProductionSlot(string, string, CsmCopySlotEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCopyProductionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Copies a deployment slot to another deployment slot of an
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCopyProductionSlot(resourceGroupName: string, name:
        string, copySlotEntity: CsmCopySlotEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: copySlotEntity
          type: <xref uid="@azure/arm-appservice.CsmCopySlotEntity" />
          description: >-
            JSON object that contains the target slot name and site config
            properties

            to override the source slot config. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCopySlotSlot(string, string, CsmCopySlotEntity, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCopySlotSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Copies a deployment slot to another deployment slot of an
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCopySlotSlot(resourceGroupName: string, name: string,
        copySlotEntity: CsmCopySlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: copySlotEntity
          type: <xref uid="@azure/arm-appservice.CsmCopySlotEntity" />
          description: >-
            JSON object that contains the target slot name and site config
            properties

            to override the source slot config. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateFunction(string, string, string, FunctionEnvelope,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateFunction'
    package: '@azure/arm-appservice'
    summary: 'Description for Create function for web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateFunction(resourceGroupName: string, name: string,
        functionName: string, functionEnvelope: FunctionEnvelope, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: functionEnvelope
          type: <xref uid="@azure/arm-appservice.FunctionEnvelope" />
          description: Function details.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateInstanceFunctionSlot(string, string, string, string,
      FunctionEnvelope, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateInstanceFunctionSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Create function for web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateInstanceFunctionSlot(resourceGroupName: string,
        name: string, functionName: string, slot: string, functionEnvelope:
        FunctionEnvelope, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: functionEnvelope
          type: <xref uid="@azure/arm-appservice.FunctionEnvelope" />
          description: Function details.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateInstanceMSDeployOperation(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateInstanceMSDeployOperation'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateInstanceMSDeployOperation(resourceGroupName: string,
        name: string, instanceId: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateInstanceMSDeployOperationSlot(string, string, string, string,
      MSDeploy, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateInstanceMSDeployOperationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateInstanceMSDeployOperationSlot(resourceGroupName:
        string, name: string, slot: string, instanceId: string, mSDeploy:
        MSDeploy, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateMSDeployOperation(string, string, MSDeploy,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateMSDeployOperation'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateMSDeployOperation(resourceGroupName: string, name:
        string, mSDeploy: MSDeploy, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateMSDeployOperationSlot(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateMSDeployOperationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateMSDeployOperationSlot(resourceGroupName: string,
        name: string, slot: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginCreateOrUpdate(string, string, Site, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdate'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new web, mobile, or API app in an existing
      resource group, or updates

      an existing app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, name: string,
        siteEnvelope: Site, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.Site" />
          description: A JSON representation of the app properties. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateOrUpdateSlot(string, string, Site, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdateSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new web, mobile, or API app in an existing
      resource group, or updates

      an existing app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateSlot(resourceGroupName: string, name:
        string, siteEnvelope: Site, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.Site" />
          description: A JSON representation of the app properties. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateOrUpdateSourceControl(string, string, SiteSourceControl,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdateSourceControl'
    package: '@azure/arm-appservice'
    summary: Description for Updates the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateSourceControl(resourceGroupName: string,
        name: string, siteSourceControl: SiteSourceControl, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateOrUpdateSourceControlSlot(string, string, SiteSourceControl,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginCreateOrUpdateSourceControlSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateSourceControlSlot(resourceGroupName: string,
        name: string, siteSourceControl: SiteSourceControl, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginDeletePrivateEndpointConnection(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginDeletePrivateEndpointConnection'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a private endpoint connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeletePrivateEndpointConnection(resourceGroupName: string,
        name: string, privateEndpointConnectionName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: privateEndpointConnectionName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginInstallSiteExtension(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginInstallSiteExtension'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Install site extension on a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginInstallSiteExtension(resourceGroupName: string, name:
        string, siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginInstallSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginInstallSiteExtensionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Install site extension on a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginInstallSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginListPublishingCredentials(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.beginListPublishingCredentials'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Git/FTP publishing credentials of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginListPublishingCredentials(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginListPublishingCredentialsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginListPublishingCredentialsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Git/FTP publishing credentials of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginListPublishingCredentialsSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing credentials for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateMySql(string, string, MigrateMySqlRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginMigrateMySql'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Migrates a local (in-app) MySql database to a remote MySql
      database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateMySql(resourceGroupName: string, name: string,
        migrationRequestEnvelope: MigrateMySqlRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: migrationRequestEnvelope
          type: <xref uid="@azure/arm-appservice.MigrateMySqlRequest" />
          description: MySql migration options.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginMigrateStorage(string, string, string, StorageMigrationOptions,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginMigrateStorage'
    package: '@azure/arm-appservice'
    summary: Description for Restores a web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateStorage(subscriptionName: string,
        resourceGroupName: string, name: string, migrationOptions:
        StorageMigrationOptions, options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionName
          type: string
          description: Azure subscription.
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: migrationOptions
          type: <xref uid="@azure/arm-appservice.StorageMigrationOptions" />
          description: Migration migrationOptions.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestore(string, string, string, RestoreRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestore'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Restores a specific backup to another app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestore(resourceGroupName: string, name: string, backupId:
        string, request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestoreFromBackupBlob(string, string, RestoreRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestoreFromBackupBlob'
    package: '@azure/arm-appservice'
    summary: Description for Restores an app from a backup blob in Azure Storage.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreFromBackupBlob(resourceGroupName: string, name:
        string, request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestoreFromBackupBlobSlot(string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestoreFromBackupBlobSlot'
    package: '@azure/arm-appservice'
    summary: Description for Restores an app from a backup blob in Azure Storage.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreFromBackupBlobSlot(resourceGroupName: string, name:
        string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestoreFromDeletedApp(string, string, DeletedAppRestoreRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestoreFromDeletedApp'
    package: '@azure/arm-appservice'
    summary: Description for Restores a deleted web app to this web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreFromDeletedApp(resourceGroupName: string, name:
        string, restoreRequest: DeletedAppRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.DeletedAppRestoreRequest" />
          description: Deleted web app restore information.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestoreFromDeletedAppSlot(string, string, DeletedAppRestoreRequest,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestoreFromDeletedAppSlot'
    package: '@azure/arm-appservice'
    summary: Description for Restores a deleted web app to this web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreFromDeletedAppSlot(resourceGroupName: string, name:
        string, restoreRequest: DeletedAppRestoreRequest, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.DeletedAppRestoreRequest" />
          description: Deleted web app restore information.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestoreSlot(string, string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestoreSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Restores a specific backup to another app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreSlot(resourceGroupName: string, name: string,
        backupId: string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestoreSnapshot(string, string, SnapshotRestoreRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestoreSnapshot'
    package: '@azure/arm-appservice'
    summary: Description for Restores a web app from a snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreSnapshot(resourceGroupName: string, name: string,
        restoreRequest: SnapshotRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.SnapshotRestoreRequest" />
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginRestoreSnapshotSlot(string, string, SnapshotRestoreRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginRestoreSnapshotSlot'
    package: '@azure/arm-appservice'
    summary: Description for Restores a web app from a snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreSnapshotSlot(resourceGroupName: string, name:
        string, restoreRequest: SnapshotRestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.SnapshotRestoreRequest" />
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginStartNetworkTrace(string, string,
      Models.WebAppsBeginStartNetworkTraceOptionalParams)
    uid: '@azure/arm-appservice.WebApps.beginStartNetworkTrace'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartNetworkTrace(resourceGroupName: string, name: string,
        options?: Models.WebAppsBeginStartNetworkTraceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: <xref uid="Models.WebAppsBeginStartNetworkTraceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginStartNetworkTraceSlot(string, string, string,
      Models.WebAppsBeginStartNetworkTraceSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.beginStartNetworkTraceSlot'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsBeginStartNetworkTraceSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: >-
            <xref uid="Models.WebAppsBeginStartNetworkTraceSlotOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginStartWebSiteNetworkTraceOperation(string, string,
      Models.WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams)
    uid: '@azure/arm-appservice.WebApps.beginStartWebSiteNetworkTraceOperation'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartWebSiteNetworkTraceOperation(resourceGroupName:
        string, name: string, options?:
        Models.WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: >-
            <xref
            uid="Models.WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginStartWebSiteNetworkTraceOperationSlot(string, string, string,
      Models.WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.beginStartWebSiteNetworkTraceOperationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartWebSiteNetworkTraceOperationSlot(resourceGroupName:
        string, name: string, slot: string, options?:
        Models.WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: >-
            <xref
            uid="Models.WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginSwapSlotSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginSwapSlotSlot'
    package: '@azure/arm-appservice'
    summary: Description for Swaps two deployment slots of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginSwapSlotSlot(resourceGroupName: string, name: string,
        slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginSwapSlotWithProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.beginSwapSlotWithProduction'
    package: '@azure/arm-appservice'
    summary: Description for Swaps two deployment slots of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginSwapSlotWithProduction(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      copyProductionSlot(string, string, CsmCopySlotEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.copyProductionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Copies a deployment slot to another deployment slot of an
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function copyProductionSlot(resourceGroupName: string, name: string,
        copySlotEntity: CsmCopySlotEntity, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: copySlotEntity
          type: <xref uid="@azure/arm-appservice.CsmCopySlotEntity" />
          description: >-
            JSON object that contains the target slot name and site config
            properties

            to override the source slot config. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      copySlotSlot(string, string, CsmCopySlotEntity, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.copySlotSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Copies a deployment slot to another deployment slot of an
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function copySlotSlot(resourceGroupName: string, name: string,
        copySlotEntity: CsmCopySlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: copySlotEntity
          type: <xref uid="@azure/arm-appservice.CsmCopySlotEntity" />
          description: >-
            JSON object that contains the target slot name and site config
            properties

            to override the source slot config. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      createDeployment(string, string, string, Deployment,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createDeployment'
    package: '@azure/arm-appservice'
    summary: 'Description for Create a deployment for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDeployment(resourceGroupName: string, name: string, id:
        string, deployment: Deployment, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: ID of an existing deployment.
        - id: deployment
          type: <xref uid="@azure/arm-appservice.Deployment" />
          description: Deployment details.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsCreateDeploymentResponse" />&gt;
        description: Promise<Models.WebAppsCreateDeploymentResponse>
  - name: >-
      createDeployment(string, string, string, Deployment, RequestOptionsBase,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.createDeployment_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDeployment(resourceGroupName: string, name: string, id:
        string, deployment: Deployment, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: ID of an existing deployment.
        - id: deployment
          type: <xref uid="@azure/arm-appservice.Deployment" />
          description: Deployment details.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      createDeployment(string, string, string, Deployment,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.createDeployment_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDeployment(resourceGroupName: string, name: string, id:
        string, deployment: Deployment, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: ID of an existing deployment.
        - id: deployment
          type: <xref uid="@azure/arm-appservice.Deployment" />
          description: Deployment details.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      createDeploymentSlot(string, string, string, string, Deployment,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createDeploymentSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Create a deployment for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, deployment: Deployment, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: ID of an existing deployment.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            creates a

            deployment for the production slot.
        - id: deployment
          type: <xref uid="@azure/arm-appservice.Deployment" />
          description: Deployment details.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsCreateDeploymentSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsCreateDeploymentSlotResponse>
  - name: >-
      createDeploymentSlot(string, string, string, string, Deployment,
      RequestOptionsBase, ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.createDeploymentSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, deployment: Deployment, options:
        RequestOptionsBase, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: ID of an existing deployment.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            creates a

            deployment for the production slot.
        - id: deployment
          type: <xref uid="@azure/arm-appservice.Deployment" />
          description: Deployment details.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      createDeploymentSlot(string, string, string, string, Deployment,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.createDeploymentSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, deployment: Deployment, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: ID of an existing deployment.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            creates a

            deployment for the production slot.
        - id: deployment
          type: <xref uid="@azure/arm-appservice.Deployment" />
          description: Deployment details.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      createFunction(string, string, string, FunctionEnvelope,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createFunction'
    package: '@azure/arm-appservice'
    summary: 'Description for Create function for web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createFunction(resourceGroupName: string, name: string,
        functionName: string, functionEnvelope: FunctionEnvelope, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: functionEnvelope
          type: <xref uid="@azure/arm-appservice.FunctionEnvelope" />
          description: Function details.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsCreateFunctionResponse" />&gt;
        description: Promise<Models.WebAppsCreateFunctionResponse>
  - name: >-
      createInstanceFunctionSlot(string, string, string, string,
      FunctionEnvelope, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createInstanceFunctionSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Create function for web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, functionEnvelope:
        FunctionEnvelope, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: functionEnvelope
          type: <xref uid="@azure/arm-appservice.FunctionEnvelope" />
          description: Function details.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateInstanceFunctionSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateInstanceFunctionSlotResponse>
  - name: >-
      createInstanceMSDeployOperation(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createInstanceMSDeployOperation'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInstanceMSDeployOperation(resourceGroupName: string,
        name: string, instanceId: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateInstanceMSDeployOperationResponse" />&gt;
        description: Promise<Models.WebAppsCreateInstanceMSDeployOperationResponse>
  - name: >-
      createInstanceMSDeployOperationSlot(string, string, string, string,
      MSDeploy, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createInstanceMSDeployOperationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInstanceMSDeployOperationSlot(resourceGroupName: string,
        name: string, slot: string, instanceId: string, mSDeploy: MSDeploy,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateInstanceMSDeployOperationSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateInstanceMSDeployOperationSlotResponse>
  - name: >-
      createMSDeployOperation(string, string, MSDeploy,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createMSDeployOperation'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createMSDeployOperation(resourceGroupName: string, name:
        string, mSDeploy: MSDeploy, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsCreateMSDeployOperationResponse"
          />&gt;
        description: Promise<Models.WebAppsCreateMSDeployOperationResponse>
  - name: >-
      createMSDeployOperationSlot(string, string, string, MSDeploy,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createMSDeployOperationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Invoke the MSDeploy web app extension.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createMSDeployOperationSlot(resourceGroupName: string, name:
        string, slot: string, mSDeploy: MSDeploy, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: mSDeploy
          type: <xref uid="@azure/arm-appservice.MSDeploy" />
          description: Details of MSDeploy operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateMSDeployOperationSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateMSDeployOperationSlotResponse>
  - name: 'createOrUpdate(string, string, Site, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.createOrUpdate'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new web, mobile, or API app in an existing
      resource group, or updates

      an existing app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, name: string,
        siteEnvelope: Site, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.Site" />
          description: A JSON representation of the app properties. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsCreateOrUpdateResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateResponse>
  - name: >-
      createOrUpdateConfiguration(string, string, SiteConfigResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateConfiguration'
    package: '@azure/arm-appservice'
    summary: Description for Updates the configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateConfiguration(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateConfigurationResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateConfigurationResponse>
  - name: >-
      createOrUpdateConfiguration(string, string, SiteConfigResource,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateConfiguration_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateConfiguration(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, options: RequestOptionsBase,
        callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateConfiguration(string, string, SiteConfigResource,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateConfiguration_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateConfiguration(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateConfigurationSlot(string, string, SiteConfigResource,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateConfigurationSlot(resourceGroupName: string,
        name: string, siteConfig: SiteConfigResource, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateConfigurationSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateConfigurationSlotResponse>
  - name: >-
      createOrUpdateConfigurationSlot(string, string, SiteConfigResource,
      string, RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateConfigurationSlot(resourceGroupName: string,
        name: string, siteConfig: SiteConfigResource, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateConfigurationSlot(string, string, SiteConfigResource,
      string, ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateConfigurationSlot(resourceGroupName: string,
        name: string, siteConfig: SiteConfigResource, slot: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateDomainOwnershipIdentifier(string, string, string,
      Identifier, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a domain ownership identifier for web app, or
      updates an existing

      ownership identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifier(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse"
          />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse>
  - name: >-
      createOrUpdateDomainOwnershipIdentifier(string, string, string,
      Identifier, RequestOptionsBase, ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifier(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options: RequestOptionsBase,
        callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateDomainOwnershipIdentifier(string, string, string,
      Identifier, ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifier_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifier(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateDomainOwnershipIdentifierSlot(string, string, string,
      Identifier, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a domain ownership identifier for web app, or
      updates an existing

      ownership identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse"
          />&gt;
        description: >-
          Promise<Models.WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse>
  - name: >-
      createOrUpdateDomainOwnershipIdentifierSlot(string, string, string,
      Identifier, string, RequestOptionsBase, ServiceCallback<Identifier>)
    uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot_2
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateDomainOwnershipIdentifierSlot(string, string, string,
      Identifier, string, ServiceCallback<Identifier>)
    uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateDomainOwnershipIdentifierSlot_1
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateDomainOwnershipIdentifierSlot(resourceGroupName:
        string, name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateFunctionSecret(string, string, string, string, KeyInfo,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateFunctionSecret'
    package: '@azure/arm-appservice'
    summary: Description for Add or update a function secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateFunctionSecret(resourceGroupName: string, name:
        string, functionName: string, keyName: string, key: KeyInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateFunctionSecretResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateFunctionSecretResponse>
  - name: >-
      createOrUpdateFunctionSecret(string, string, string, string, KeyInfo,
      RequestOptionsBase, ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateFunctionSecret_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateFunctionSecret(resourceGroupName: string, name:
        string, functionName: string, keyName: string, key: KeyInfo, options:
        RequestOptionsBase, callback: ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateFunctionSecret(string, string, string, string, KeyInfo,
      ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateFunctionSecret_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateFunctionSecret(resourceGroupName: string, name:
        string, functionName: string, keyName: string, key: KeyInfo, callback:
        ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateFunctionSecretSlot(string, string, string, string, string,
      KeyInfo, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateFunctionSecretSlot'
    package: '@azure/arm-appservice'
    summary: Description for Add or update a function secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateFunctionSecretSlot(resourceGroupName: string,
        name: string, functionName: string, keyName: string, slot: string, key:
        KeyInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateFunctionSecretSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateFunctionSecretSlotResponse>
  - name: >-
      createOrUpdateFunctionSecretSlot(string, string, string, string, string,
      KeyInfo, RequestOptionsBase, ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateFunctionSecretSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateFunctionSecretSlot(resourceGroupName: string,
        name: string, functionName: string, keyName: string, slot: string, key:
        KeyInfo, options: RequestOptionsBase, callback:
        ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateFunctionSecretSlot(string, string, string, string, string,
      KeyInfo, ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateFunctionSecretSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateFunctionSecretSlot(resourceGroupName: string,
        name: string, functionName: string, keyName: string, slot: string, key:
        KeyInfo, callback: ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostNameBinding(string, string, string, HostNameBinding,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding'
    package: '@azure/arm-appservice'
    summary: Description for Creates a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostNameBinding(resourceGroupName: string, name:
        string, hostName: string, hostNameBinding: HostNameBinding, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type: <xref uid="@azure/arm-appservice.HostNameBinding" />
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateHostNameBindingResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateHostNameBindingResponse>
  - name: >-
      createOrUpdateHostNameBinding(string, string, string, HostNameBinding,
      RequestOptionsBase, ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostNameBinding(resourceGroupName: string, name:
        string, hostName: string, hostNameBinding: HostNameBinding, options:
        RequestOptionsBase, callback: ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type: <xref uid="@azure/arm-appservice.HostNameBinding" />
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostNameBinding(string, string, string, HostNameBinding,
      ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBinding_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostNameBinding(resourceGroupName: string, name:
        string, hostName: string, hostNameBinding: HostNameBinding, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type: <xref uid="@azure/arm-appservice.HostNameBinding" />
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostNameBindingSlot(string, string, string, HostNameBinding,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot'
    package: '@azure/arm-appservice'
    summary: Description for Creates a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostNameBindingSlot(resourceGroupName: string,
        name: string, hostName: string, hostNameBinding: HostNameBinding, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type: <xref uid="@azure/arm-appservice.HostNameBinding" />
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateHostNameBindingSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateHostNameBindingSlotResponse>
  - name: >-
      createOrUpdateHostNameBindingSlot(string, string, string, HostNameBinding,
      string, RequestOptionsBase, ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostNameBindingSlot(resourceGroupName: string,
        name: string, hostName: string, hostNameBinding: HostNameBinding, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type: <xref uid="@azure/arm-appservice.HostNameBinding" />
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostNameBindingSlot(string, string, string, HostNameBinding,
      string, ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostNameBindingSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostNameBindingSlot(resourceGroupName: string,
        name: string, hostName: string, hostNameBinding: HostNameBinding, slot:
        string, callback: ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: hostNameBinding
          type: <xref uid="@azure/arm-appservice.HostNameBinding" />
          description: >-
            Binding details. This is the JSON representation of a
            HostNameBinding

            object.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostSecret(string, string, string, string, KeyInfo,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostSecret'
    package: '@azure/arm-appservice'
    summary: Description for Add or update a host level secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostSecret(resourceGroupName: string, name:
        string, keyType: string, keyName: string, key: KeyInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsCreateOrUpdateHostSecretResponse"
          />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateHostSecretResponse>
  - name: >-
      createOrUpdateHostSecret(string, string, string, string, KeyInfo,
      RequestOptionsBase, ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostSecret_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostSecret(resourceGroupName: string, name:
        string, keyType: string, keyName: string, key: KeyInfo, options:
        RequestOptionsBase, callback: ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostSecret(string, string, string, string, KeyInfo,
      ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostSecret_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostSecret(resourceGroupName: string, name:
        string, keyType: string, keyName: string, key: KeyInfo, callback:
        ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostSecretSlot(string, string, string, string, string,
      KeyInfo, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostSecretSlot'
    package: '@azure/arm-appservice'
    summary: Description for Add or update a host level secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostSecretSlot(resourceGroupName: string, name:
        string, keyType: string, keyName: string, slot: string, key: KeyInfo,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateHostSecretSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateHostSecretSlotResponse>
  - name: >-
      createOrUpdateHostSecretSlot(string, string, string, string, string,
      KeyInfo, RequestOptionsBase, ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostSecretSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostSecretSlot(resourceGroupName: string, name:
        string, keyType: string, keyName: string, slot: string, key: KeyInfo,
        options: RequestOptionsBase, callback: ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHostSecretSlot(string, string, string, string, string,
      KeyInfo, ServiceCallback<KeyInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHostSecretSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHostSecretSlot(resourceGroupName: string, name:
        string, keyType: string, keyName: string, slot: string, key: KeyInfo,
        callback: ServiceCallback<KeyInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: key
          type: <xref uid="@azure/arm-appservice.KeyInfo" />
          description: The key to create or update
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.KeyInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHybridConnection(string, string, string, string,
      HybridConnection, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection'
    package: '@azure/arm-appservice'
    summary: Description for Creates a new Hybrid Connection using a Service Bus relay.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateHybridConnectionResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateHybridConnectionResponse>
  - name: >-
      createOrUpdateHybridConnection(string, string, string, string,
      HybridConnection, RequestOptionsBase, ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHybridConnection(string, string, string, string,
      HybridConnection, ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHybridConnection(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot'
    package: '@azure/arm-appservice'
    summary: Description for Creates a new Hybrid Connection using a Service Bus relay.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHybridConnectionSlot(resourceGroupName: string,
        name: string, namespaceName: string, relayName: string,
        connectionEnvelope: HybridConnection, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateHybridConnectionSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateHybridConnectionSlotResponse>
  - name: >-
      createOrUpdateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHybridConnectionSlot(resourceGroupName: string,
        name: string, namespaceName: string, relayName: string,
        connectionEnvelope: HybridConnection, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateHybridConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateHybridConnectionSlot(resourceGroupName: string,
        name: string, namespaceName: string, relayName: string,
        connectionEnvelope: HybridConnection, slot: string, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdatePublicCertificate(string, string, string, PublicCertificate,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate'
    package: '@azure/arm-appservice'
    summary: Description for Creates a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdatePublicCertificate(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: publicCertificate
          type: <xref uid="@azure/arm-appservice.PublicCertificate" />
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdatePublicCertificateResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdatePublicCertificateResponse>
  - name: >-
      createOrUpdatePublicCertificate(string, string, string, PublicCertificate,
      RequestOptionsBase, ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdatePublicCertificate(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: publicCertificate
          type: <xref uid="@azure/arm-appservice.PublicCertificate" />
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdatePublicCertificate(string, string, string, PublicCertificate,
      ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificate_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdatePublicCertificate(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, callback: ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: publicCertificate
          type: <xref uid="@azure/arm-appservice.PublicCertificate" />
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdatePublicCertificateSlot(string, string, string,
      PublicCertificate, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot'
    package: '@azure/arm-appservice'
    summary: Description for Creates a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdatePublicCertificateSlot(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: publicCertificate
          type: <xref uid="@azure/arm-appservice.PublicCertificate" />
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdatePublicCertificateSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdatePublicCertificateSlotResponse>
  - name: >-
      createOrUpdatePublicCertificateSlot(string, string, string,
      PublicCertificate, string, RequestOptionsBase,
      ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdatePublicCertificateSlot(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: publicCertificate
          type: <xref uid="@azure/arm-appservice.PublicCertificate" />
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdatePublicCertificateSlot(string, string, string,
      PublicCertificate, string, ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdatePublicCertificateSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdatePublicCertificateSlot(resourceGroupName: string,
        name: string, publicCertificateName: string, publicCertificate:
        PublicCertificate, slot: string, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: publicCertificate
          type: <xref uid="@azure/arm-appservice.PublicCertificate" />
          description: |-
            Public certificate details. This is the JSON representation of a
            PublicCertificate object.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a

            binding for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new hybrid connection configuration (PUT), or
      updates an existing one

      (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnection(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateRelayServiceConnectionResponse"
          />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateRelayServiceConnectionResponse>
  - name: >-
      createOrUpdateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnection(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnection(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new hybrid connection configuration (PUT), or
      updates an existing one

      (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnectionSlot(resourceGroupName:
        string, name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse"
          />&gt;
        description: >-
          Promise<Models.WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse>
  - name: >-
      createOrUpdateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnectionSlot(resourceGroupName:
        string, name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateRelayServiceConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateRelayServiceConnectionSlot(resourceGroupName:
        string, name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateSlot(string, string, Site, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new web, mobile, or API app in an existing
      resource group, or updates

      an existing app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSlot(resourceGroupName: string, name: string,
        siteEnvelope: Site, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.Site" />
          description: A JSON representation of the app properties. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsCreateOrUpdateSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateSlotResponse>
  - name: >-
      createOrUpdateSourceControl(string, string, SiteSourceControl,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateSourceControl'
    package: '@azure/arm-appservice'
    summary: Description for Updates the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSourceControl(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateSourceControlResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateSourceControlResponse>
  - name: >-
      createOrUpdateSourceControlSlot(string, string, SiteSourceControl, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateSourceControlSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSourceControlSlot(resourceGroupName: string,
        name: string, siteSourceControl: SiteSourceControl, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateSourceControlSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateSourceControlSlotResponse>
  - name: >-
      createOrUpdateSwiftVirtualNetworkConnection(string, string,
      SwiftVirtualNetwork, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Integrates this Web App with a Virtual Network. This
      requires that 1)

      "swiftSupported" is true when doing a GET against this resource, and 2)
      that the target Subnet

      has already been delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSwiftVirtualNetworkConnection(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionResponse"
          />&gt;
        description: >-
          Promise<Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionResponse>
  - name: >-
      createOrUpdateSwiftVirtualNetworkConnection(string, string,
      SwiftVirtualNetwork, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection_2
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSwiftVirtualNetworkConnection(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, options:
        RequestOptionsBase, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateSwiftVirtualNetworkConnection(string, string,
      SwiftVirtualNetwork, ServiceCallback<SwiftVirtualNetwork>)
    uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnection_1
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSwiftVirtualNetworkConnection(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, msRest.RequestOptionsBase)
    uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot
    package: '@azure/arm-appservice'
    summary: >-
      Description for Integrates this Web App with a Virtual Network. This
      requires that 1)

      "swiftSupported" is true when doing a GET against this resource, and 2)
      that the target Subnet

      has already been delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        createOrUpdateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionSlotResponse"
          />&gt;
        description: >-
          Promise<Models.WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionSlotResponse>
  - name: >-
      createOrUpdateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot_2
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        createOrUpdateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, ServiceCallback<SwiftVirtualNetwork>)
    uid: >-
      @azure/arm-appservice.WebApps.createOrUpdateSwiftVirtualNetworkConnectionSlot_1
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        createOrUpdateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnection(string, string, string, VnetInfo,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a Virtual Network connection to an app or slot (PUT)
      or updates the

      connection properties (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnection(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateVnetConnectionResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionResponse>
  - name: >-
      createOrUpdateVnetConnection(string, string, string, VnetInfo,
      RequestOptionsBase, ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnection(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, options:
        RequestOptionsBase, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnection(string, string, string, VnetInfo,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnection(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnectionGateway(string, string, string, string,
      VnetGateway, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a gateway to a connected Virtual Network (PUT) or
      updates it (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGateway(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateVnetConnectionGatewayResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionGatewayResponse>
  - name: >-
      createOrUpdateVnetConnectionGateway(string, string, string, string,
      VnetGateway, RequestOptionsBase, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGateway(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options: RequestOptionsBase, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnectionGateway(string, string, string, string,
      VnetGateway, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGateway_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGateway(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a gateway to a connected Virtual Network (PUT) or
      updates it (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGatewaySlot(resourceGroupName:
        string, name: string, vnetName: string, gatewayName: string,
        connectionEnvelope: VnetGateway, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse"
          />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse>
  - name: >-
      createOrUpdateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, RequestOptionsBase, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGatewaySlot(resourceGroupName:
        string, name: string, vnetName: string, gatewayName: string,
        connectionEnvelope: VnetGateway, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionGatewaySlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionGatewaySlot(resourceGroupName:
        string, name: string, vnetName: string, gatewayName: string,
        connectionEnvelope: VnetGateway, slot: string, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnectionSlot(string, string, string, VnetInfo, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a Virtual Network connection to an app or slot (PUT)
      or updates the

      connection properties (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionSlot(resourceGroupName: string,
        name: string, vnetName: string, connectionEnvelope: VnetInfo, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsCreateOrUpdateVnetConnectionSlotResponse" />&gt;
        description: Promise<Models.WebAppsCreateOrUpdateVnetConnectionSlotResponse>
  - name: >-
      createOrUpdateVnetConnectionSlot(string, string, string, VnetInfo, string,
      RequestOptionsBase, ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionSlot(resourceGroupName: string,
        name: string, vnetName: string, connectionEnvelope: VnetInfo, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateVnetConnectionSlot(string, string, string, VnetInfo, string,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.createOrUpdateVnetConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateVnetConnectionSlot(resourceGroupName: string,
        name: string, vnetName: string, connectionEnvelope: VnetInfo, slot:
        string, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: 'deleteBackup(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteBackup'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a backup of an app by its ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackup(resourceGroupName: string, name: string, backupId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteBackup(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteBackup_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackup(resourceGroupName: string, name: string, backupId:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteBackup(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteBackup_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackup(resourceGroupName: string, name: string, backupId:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteBackupConfiguration(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteBackupConfiguration'
    package: '@azure/arm-appservice'
    summary: Description for Deletes the backup configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupConfiguration(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteBackupConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteBackupConfiguration_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupConfiguration(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteBackupConfiguration(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteBackupConfiguration_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupConfiguration(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteBackupConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Deletes the backup configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            backup configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteBackupConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            backup configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteBackupConfigurationSlot(string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteBackupConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            backup configuration for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteBackupSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteBackupSlot'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a backup of an app by its ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            backup of the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteBackupSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteBackupSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            backup of the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteBackupSlot(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteBackupSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBackupSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            backup of the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJob'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Delete a continuous web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteContinuousWebJob(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Delete a continuous web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteContinuousWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteDeployment(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteDeployment'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Delete a deployment by its ID for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDeployment(resourceGroupName: string, name: string, id:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteDeployment(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteDeployment_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDeployment(resourceGroupName: string, name: string, id:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteDeployment(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteDeployment_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDeployment(resourceGroupName: string, name: string, id:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteDeploymentSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteDeploymentSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Delete a deployment by its ID for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteDeploymentSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteDeploymentSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteDeploymentSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteDeploymentSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDeploymentSlot(resourceGroupName: string, name: string,
        id: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteDomainOwnershipIdentifier(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a domain ownership identifier for a web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteDomainOwnershipIdentifier(string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteDomainOwnershipIdentifier(string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifier_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteDomainOwnershipIdentifierSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a domain ownership identifier for a web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteDomainOwnershipIdentifierSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteDomainOwnershipIdentifierSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteDomainOwnershipIdentifierSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteFunction(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteFunction'
    package: '@azure/arm-appservice'
    summary: 'Description for Delete a function for web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunction(resourceGroupName: string, name: string,
        functionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteFunction(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteFunction_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunction(resourceGroupName: string, name: string,
        functionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteFunction(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteFunction_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunction(resourceGroupName: string, name: string,
        functionName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteFunctionSecret(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteFunctionSecret'
    package: '@azure/arm-appservice'
    summary: Description for Delete a function secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunctionSecret(resourceGroupName: string, name: string,
        functionName: string, keyName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteFunctionSecret(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteFunctionSecret_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunctionSecret(resourceGroupName: string, name: string,
        functionName: string, keyName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteFunctionSecret(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteFunctionSecret_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunctionSecret(resourceGroupName: string, name: string,
        functionName: string, keyName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteFunctionSecretSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteFunctionSecretSlot'
    package: '@azure/arm-appservice'
    summary: Description for Delete a function secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunctionSecretSlot(resourceGroupName: string, name:
        string, functionName: string, keyName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteFunctionSecretSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteFunctionSecretSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunctionSecretSlot(resourceGroupName: string, name:
        string, functionName: string, keyName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteFunctionSecretSlot(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteFunctionSecretSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFunctionSecretSlot(resourceGroupName: string, name:
        string, functionName: string, keyName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: The name of the function.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteHostNameBinding(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteHostNameBinding'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteHostNameBinding(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHostNameBinding_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteHostNameBinding(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteHostNameBinding_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHostNameBindingSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostNameBindingSlot(resourceGroupName: string, name:
        string, slot: string, hostName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteHostNameBindingSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostNameBindingSlot(resourceGroupName: string, name:
        string, slot: string, hostName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHostNameBindingSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHostNameBindingSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostNameBindingSlot(resourceGroupName: string, name:
        string, slot: string, hostName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHostSecret(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteHostSecret'
    package: '@azure/arm-appservice'
    summary: Description for Delete a host level secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostSecret(resourceGroupName: string, name: string,
        keyType: string, keyName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteHostSecret(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHostSecret_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostSecret(resourceGroupName: string, name: string,
        keyType: string, keyName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteHostSecret(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteHostSecret_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostSecret(resourceGroupName: string, name: string,
        keyType: string, keyName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHostSecretSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteHostSecretSlot'
    package: '@azure/arm-appservice'
    summary: Description for Delete a host level secret.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostSecretSlot(resourceGroupName: string, name: string,
        keyType: string, keyName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteHostSecretSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHostSecretSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostSecretSlot(resourceGroupName: string, name: string,
        keyType: string, keyName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHostSecretSlot(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHostSecretSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHostSecretSlot(resourceGroupName: string, name: string,
        keyType: string, keyName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: keyType
          type: string
          description: The type of host key.
        - id: keyName
          type: string
          description: The name of the key.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHybridConnection(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteHybridConnection'
    package: '@azure/arm-appservice'
    summary: Description for Removes a Hybrid Connection from this site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteHybridConnection(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHybridConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHybridConnection(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHybridConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHybridConnectionSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot'
    package: '@azure/arm-appservice'
    summary: Description for Removes a Hybrid Connection from this site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteHybridConnectionSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteHybridConnectionSlot(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteHybridConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteInstanceFunctionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Delete a function for web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteInstanceFunctionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteInstanceFunctionSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceFunctionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteInstanceProcess(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceProcess'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Terminate a process by its ID for a web site, or a
      deployment slot, or specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteInstanceProcess(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceProcess_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteInstanceProcess(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceProcess_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteInstanceProcessSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Terminate a process by its ID for a web site, or a
      deployment slot, or specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceProcessSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteInstanceProcessSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceProcessSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteInstanceProcessSlot(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteInstanceProcessSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstanceProcessSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, Models.WebAppsDeleteMethodOptionalParams)'
    uid: '@azure/arm-appservice.WebApps.deleteMethod'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Deletes a web, mobile, or API app, or one of the
      deployment slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, options?:
        Models.WebAppsDeleteMethodOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app to delete.
        - id: options
          type: <xref uid="Models.WebAppsDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteMethod_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, WebAppsDeleteMethodOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteMethod_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, name: string, options:
        WebAppsDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app to delete.
        - id: options
          type: >-
            <xref uid="@azure/arm-appservice.WebAppsDeleteMethodOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deletePremierAddOn(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deletePremierAddOn'
    package: '@azure/arm-appservice'
    summary: Description for Delete a premier add-on from an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deletePremierAddOn(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deletePremierAddOn_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deletePremierAddOn(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deletePremierAddOn_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deletePremierAddOnSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deletePremierAddOnSlot'
    package: '@azure/arm-appservice'
    summary: Description for Delete a premier add-on from an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            named add-on for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deletePremierAddOnSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deletePremierAddOnSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            named add-on for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deletePremierAddOnSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deletePremierAddOnSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            named add-on for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deletePrivateEndpointConnection(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deletePrivateEndpointConnection'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a private endpoint connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePrivateEndpointConnection(resourceGroupName: string,
        name: string, privateEndpointConnectionName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: privateEndpointConnectionName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsDeletePrivateEndpointConnectionResponse" />&gt;
        description: Promise<Models.WebAppsDeletePrivateEndpointConnectionResponse>
  - name: 'deleteProcess(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteProcess'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Terminate a process by its ID for a web site, or a
      deployment slot, or specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProcess(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteProcess(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteProcess_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProcess(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteProcess(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteProcess_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProcess(resourceGroupName: string, name: string,
        processId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteProcessSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteProcessSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Terminate a process by its ID for a web site, or a
      deployment slot, or specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteProcessSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteProcessSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteProcessSlot(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteProcessSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deletePublicCertificate(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deletePublicCertificate'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePublicCertificate(resourceGroupName: string, name:
        string, publicCertificateName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deletePublicCertificate(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deletePublicCertificate_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePublicCertificate(resourceGroupName: string, name:
        string, publicCertificateName: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deletePublicCertificate(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deletePublicCertificate_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePublicCertificate(resourceGroupName: string, name:
        string, publicCertificateName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deletePublicCertificateSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deletePublicCertificateSlot'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a hostname binding for an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deletePublicCertificateSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deletePublicCertificateSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deletePublicCertificateSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deletePublicCertificateSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deletePublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteRelayServiceConnection(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnection'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a relay service connection by its name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteRelayServiceConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteRelayServiceConnection(string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteRelayServiceConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot'
    package: '@azure/arm-appservice'
    summary: Description for Deletes a relay service connection by its name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            hybrid connection for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteRelayServiceConnectionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            hybrid connection for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteRelayServiceConnectionSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteRelayServiceConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete a

            hybrid connection for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSiteExtension(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteSiteExtension'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Remove a site extension from a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteSiteExtension(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSiteExtension_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSiteExtension(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteSiteExtension_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Remove a site extension from a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteSiteExtensionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteSiteExtensionSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSiteExtensionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSlot(string, string, string, Models.WebAppsDeleteSlotOptionalParams)'
    uid: '@azure/arm-appservice.WebApps.deleteSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Deletes a web, mobile, or API app, or one of the
      deployment slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSlot(resourceGroupName: string, name: string, slot:
        string, options?: Models.WebAppsDeleteSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app to delete.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to delete. By default, the API deletes
            the production

            slot.
        - id: options
          type: <xref uid="Models.WebAppsDeleteSlotOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app to delete.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to delete. By default, the API deletes
            the production

            slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteSlot(string, string, string, WebAppsDeleteSlotOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSlot(resourceGroupName: string, name: string, slot:
        string, options: WebAppsDeleteSlotOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app to delete.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to delete. By default, the API deletes
            the production

            slot.
        - id: options
          type: <xref uid="@azure/arm-appservice.WebAppsDeleteSlotOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSourceControl(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteSourceControl'
    package: '@azure/arm-appservice'
    summary: Description for Deletes the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSourceControl(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteSourceControl(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSourceControl_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSourceControl(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSourceControl(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteSourceControl_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSourceControl(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSourceControlSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteSourceControlSlot'
    package: '@azure/arm-appservice'
    summary: Description for Deletes the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSourceControlSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            source control configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteSourceControlSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSourceControlSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSourceControlSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            source control configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSourceControlSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteSourceControlSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSourceControlSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            source control configuration for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSwiftVirtualNetwork(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Deletes a Swift Virtual Network connection from an app (or
      deployment slot).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSwiftVirtualNetwork(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteSwiftVirtualNetwork(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSwiftVirtualNetwork(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteSwiftVirtualNetwork(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetwork_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSwiftVirtualNetwork(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteSwiftVirtualNetworkSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Deletes a Swift Virtual Network connection from an app (or
      deployment slot).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSwiftVirtualNetworkSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteSwiftVirtualNetworkSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSwiftVirtualNetworkSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteSwiftVirtualNetworkSlot(string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteSwiftVirtualNetworkSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSwiftVirtualNetworkSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteTriggeredWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJob'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Delete a triggered web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteTriggeredWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteTriggeredWebJob(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteTriggeredWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Delete a triggered web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTriggeredWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes web job for

            the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteTriggeredWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTriggeredWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes web job for

            the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteTriggeredWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteTriggeredWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTriggeredWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes web job for

            the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteVnetConnection(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.deleteVnetConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Deletes a connection from an app (or deployment slot to a
      named virtual network.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteVnetConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteVnetConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteVnetConnection(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.deleteVnetConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteVnetConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Deletes a connection from an app (or deployment slot to a
      named virtual network.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteVnetConnectionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteVnetConnectionSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.deleteVnetConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            connection for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'discoverBackup(string, string, RestoreRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.discoverBackup'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Discovers an existing app backup that can be restored from
      a blob in Azure

      storage. Use this to get information about the databases stored in a
      backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function discoverBackup(resourceGroupName: string, name: string,
        request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsDiscoverBackupResponse" />&gt;
        description: Promise<Models.WebAppsDiscoverBackupResponse>
  - name: >-
      discoverBackup(string, string, RestoreRequest, RequestOptionsBase,
      ServiceCallback<RestoreRequest>)
    uid: '@azure/arm-appservice.WebApps.discoverBackup_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function discoverBackup(resourceGroupName: string, name: string,
        request: RestoreRequest, options: RequestOptionsBase, callback:
        ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.RestoreRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      discoverBackup(string, string, RestoreRequest,
      ServiceCallback<RestoreRequest>)
    uid: '@azure/arm-appservice.WebApps.discoverBackup_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function discoverBackup(resourceGroupName: string, name: string,
        request: RestoreRequest, callback: ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.RestoreRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      discoverBackupSlot(string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.discoverBackupSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Discovers an existing app backup that can be restored from
      a blob in Azure

      storage. Use this to get information about the databases stored in a
      backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function discoverBackupSlot(resourceGroupName: string, name: string,
        request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will perform

            discovery for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsDiscoverBackupSlotResponse" />&gt;
        description: Promise<Models.WebAppsDiscoverBackupSlotResponse>
  - name: >-
      discoverBackupSlot(string, string, RestoreRequest, string,
      RequestOptionsBase, ServiceCallback<RestoreRequest>)
    uid: '@azure/arm-appservice.WebApps.discoverBackupSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function discoverBackupSlot(resourceGroupName: string, name: string,
        request: RestoreRequest, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will perform

            discovery for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.RestoreRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      discoverBackupSlot(string, string, RestoreRequest, string,
      ServiceCallback<RestoreRequest>)
    uid: '@azure/arm-appservice.WebApps.discoverBackupSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function discoverBackupSlot(resourceGroupName: string, name: string,
        request: RestoreRequest, slot: string, callback:
        ServiceCallback<RestoreRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: >-
            A RestoreRequest object that includes Azure storage URL and blog
            name for

            discovery of backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will perform

            discovery for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.RestoreRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      generateNewSitePublishingPassword(string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Generates a new publishing password for an app (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName: string,
        name: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      generateNewSitePublishingPassword(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName: string,
        name: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'generateNewSitePublishingPassword(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPassword_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateNewSitePublishingPassword(resourceGroupName: string,
        name: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      generateNewSitePublishingPasswordSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Generates a new publishing password for an app (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName:
        string, name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            generate a new

            publishing password for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      generateNewSitePublishingPasswordSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName:
        string, name: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            generate a new

            publishing password for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      generateNewSitePublishingPasswordSlot(string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.generateNewSitePublishingPasswordSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateNewSitePublishingPasswordSlot(resourceGroupName:
        string, name: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            generate a new

            publishing password for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.get'
    package: '@azure/arm-appservice'
    summary: 'Description for Gets the details of a web, mobile, or API app.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetResponse" />&gt;
        description: Promise<Models.WebAppsGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Site>)'
    uid: '@azure/arm-appservice.WebApps.get_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Site>)'
    uid: '@azure/arm-appservice.WebApps.get_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, callback:
        ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: 'getAuthSettings(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getAuthSettings'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Authentication/Authorization settings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetAuthSettingsResponse" />&gt;
        description: Promise<Models.WebAppsGetAuthSettingsResponse>
  - name: >-
      getAuthSettings(string, string, RequestOptionsBase,
      ServiceCallback<SiteAuthSettings>)
    uid: '@azure/arm-appservice.WebApps.getAuthSettings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: 'getAuthSettings(string, string, ServiceCallback<SiteAuthSettings>)'
    uid: '@azure/arm-appservice.WebApps.getAuthSettings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettings(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: 'getAuthSettingsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Authentication/Authorization settings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetAuthSettingsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetAuthSettingsSlotResponse>
  - name: >-
      getAuthSettingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteAuthSettings>)
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: >-
      getAuthSettingsSlot(string, string, string,
      ServiceCallback<SiteAuthSettings>)
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: 'getAuthSettingsV2(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsV2'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets site's Authentication / Authorization settings for
      apps via the V2 format
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsV2(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetAuthSettingsV2Response" />&gt;
        description: Promise<Models.WebAppsGetAuthSettingsV2Response>
  - name: >-
      getAuthSettingsV2(string, string, RequestOptionsBase,
      ServiceCallback<SiteAuthSettingsV2>)
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsV2_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsV2(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: 'getAuthSettingsV2(string, string, ServiceCallback<SiteAuthSettingsV2>)'
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsV2_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsV2(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: 'getAuthSettingsV2Slot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsV2Slot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets site's Authentication / Authorization settings for
      apps via the V2 format
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsV2Slot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetAuthSettingsV2SlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetAuthSettingsV2SlotResponse>
  - name: >-
      getAuthSettingsV2Slot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteAuthSettingsV2>)
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsV2Slot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsV2Slot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: >-
      getAuthSettingsV2Slot(string, string, string,
      ServiceCallback<SiteAuthSettingsV2>)
    uid: '@azure/arm-appservice.WebApps.getAuthSettingsV2Slot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthSettingsV2Slot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            settings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: 'getBackupConfiguration(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getBackupConfiguration'
    package: '@azure/arm-appservice'
    summary: Description for Gets the backup configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupConfiguration(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetBackupConfigurationResponse"
          />&gt;
        description: Promise<Models.WebAppsGetBackupConfigurationResponse>
  - name: >-
      getBackupConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<BackupRequest>)
    uid: '@azure/arm-appservice.WebApps.getBackupConfiguration_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupConfiguration(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: 'getBackupConfiguration(string, string, ServiceCallback<BackupRequest>)'
    uid: '@azure/arm-appservice.WebApps.getBackupConfiguration_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupConfiguration(resourceGroupName: string, name: string,
        callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      getBackupConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getBackupConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the backup configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the backup

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetBackupConfigurationSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetBackupConfigurationSlotResponse>
  - name: >-
      getBackupConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<BackupRequest>)
    uid: '@azure/arm-appservice.WebApps.getBackupConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the backup

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      getBackupConfigurationSlot(string, string, string,
      ServiceCallback<BackupRequest>)
    uid: '@azure/arm-appservice.WebApps.getBackupConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the backup

            configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: 'getBackupStatus(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getBackupStatus'
    package: '@azure/arm-appservice'
    summary: Description for Gets a backup of an app by its ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupStatus(resourceGroupName: string, name: string,
        backupId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetBackupStatusResponse" />&gt;
        description: Promise<Models.WebAppsGetBackupStatusResponse>
  - name: >-
      getBackupStatus(string, string, string, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.getBackupStatus_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupStatus(resourceGroupName: string, name: string,
        backupId: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: 'getBackupStatus(string, string, string, ServiceCallback<BackupItem>)'
    uid: '@azure/arm-appservice.WebApps.getBackupStatus_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupStatus(resourceGroupName: string, name: string,
        backupId: string, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      getBackupStatusSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getBackupStatusSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets a backup of an app by its ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupStatusSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a backup

            of the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetBackupStatusSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetBackupStatusSlotResponse>
  - name: >-
      getBackupStatusSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.getBackupStatusSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupStatusSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a backup

            of the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      getBackupStatusSlot(string, string, string, string,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.getBackupStatusSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBackupStatusSlot(resourceGroupName: string, name: string,
        backupId: string, slot: string, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a backup

            of the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      getBasicPublishingCredentialsPolicies(string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getBasicPublishingCredentialsPolicies'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns whether Scm basic auth is allowed and whether Ftp
      is allowed for a given

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBasicPublishingCredentialsPolicies(resourceGroupName:
        string, name: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetBasicPublishingCredentialsPoliciesResponse"
          />&gt;
        description: Promise<Models.WebAppsGetBasicPublishingCredentialsPoliciesResponse>
  - name: >-
      getBasicPublishingCredentialsPolicies(string, string, RequestOptionsBase,
      ServiceCallback<CsmPublishingCredentialsPoliciesCollection>)
    uid: '@azure/arm-appservice.WebApps.getBasicPublishingCredentialsPolicies_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBasicPublishingCredentialsPolicies(resourceGroupName:
        string, name: string, options: RequestOptionsBase, callback:
        ServiceCallback<CsmPublishingCredentialsPoliciesCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      getBasicPublishingCredentialsPolicies(string, string,
      ServiceCallback<CsmPublishingCredentialsPoliciesCollection>)
    uid: '@azure/arm-appservice.WebApps.getBasicPublishingCredentialsPolicies_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBasicPublishingCredentialsPolicies(resourceGroupName:
        string, name: string, callback:
        ServiceCallback<CsmPublishingCredentialsPoliciesCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesCollection"
            />&gt;
          description: |
            The callback
  - name: 'getConfiguration(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getConfiguration'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the configuration of an app, such as platform version
      and bitness, default

      documents, virtual applications, Always On, etc.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfiguration(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetConfigurationResponse" />&gt;
        description: Promise<Models.WebAppsGetConfigurationResponse>
  - name: >-
      getConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.getConfiguration_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfiguration(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: 'getConfiguration(string, string, ServiceCallback<SiteConfigResource>)'
    uid: '@azure/arm-appservice.WebApps.getConfiguration_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfiguration(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: 'getConfigurationSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the configuration of an app, such as platform version
      and bitness, default

      documents, virtual applications, Always On, etc.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetConfigurationSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetConfigurationSlotResponse>
  - name: >-
      getConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      getConfigurationSlot(string, string, string,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      getConfigurationSnapshot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a snapshot of the configuration of an app at a
      previous point in time.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSnapshot(resourceGroupName: string, name:
        string, snapshotId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetConfigurationSnapshotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetConfigurationSnapshotResponse>
  - name: >-
      getConfigurationSnapshot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSnapshot(resourceGroupName: string, name:
        string, snapshotId: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      getConfigurationSnapshot(string, string, string,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSnapshot(resourceGroupName: string, name:
        string, snapshotId: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      getConfigurationSnapshotSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a snapshot of the configuration of an app at a
      previous point in time.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSnapshotSlot(resourceGroupName: string, name:
        string, snapshotId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetConfigurationSnapshotSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetConfigurationSnapshotSlotResponse>
  - name: >-
      getConfigurationSnapshotSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSnapshotSlot(resourceGroupName: string, name:
        string, snapshotId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      getConfigurationSnapshotSlot(string, string, string, string,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.getConfigurationSnapshotSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConfigurationSnapshotSlot(resourceGroupName: string, name:
        string, snapshotId: string, slot: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: 'getContainerLogsZip(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getContainerLogsZip'
    package: '@azure/arm-appservice'
    summary: Description for Gets the ZIP archived docker log files for the given site
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContainerLogsZip(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetContainerLogsZipResponse"
          />&gt;
        description: Promise<Models.WebAppsGetContainerLogsZipResponse>
  - name: >-
      getContainerLogsZip(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getContainerLogsZip_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContainerLogsZip(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getContainerLogsZip(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.getContainerLogsZip_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContainerLogsZip(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getContainerLogsZipSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getContainerLogsZipSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the ZIP archived docker log files for the given site
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContainerLogsZipSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetContainerLogsZipSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetContainerLogsZipSlotResponse>
  - name: >-
      getContainerLogsZipSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getContainerLogsZipSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContainerLogsZipSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getContainerLogsZipSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.getContainerLogsZipSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContainerLogsZipSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getContinuousWebJob'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a continuous web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetContinuousWebJobResponse"
          />&gt;
        description: Promise<Models.WebAppsGetContinuousWebJobResponse>
  - name: >-
      getContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJob>)
    uid: '@azure/arm-appservice.WebApps.getContinuousWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJob" />&gt;
          description: |
            The callback
  - name: >-
      getContinuousWebJob(string, string, string,
      ServiceCallback<ContinuousWebJob>)
    uid: '@azure/arm-appservice.WebApps.getContinuousWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJob" />&gt;
          description: |
            The callback
  - name: >-
      getContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getContinuousWebJobSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a continuous web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetContinuousWebJobSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetContinuousWebJobSlotResponse>
  - name: >-
      getContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ContinuousWebJob>)
    uid: '@azure/arm-appservice.WebApps.getContinuousWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJob" />&gt;
          description: |
            The callback
  - name: >-
      getContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<ContinuousWebJob>)
    uid: '@azure/arm-appservice.WebApps.getContinuousWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<ContinuousWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJob" />&gt;
          description: |
            The callback
  - name: 'getDeployment(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getDeployment'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get a deployment by its ID for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeployment(resourceGroupName: string, name: string, id:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetDeploymentResponse" />&gt;
        description: Promise<Models.WebAppsGetDeploymentResponse>
  - name: >-
      getDeployment(string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.getDeployment_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeployment(resourceGroupName: string, name: string, id:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: 'getDeployment(string, string, string, ServiceCallback<Deployment>)'
    uid: '@azure/arm-appservice.WebApps.getDeployment_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeployment(resourceGroupName: string, name: string, id:
        string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      getDeploymentSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getDeploymentSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get a deployment by its ID for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeploymentSlot(resourceGroupName: string, name: string, id:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets a deployment

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetDeploymentSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetDeploymentSlotResponse>
  - name: >-
      getDeploymentSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.getDeploymentSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeploymentSlot(resourceGroupName: string, name: string, id:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets a deployment

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      getDeploymentSlot(string, string, string, string,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.getDeploymentSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeploymentSlot(resourceGroupName: string, name: string, id:
        string, slot: string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: Deployment ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets a deployment

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: 'getDiagnosticLogsConfiguration(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration'
    package: '@azure/arm-appservice'
    summary: Description for Gets the logging configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDiagnosticLogsConfiguration(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetDiagnosticLogsConfigurationResponse" />&gt;
        description: Promise<Models.WebAppsGetDiagnosticLogsConfigurationResponse>
  - name: >-
      getDiagnosticLogsConfiguration(string, string, RequestOptionsBase,
      ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDiagnosticLogsConfiguration(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      getDiagnosticLogsConfiguration(string, string,
      ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfiguration_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDiagnosticLogsConfiguration(resourceGroupName: string, name:
        string, callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      getDiagnosticLogsConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the logging configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDiagnosticLogsConfigurationSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            logging configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetDiagnosticLogsConfigurationSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetDiagnosticLogsConfigurationSlotResponse>
  - name: >-
      getDiagnosticLogsConfigurationSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDiagnosticLogsConfigurationSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            logging configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      getDiagnosticLogsConfigurationSlot(string, string, string,
      ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.getDiagnosticLogsConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDiagnosticLogsConfigurationSlot(resourceGroupName: string,
        name: string, slot: string, callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            logging configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      getDomainOwnershipIdentifier(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier'
    package: '@azure/arm-appservice'
    summary: Description for Get domain ownership identifier for web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomainOwnershipIdentifier(resourceGroupName: string, name:
        string, domainOwnershipIdentifierName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetDomainOwnershipIdentifierResponse" />&gt;
        description: Promise<Models.WebAppsGetDomainOwnershipIdentifierResponse>
  - name: >-
      getDomainOwnershipIdentifier(string, string, string, RequestOptionsBase,
      ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomainOwnershipIdentifier(resourceGroupName: string, name:
        string, domainOwnershipIdentifierName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      getDomainOwnershipIdentifier(string, string, string,
      ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifier_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomainOwnershipIdentifier(resourceGroupName: string, name:
        string, domainOwnershipIdentifierName: string, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      getDomainOwnershipIdentifierSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get domain ownership identifier for web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetDomainOwnershipIdentifierSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetDomainOwnershipIdentifierSlotResponse>
  - name: >-
      getDomainOwnershipIdentifierSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      getDomainOwnershipIdentifierSlot(string, string, string, string,
      ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.getDomainOwnershipIdentifierSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string, slot: string,
        callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: 'getFtpAllowed(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getFtpAllowed'
    package: '@azure/arm-appservice'
    summary: Description for Returns whether FTP is allowed on the site or not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFtpAllowed(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetFtpAllowedResponse" />&gt;
        description: Promise<Models.WebAppsGetFtpAllowedResponse>
  - name: >-
      getFtpAllowed(string, string, RequestOptionsBase,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.getFtpAllowed_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFtpAllowed(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: >-
      getFtpAllowed(string, string,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.getFtpAllowed_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFtpAllowed(resourceGroupName: string, name: string,
        callback: ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: 'getFunction(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getFunction'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get function information by its ID for web site, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunction(resourceGroupName: string, name: string,
        functionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetFunctionResponse" />&gt;
        description: Promise<Models.WebAppsGetFunctionResponse>
  - name: >-
      getFunction(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelope>)
    uid: '@azure/arm-appservice.WebApps.getFunction_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunction(resourceGroupName: string, name: string,
        functionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelope" />&gt;
          description: |
            The callback
  - name: 'getFunction(string, string, string, ServiceCallback<FunctionEnvelope>)'
    uid: '@azure/arm-appservice.WebApps.getFunction_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunction(resourceGroupName: string, name: string,
        functionName: string, callback: ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelope" />&gt;
          description: |
            The callback
  - name: 'getFunctionsAdminToken(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getFunctionsAdminToken'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Fetch a short lived token that can be exchanged for a
      master key.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunctionsAdminToken(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetFunctionsAdminTokenResponse"
          />&gt;
        description: Promise<Models.WebAppsGetFunctionsAdminTokenResponse>
  - name: >-
      getFunctionsAdminToken(string, string, RequestOptionsBase,
      ServiceCallback<string>)
    uid: '@azure/arm-appservice.WebApps.getFunctionsAdminToken_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunctionsAdminToken(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: 'getFunctionsAdminToken(string, string, ServiceCallback<string>)'
    uid: '@azure/arm-appservice.WebApps.getFunctionsAdminToken_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunctionsAdminToken(resourceGroupName: string, name: string,
        callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: >-
      getFunctionsAdminTokenSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Fetch a short lived token that can be exchanged for a
      master key.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunctionsAdminTokenSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetFunctionsAdminTokenSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetFunctionsAdminTokenSlotResponse>
  - name: >-
      getFunctionsAdminTokenSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<string>)
    uid: '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunctionsAdminTokenSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: >-
      getFunctionsAdminTokenSlot(string, string, string,
      ServiceCallback<string>)
    uid: '@azure/arm-appservice.WebApps.getFunctionsAdminTokenSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFunctionsAdminTokenSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: 'getHostNameBinding(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getHostNameBinding'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the named hostname binding for an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetHostNameBindingResponse" />&gt;
        description: Promise<Models.WebAppsGetHostNameBindingResponse>
  - name: >-
      getHostNameBinding(string, string, string, RequestOptionsBase,
      ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.getHostNameBinding_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      getHostNameBinding(string, string, string,
      ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.getHostNameBinding_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHostNameBinding(resourceGroupName: string, name: string,
        hostName: string, callback: ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      getHostNameBindingSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getHostNameBindingSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the named hostname binding for an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHostNameBindingSlot(resourceGroupName: string, name: string,
        slot: string, hostName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetHostNameBindingSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetHostNameBindingSlotResponse>
  - name: >-
      getHostNameBindingSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.getHostNameBindingSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHostNameBindingSlot(resourceGroupName: string, name: string,
        slot: string, hostName: string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      getHostNameBindingSlot(string, string, string, string,
      ServiceCallback<HostNameBinding>)
    uid: '@azure/arm-appservice.WebApps.getHostNameBindingSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHostNameBindingSlot(resourceGroupName: string, name: string,
        slot: string, hostName: string, callback:
        ServiceCallback<HostNameBinding>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: hostName
          type: string
          description: Hostname in the hostname binding.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostNameBinding"
            />&gt;
          description: |
            The callback
  - name: >-
      getHybridConnection(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getHybridConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Retrieves a specific Service Bus Hybrid Connection used by
      this Web App.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetHybridConnectionResponse"
          />&gt;
        description: Promise<Models.WebAppsGetHybridConnectionResponse>
  - name: >-
      getHybridConnection(string, string, string, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.getHybridConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, options: RequestOptionsBase,
        callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      getHybridConnection(string, string, string, string,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.getHybridConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      getHybridConnectionSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getHybridConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Retrieves a specific Service Bus Hybrid Connection used by
      this Web App.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetHybridConnectionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetHybridConnectionSlotResponse>
  - name: >-
      getHybridConnectionSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.getHybridConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      getHybridConnectionSlot(string, string, string, string, string,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.getHybridConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, slot: string,
        callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceFunctionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceFunctionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get function information by its ID for web site, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetInstanceFunctionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetInstanceFunctionSlotResponse>
  - name: >-
      getInstanceFunctionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<FunctionEnvelope>)
    uid: '@azure/arm-appservice.WebApps.getInstanceFunctionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelope" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceFunctionSlot(string, string, string, string,
      ServiceCallback<FunctionEnvelope>)
    uid: '@azure/arm-appservice.WebApps.getInstanceFunctionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceFunctionSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, callback:
        ServiceCallback<FunctionEnvelope>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelope" />&gt;
          description: |
            The callback
  - name: 'getInstanceInfo(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getInstanceInfo'
    package: '@azure/arm-appservice'
    summary: Description for Gets all scale-out instances of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceInfo(resourceGroupName: string, name: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: instanceId
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetInstanceInfoResponse" />&gt;
        description: Promise<Models.WebAppsGetInstanceInfoResponse>
  - name: >-
      getInstanceInfo(string, string, string, RequestOptionsBase,
      ServiceCallback<WebSiteInstanceStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceInfo_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceInfo(resourceGroupName: string, name: string,
        instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<WebSiteInstanceStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: instanceId
          type: string
          description: ''
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebSiteInstanceStatus" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceInfo(string, string, string,
      ServiceCallback<WebSiteInstanceStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceInfo_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceInfo(resourceGroupName: string, name: string,
        instanceId: string, callback: ServiceCallback<WebSiteInstanceStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: instanceId
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebSiteInstanceStatus" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceInfoSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceInfoSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets all scale-out instances of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceInfoSlot(resourceGroupName: string, name: string,
        instanceId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: instanceId
          type: string
          description: ''
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetInstanceInfoSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetInstanceInfoSlotResponse>
  - name: >-
      getInstanceInfoSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<WebSiteInstanceStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceInfoSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceInfoSlot(resourceGroupName: string, name: string,
        instanceId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<WebSiteInstanceStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: instanceId
          type: string
          description: ''
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebSiteInstanceStatus" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceInfoSlot(string, string, string, string,
      ServiceCallback<WebSiteInstanceStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceInfoSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceInfoSlot(resourceGroupName: string, name: string,
        instanceId: string, slot: string, callback:
        ServiceCallback<WebSiteInstanceStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: instanceId
          type: string
          description: ''
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebSiteInstanceStatus" />&gt;
          description: |
            The callback
  - name: 'getInstanceMSDeployLog(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLog'
    package: '@azure/arm-appservice'
    summary: Description for Get the MSDeploy Log for the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMSDeployLog(resourceGroupName: string, name: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetInstanceMSDeployLogResponse"
          />&gt;
        description: Promise<Models.WebAppsGetInstanceMSDeployLogResponse>
  - name: >-
      getInstanceMSDeployLog(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployLog>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLog_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMSDeployLog(resourceGroupName: string, name: string,
        instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceMSDeployLog(string, string, string,
      ServiceCallback<MSDeployLog>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLog_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMSDeployLog(resourceGroupName: string, name: string,
        instanceId: string, callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceMSDeployLogSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get the MSDeploy Log for the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMSDeployLogSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetInstanceMSDeployLogSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetInstanceMSDeployLogSlotResponse>
  - name: >-
      getInstanceMSDeployLogSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<MSDeployLog>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMSDeployLogSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceMSDeployLogSlot(string, string, string, string,
      ServiceCallback<MSDeployLog>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMSDeployLogSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMSDeployLogSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, callback:
        ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceMsDeployStatus(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus'
    package: '@azure/arm-appservice'
    summary: Description for Get the status of the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMsDeployStatus(resourceGroupName: string, name:
        string, instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetInstanceMsDeployStatusResponse"
          />&gt;
        description: Promise<Models.WebAppsGetInstanceMsDeployStatusResponse>
  - name: >-
      getInstanceMsDeployStatus(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMsDeployStatus(resourceGroupName: string, name:
        string, instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceMsDeployStatus(string, string, string,
      ServiceCallback<MSDeployStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatus_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMsDeployStatus(resourceGroupName: string, name:
        string, instanceId: string, callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceMsDeployStatusSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get the status of the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMsDeployStatusSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetInstanceMsDeployStatusSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetInstanceMsDeployStatusSlotResponse>
  - name: >-
      getInstanceMsDeployStatusSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<MSDeployStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMsDeployStatusSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceMsDeployStatusSlot(string, string, string, string,
      ServiceCallback<MSDeployStatus>)
    uid: '@azure/arm-appservice.WebApps.getInstanceMsDeployStatusSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceMsDeployStatusSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, callback:
        ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: instanceId
          type: string
          description: ID of web app instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcess(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcess'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetInstanceProcessResponse" />&gt;
        description: Promise<Models.WebAppsGetInstanceProcessResponse>
  - name: >-
      getInstanceProcess(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcess_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcess(string, string, string, string,
      ServiceCallback<ProcessInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcess_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcess(resourceGroupName: string, name: string,
        processId: string, instanceId: string, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessDump(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessDump'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get a memory dump of a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessDump(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetInstanceProcessDumpResponse"
          />&gt;
        description: Promise<Models.WebAppsGetInstanceProcessDumpResponse>
  - name: >-
      getInstanceProcessDump(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessDump_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessDump(resourceGroupName: string, name: string,
        processId: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessDump(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessDump_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessDump(resourceGroupName: string, name: string,
        processId: string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessDumpSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get a memory dump of a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessDumpSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetInstanceProcessDumpSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetInstanceProcessDumpSlotResponse>
  - name: >-
      getInstanceProcessDumpSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessDumpSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessDumpSlot(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessDumpSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessDumpSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessModule(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessModule'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessModule(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, instanceId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetInstanceProcessModuleResponse"
          />&gt;
        description: Promise<Models.WebAppsGetInstanceProcessModuleResponse>
  - name: >-
      getInstanceProcessModule(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessModule_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessModule(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, instanceId: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessModule(string, string, string, string, string,
      ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessModule_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessModule(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, instanceId: string,
        callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessModuleSlot(string, string, string, string, string,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessModuleSlot(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, slot: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetInstanceProcessModuleSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetInstanceProcessModuleSlotResponse>
  - name: >-
      getInstanceProcessModuleSlot(string, string, string, string, string,
      string, RequestOptionsBase, ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessModuleSlot(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, slot: string,
        instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessModuleSlot(string, string, string, string, string,
      string, ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessModuleSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessModuleSlot(resourceGroupName: string, name:
        string, processId: string, baseAddress: string, slot: string,
        instanceId: string, callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetInstanceProcessSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetInstanceProcessSlotResponse>
  - name: >-
      getInstanceProcessSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: >-
      getInstanceProcessSlot(string, string, string, string, string,
      ServiceCallback<ProcessInfo>)
    uid: '@azure/arm-appservice.WebApps.getInstanceProcessSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: 'getMigrateMySqlStatus(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatus'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns the status of MySql in app migration, if one is
      active, and whether or

      not MySql in app is enabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMigrateMySqlStatus(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetMigrateMySqlStatusResponse"
          />&gt;
        description: Promise<Models.WebAppsGetMigrateMySqlStatusResponse>
  - name: >-
      getMigrateMySqlStatus(string, string, RequestOptionsBase,
      ServiceCallback<MigrateMySqlStatus>)
    uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatus_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMigrateMySqlStatus(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.MigrateMySqlStatus" />&gt;
          description: |
            The callback
  - name: 'getMigrateMySqlStatus(string, string, ServiceCallback<MigrateMySqlStatus>)'
    uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatus_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMigrateMySqlStatus(resourceGroupName: string, name: string,
        callback: ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.MigrateMySqlStatus" />&gt;
          description: |
            The callback
  - name: >-
      getMigrateMySqlStatusSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns the status of MySql in app migration, if one is
      active, and whether or

      not MySql in app is enabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMigrateMySqlStatusSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetMigrateMySqlStatusSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetMigrateMySqlStatusSlotResponse>
  - name: >-
      getMigrateMySqlStatusSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<MigrateMySqlStatus>)
    uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMigrateMySqlStatusSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.MigrateMySqlStatus" />&gt;
          description: |
            The callback
  - name: >-
      getMigrateMySqlStatusSlot(string, string, string,
      ServiceCallback<MigrateMySqlStatus>)
    uid: '@azure/arm-appservice.WebApps.getMigrateMySqlStatusSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMigrateMySqlStatusSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<MigrateMySqlStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.MigrateMySqlStatus" />&gt;
          description: |
            The callback
  - name: 'getMSDeployLog(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getMSDeployLog'
    package: '@azure/arm-appservice'
    summary: Description for Get the MSDeploy Log for the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployLog(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetMSDeployLogResponse" />&gt;
        description: Promise<Models.WebAppsGetMSDeployLogResponse>
  - name: >-
      getMSDeployLog(string, string, RequestOptionsBase,
      ServiceCallback<MSDeployLog>)
    uid: '@azure/arm-appservice.WebApps.getMSDeployLog_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployLog(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: 'getMSDeployLog(string, string, ServiceCallback<MSDeployLog>)'
    uid: '@azure/arm-appservice.WebApps.getMSDeployLog_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployLog(resourceGroupName: string, name: string,
        callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: 'getMSDeployLogSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getMSDeployLogSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get the MSDeploy Log for the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployLogSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetMSDeployLogSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetMSDeployLogSlotResponse>
  - name: >-
      getMSDeployLogSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployLog>)
    uid: '@azure/arm-appservice.WebApps.getMSDeployLogSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployLogSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: 'getMSDeployLogSlot(string, string, string, ServiceCallback<MSDeployLog>)'
    uid: '@azure/arm-appservice.WebApps.getMSDeployLogSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployLogSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<MSDeployLog>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployLog"
            />&gt;
          description: |
            The callback
  - name: 'getMSDeployStatus(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getMSDeployStatus'
    package: '@azure/arm-appservice'
    summary: Description for Get the status of the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployStatus(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetMSDeployStatusResponse" />&gt;
        description: Promise<Models.WebAppsGetMSDeployStatusResponse>
  - name: >-
      getMSDeployStatus(string, string, RequestOptionsBase,
      ServiceCallback<MSDeployStatus>)
    uid: '@azure/arm-appservice.WebApps.getMSDeployStatus_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployStatus(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: 'getMSDeployStatus(string, string, ServiceCallback<MSDeployStatus>)'
    uid: '@azure/arm-appservice.WebApps.getMSDeployStatus_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployStatus(resourceGroupName: string, name: string,
        callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: 'getMSDeployStatusSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getMSDeployStatusSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get the status of the last MSDeploy operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployStatusSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetMSDeployStatusSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetMSDeployStatusSlotResponse>
  - name: >-
      getMSDeployStatusSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<MSDeployStatus>)
    uid: '@azure/arm-appservice.WebApps.getMSDeployStatusSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployStatusSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      getMSDeployStatusSlot(string, string, string,
      ServiceCallback<MSDeployStatus>)
    uid: '@azure/arm-appservice.WebApps.getMSDeployStatusSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMSDeployStatusSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<MSDeployStatus>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.MSDeployStatus"
            />&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperation(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperation'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperation(resourceGroupName: string, name:
        string, operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetNetworkTraceOperationResponse"
          />&gt;
        description: Promise<Models.WebAppsGetNetworkTraceOperationResponse>
  - name: >-
      getNetworkTraceOperation(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperation_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperation(resourceGroupName: string, name:
        string, operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperation(string, string, string,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperation_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperation(resourceGroupName: string, name:
        string, operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperationSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationSlot(resourceGroupName: string, name:
        string, operationId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetNetworkTraceOperationSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetNetworkTraceOperationSlotResponse>
  - name: >-
      getNetworkTraceOperationSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationSlot(resourceGroupName: string, name:
        string, operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperationSlot(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationSlot(resourceGroupName: string, name:
        string, operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperationSlotV2(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationSlotV2(resourceGroupName: string, name:
        string, operationId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetNetworkTraceOperationSlotV2Response" />&gt;
        description: Promise<Models.WebAppsGetNetworkTraceOperationSlotV2Response>
  - name: >-
      getNetworkTraceOperationSlotV2(string, string, string, string,
      RequestOptionsBase, ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationSlotV2(resourceGroupName: string, name:
        string, operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperationSlotV2(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationSlotV2_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationSlotV2(resourceGroupName: string, name:
        string, operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperationV2(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationV2(resourceGroupName: string, name:
        string, operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetNetworkTraceOperationV2Response" />&gt;
        description: Promise<Models.WebAppsGetNetworkTraceOperationV2Response>
  - name: >-
      getNetworkTraceOperationV2(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationV2(resourceGroupName: string, name:
        string, operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTraceOperationV2(string, string, string,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraceOperationV2_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraceOperationV2(resourceGroupName: string, name:
        string, operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: 'getNetworkTraces(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getNetworkTraces'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraces(resourceGroupName: string, name: string,
        operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetNetworkTracesResponse" />&gt;
        description: Promise<Models.WebAppsGetNetworkTracesResponse>
  - name: >-
      getNetworkTraces(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTraces_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraces(resourceGroupName: string, name: string,
        operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: 'getNetworkTraces(string, string, string, ServiceCallback<NetworkTrace[]>)'
    uid: '@azure/arm-appservice.WebApps.getNetworkTraces_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTraces(resourceGroupName: string, name: string,
        operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTracesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesSlot(resourceGroupName: string, name: string,
        operationId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetNetworkTracesSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetNetworkTracesSlotResponse>
  - name: >-
      getNetworkTracesSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesSlot(resourceGroupName: string, name: string,
        operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTracesSlot(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesSlot(resourceGroupName: string, name: string,
        operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTracesSlotV2(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesSlotV2(resourceGroupName: string, name: string,
        operationId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetNetworkTracesSlotV2Response"
          />&gt;
        description: Promise<Models.WebAppsGetNetworkTracesSlotV2Response>
  - name: >-
      getNetworkTracesSlotV2(string, string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesSlotV2(resourceGroupName: string, name: string,
        operationId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTracesSlotV2(string, string, string, string,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesSlotV2_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesSlotV2(resourceGroupName: string, name: string,
        operationId: string, slot: string, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get an

            operation for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: 'getNetworkTracesV2(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesV2'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a named operation for a network trace capturing (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesV2(resourceGroupName: string, name: string,
        operationId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetNetworkTracesV2Response" />&gt;
        description: Promise<Models.WebAppsGetNetworkTracesV2Response>
  - name: >-
      getNetworkTracesV2(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesV2_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesV2(resourceGroupName: string, name: string,
        operationId: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getNetworkTracesV2(string, string, string,
      ServiceCallback<NetworkTrace[]>)
    uid: '@azure/arm-appservice.WebApps.getNetworkTracesV2_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNetworkTracesV2(resourceGroupName: string, name: string,
        operationId: string, callback: ServiceCallback<NetworkTrace[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: operationId
          type: string
          description: GUID of the operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkTrace"
            />[]&gt;
          description: |
            The callback
  - name: 'getPremierAddOn(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getPremierAddOn'
    package: '@azure/arm-appservice'
    summary: Description for Gets a named add-on of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetPremierAddOnResponse" />&gt;
        description: Promise<Models.WebAppsGetPremierAddOnResponse>
  - name: >-
      getPremierAddOn(string, string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.getPremierAddOn_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, options: RequestOptionsBase, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: 'getPremierAddOn(string, string, string, ServiceCallback<PremierAddOn>)'
    uid: '@azure/arm-appservice.WebApps.getPremierAddOn_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      getPremierAddOnSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getPremierAddOnSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets a named add-on of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            add-on for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetPremierAddOnSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetPremierAddOnSlotResponse>
  - name: >-
      getPremierAddOnSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.getPremierAddOnSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            add-on for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      getPremierAddOnSlot(string, string, string, string,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.getPremierAddOnSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, slot: string, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            add-on for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: 'getPrivateAccess(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getPrivateAccess'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets data around private site access enablement and
      authorized Virtual Networks

      that can access the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateAccess(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetPrivateAccessResponse" />&gt;
        description: Promise<Models.WebAppsGetPrivateAccessResponse>
  - name: >-
      getPrivateAccess(string, string, RequestOptionsBase,
      ServiceCallback<PrivateAccess>)
    uid: '@azure/arm-appservice.WebApps.getPrivateAccess_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateAccess(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: 'getPrivateAccess(string, string, ServiceCallback<PrivateAccess>)'
    uid: '@azure/arm-appservice.WebApps.getPrivateAccess_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateAccess(resourceGroupName: string, name: string,
        callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: 'getPrivateAccessSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getPrivateAccessSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets data around private site access enablement and
      authorized Virtual Networks

      that can access the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateAccessSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetPrivateAccessSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetPrivateAccessSlotResponse>
  - name: >-
      getPrivateAccessSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PrivateAccess>)
    uid: '@azure/arm-appservice.WebApps.getPrivateAccessSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateAccessSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: >-
      getPrivateAccessSlot(string, string, string,
      ServiceCallback<PrivateAccess>)
    uid: '@azure/arm-appservice.WebApps.getPrivateAccessSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateAccessSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: >-
      getPrivateEndpointConnection(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getPrivateEndpointConnection'
    package: '@azure/arm-appservice'
    summary: Description for Gets a private endpoint connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateEndpointConnection(resourceGroupName: string, name:
        string, privateEndpointConnectionName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: privateEndpointConnectionName
          type: string
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetPrivateEndpointConnectionResponse" />&gt;
        description: Promise<Models.WebAppsGetPrivateEndpointConnectionResponse>
  - name: >-
      getPrivateEndpointConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<PrivateEndpointConnectionResource>)
    uid: '@azure/arm-appservice.WebApps.getPrivateEndpointConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateEndpointConnection(resourceGroupName: string, name:
        string, privateEndpointConnectionName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<PrivateEndpointConnectionResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: privateEndpointConnectionName
          type: string
          description: ''
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PrivateEndpointConnectionResource" />&gt;
          description: |
            The callback
  - name: >-
      getPrivateEndpointConnection(string, string, string,
      ServiceCallback<PrivateEndpointConnectionResource>)
    uid: '@azure/arm-appservice.WebApps.getPrivateEndpointConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateEndpointConnection(resourceGroupName: string, name:
        string, privateEndpointConnectionName: string, callback:
        ServiceCallback<PrivateEndpointConnectionResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: privateEndpointConnectionName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PrivateEndpointConnectionResource" />&gt;
          description: |
            The callback
  - name: 'getPrivateLinkResources(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getPrivateLinkResources'
    package: '@azure/arm-appservice'
    summary: Description for Gets the private link resources
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateLinkResources(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetPrivateLinkResourcesResponse"
          />&gt;
        description: Promise<Models.WebAppsGetPrivateLinkResourcesResponse>
  - name: >-
      getPrivateLinkResources(string, string, RequestOptionsBase,
      ServiceCallback<PrivateLinkResourcesWrapper>)
    uid: '@azure/arm-appservice.WebApps.getPrivateLinkResources_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateLinkResources(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<PrivateLinkResourcesWrapper>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PrivateLinkResourcesWrapper" />&gt;
          description: |
            The callback
  - name: >-
      getPrivateLinkResources(string, string,
      ServiceCallback<PrivateLinkResourcesWrapper>)
    uid: '@azure/arm-appservice.WebApps.getPrivateLinkResources_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateLinkResources(resourceGroupName: string, name:
        string, callback: ServiceCallback<PrivateLinkResourcesWrapper>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the site.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PrivateLinkResourcesWrapper" />&gt;
          description: |
            The callback
  - name: 'getProcess(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getProcess'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcess(resourceGroupName: string, name: string, processId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetProcessResponse" />&gt;
        description: Promise<Models.WebAppsGetProcessResponse>
  - name: >-
      getProcess(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfo>)
    uid: '@azure/arm-appservice.WebApps.getProcess_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcess(resourceGroupName: string, name: string, processId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: 'getProcess(string, string, string, ServiceCallback<ProcessInfo>)'
    uid: '@azure/arm-appservice.WebApps.getProcess_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcess(resourceGroupName: string, name: string, processId:
        string, callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: 'getProcessDump(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getProcessDump'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get a memory dump of a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessDump(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetProcessDumpResponse" />&gt;
        description: Promise<Models.WebAppsGetProcessDumpResponse>
  - name: >-
      getProcessDump(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getProcessDump_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessDump(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getProcessDump(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.getProcessDump_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessDump(resourceGroupName: string, name: string,
        processId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getProcessDumpSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getProcessDumpSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get a memory dump of a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessDumpSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetProcessDumpSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetProcessDumpSlotResponse>
  - name: >-
      getProcessDumpSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getProcessDumpSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessDumpSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getProcessDumpSlot(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.getProcessDumpSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessDumpSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getProcessModule(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getProcessModule'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessModule(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetProcessModuleResponse" />&gt;
        description: Promise<Models.WebAppsGetProcessModuleResponse>
  - name: >-
      getProcessModule(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getProcessModule_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessModule(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: >-
      getProcessModule(string, string, string, string,
      ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getProcessModule_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessModule(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: >-
      getProcessModuleSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getProcessModuleSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessModuleSlot(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetProcessModuleSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetProcessModuleSlotResponse>
  - name: >-
      getProcessModuleSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getProcessModuleSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessModuleSlot(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: >-
      getProcessModuleSlot(string, string, string, string, string,
      ServiceCallback<ProcessModuleInfo>)
    uid: '@azure/arm-appservice.WebApps.getProcessModuleSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessModuleSlot(resourceGroupName: string, name: string,
        processId: string, baseAddress: string, slot: string, callback:
        ServiceCallback<ProcessModuleInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: baseAddress
          type: string
          description: Module base address.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfo" />&gt;
          description: |
            The callback
  - name: 'getProcessSlot(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getProcessSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get process information by its ID for a specific
      scaled-out instance in a web

      site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetProcessSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetProcessSlotResponse>
  - name: >-
      getProcessSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfo>)
    uid: '@azure/arm-appservice.WebApps.getProcessSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: >-
      getProcessSlot(string, string, string, string,
      ServiceCallback<ProcessInfo>)
    uid: '@azure/arm-appservice.WebApps.getProcessSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProcessSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback: ServiceCallback<ProcessInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.ProcessInfo"
            />&gt;
          description: |
            The callback
  - name: 'getPublicCertificate(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getPublicCertificate'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the named public certificate for an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPublicCertificate(resourceGroupName: string, name: string,
        publicCertificateName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetPublicCertificateResponse"
          />&gt;
        description: Promise<Models.WebAppsGetPublicCertificateResponse>
  - name: >-
      getPublicCertificate(string, string, string, RequestOptionsBase,
      ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.getPublicCertificate_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPublicCertificate(resourceGroupName: string, name: string,
        publicCertificateName: string, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      getPublicCertificate(string, string, string,
      ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.getPublicCertificate_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPublicCertificate(resourceGroupName: string, name: string,
        publicCertificateName: string, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      getPublicCertificateSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getPublicCertificateSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the named public certificate for an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetPublicCertificateSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetPublicCertificateSlotResponse>
  - name: >-
      getPublicCertificateSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.getPublicCertificateSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, options:
        RequestOptionsBase, callback: ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      getPublicCertificateSlot(string, string, string, string,
      ServiceCallback<PublicCertificate>)
    uid: '@azure/arm-appservice.WebApps.getPublicCertificateSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPublicCertificateSlot(resourceGroupName: string, name:
        string, slot: string, publicCertificateName: string, callback:
        ServiceCallback<PublicCertificate>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API the
            named binding

            for the production slot.
        - id: publicCertificateName
          type: string
          description: Public certificate name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificate" />&gt;
          description: |
            The callback
  - name: >-
      getRelayServiceConnection(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getRelayServiceConnection'
    package: '@azure/arm-appservice'
    summary: Description for Gets a hybrid connection configuration by its name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetRelayServiceConnectionResponse"
          />&gt;
        description: Promise<Models.WebAppsGetRelayServiceConnectionResponse>
  - name: >-
      getRelayServiceConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.getRelayServiceConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      getRelayServiceConnection(string, string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.getRelayServiceConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      getRelayServiceConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets a hybrid connection configuration by its name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRelayServiceConnectionSlot(resourceGroupName: string, name:
        string, entityName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a hybrid

            connection for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetRelayServiceConnectionSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetRelayServiceConnectionSlotResponse>
  - name: >-
      getRelayServiceConnectionSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRelayServiceConnectionSlot(resourceGroupName: string, name:
        string, entityName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a hybrid

            connection for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      getRelayServiceConnectionSlot(string, string, string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.getRelayServiceConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRelayServiceConnectionSlot(resourceGroupName: string, name:
        string, entityName: string, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a hybrid

            connection for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: 'getScmAllowed(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getScmAllowed'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns whether Scm basic auth is allowed on the site or
      not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getScmAllowed(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetScmAllowedResponse" />&gt;
        description: Promise<Models.WebAppsGetScmAllowedResponse>
  - name: >-
      getScmAllowed(string, string, RequestOptionsBase,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.getScmAllowed_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getScmAllowed(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: >-
      getScmAllowed(string, string,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.getScmAllowed_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getScmAllowed(resourceGroupName: string, name: string,
        callback: ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: 'getSiteExtension(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getSiteExtension'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get site extension information by its ID for a web site,
      or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetSiteExtensionResponse" />&gt;
        description: Promise<Models.WebAppsGetSiteExtensionResponse>
  - name: >-
      getSiteExtension(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfo>)
    uid: '@azure/arm-appservice.WebApps.getSiteExtension_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfo" />&gt;
          description: |
            The callback
  - name: >-
      getSiteExtension(string, string, string,
      ServiceCallback<SiteExtensionInfo>)
    uid: '@azure/arm-appservice.WebApps.getSiteExtension_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, callback: ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfo" />&gt;
          description: |
            The callback
  - name: >-
      getSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getSiteExtensionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get site extension information by its ID for a web site,
      or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSiteExtensionSlot(resourceGroupName: string, name: string,
        siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetSiteExtensionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetSiteExtensionSlotResponse>
  - name: >-
      getSiteExtensionSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfo>)
    uid: '@azure/arm-appservice.WebApps.getSiteExtensionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSiteExtensionSlot(resourceGroupName: string, name: string,
        siteExtensionId: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfo" />&gt;
          description: |
            The callback
  - name: >-
      getSiteExtensionSlot(string, string, string, string,
      ServiceCallback<SiteExtensionInfo>)
    uid: '@azure/arm-appservice.WebApps.getSiteExtensionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSiteExtensionSlot(resourceGroupName: string, name: string,
        siteExtensionId: string, slot: string, callback:
        ServiceCallback<SiteExtensionInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfo" />&gt;
          description: |
            The callback
  - name: 'getSitePhpErrorLogFlag(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag'
    package: '@azure/arm-appservice'
    summary: Description for Gets web app's event logs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSitePhpErrorLogFlag(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetSitePhpErrorLogFlagResponse"
          />&gt;
        description: Promise<Models.WebAppsGetSitePhpErrorLogFlagResponse>
  - name: >-
      getSitePhpErrorLogFlag(string, string, RequestOptionsBase,
      ServiceCallback<SitePhpErrorLogFlag>)
    uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSitePhpErrorLogFlag(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SitePhpErrorLogFlag" />&gt;
          description: |
            The callback
  - name: >-
      getSitePhpErrorLogFlag(string, string,
      ServiceCallback<SitePhpErrorLogFlag>)
    uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlag_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSitePhpErrorLogFlag(resourceGroupName: string, name: string,
        callback: ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SitePhpErrorLogFlag" />&gt;
          description: |
            The callback
  - name: >-
      getSitePhpErrorLogFlagSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets web app's event logs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSitePhpErrorLogFlagSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetSitePhpErrorLogFlagSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetSitePhpErrorLogFlagSlotResponse>
  - name: >-
      getSitePhpErrorLogFlagSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SitePhpErrorLogFlag>)
    uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSitePhpErrorLogFlagSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SitePhpErrorLogFlag" />&gt;
          description: |
            The callback
  - name: >-
      getSitePhpErrorLogFlagSlot(string, string, string,
      ServiceCallback<SitePhpErrorLogFlag>)
    uid: '@azure/arm-appservice.WebApps.getSitePhpErrorLogFlagSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSitePhpErrorLogFlagSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<SitePhpErrorLogFlag>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SitePhpErrorLogFlag" />&gt;
          description: |
            The callback
  - name: 'getSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Gets the details of a web, mobile, or API app.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSlot(resourceGroupName: string, name: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. By default, this API returns the
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetSlotResponse>
  - name: 'getSlot(string, string, string, RequestOptionsBase, ServiceCallback<Site>)'
    uid: '@azure/arm-appservice.WebApps.getSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSlot(resourceGroupName: string, name: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. By default, this API returns the
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: 'getSlot(string, string, string, ServiceCallback<Site>)'
    uid: '@azure/arm-appservice.WebApps.getSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSlot(resourceGroupName: string, name: string, slot: string,
        callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. By default, this API returns the
            production slot.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: 'getSourceControl(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getSourceControl'
    package: '@azure/arm-appservice'
    summary: Description for Gets the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSourceControl(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetSourceControlResponse" />&gt;
        description: Promise<Models.WebAppsGetSourceControlResponse>
  - name: >-
      getSourceControl(string, string, RequestOptionsBase,
      ServiceCallback<SiteSourceControl>)
    uid: '@azure/arm-appservice.WebApps.getSourceControl_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSourceControl(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: 'getSourceControl(string, string, ServiceCallback<SiteSourceControl>)'
    uid: '@azure/arm-appservice.WebApps.getSourceControl_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSourceControl(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: 'getSourceControlSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getSourceControlSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSourceControlSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the source

            control configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetSourceControlSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetSourceControlSlotResponse>
  - name: >-
      getSourceControlSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteSourceControl>)
    uid: '@azure/arm-appservice.WebApps.getSourceControlSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSourceControlSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the source

            control configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: >-
      getSourceControlSlot(string, string, string,
      ServiceCallback<SiteSourceControl>)
    uid: '@azure/arm-appservice.WebApps.getSourceControlSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSourceControlSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the source

            control configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: >-
      getSwiftVirtualNetworkConnection(string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection'
    package: '@azure/arm-appservice'
    summary: Description for Gets a Swift Virtual Network connection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetSwiftVirtualNetworkConnectionResponse" />&gt;
        description: Promise<Models.WebAppsGetSwiftVirtualNetworkConnectionResponse>
  - name: >-
      getSwiftVirtualNetworkConnection(string, string, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      getSwiftVirtualNetworkConnection(string, string,
      ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      getSwiftVirtualNetworkConnectionSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets a Swift Virtual Network connection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnectionSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetSwiftVirtualNetworkConnectionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetSwiftVirtualNetworkConnectionSlotResponse>
  - name: >-
      getSwiftVirtualNetworkConnectionSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnectionSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      getSwiftVirtualNetworkConnectionSlot(string, string, string,
      ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.getSwiftVirtualNetworkConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSwiftVirtualNetworkConnectionSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: 'getTriggeredWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJob'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a triggered web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetTriggeredWebJobResponse" />&gt;
        description: Promise<Models.WebAppsGetTriggeredWebJobResponse>
  - name: >-
      getTriggeredWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJob>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.TriggeredWebJob"
            />&gt;
          description: |
            The callback
  - name: >-
      getTriggeredWebJob(string, string, string,
      ServiceCallback<TriggeredWebJob>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.TriggeredWebJob"
            />&gt;
          description: |
            The callback
  - name: >-
      getTriggeredWebJobHistory(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a triggered web job's history by its ID for an app, ,
      or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, id: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: id
          type: string
          description: History ID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetTriggeredWebJobHistoryResponse"
          />&gt;
        description: Promise<Models.WebAppsGetTriggeredWebJobHistoryResponse>
  - name: >-
      getTriggeredWebJobHistory(string, string, string, string,
      RequestOptionsBase, ServiceCallback<TriggeredJobHistory>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, id: string, options: RequestOptionsBase,
        callback: ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: id
          type: string
          description: History ID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistory" />&gt;
          description: |
            The callback
  - name: >-
      getTriggeredWebJobHistory(string, string, string, string,
      ServiceCallback<TriggeredJobHistory>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistory_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, id: string, callback:
        ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: id
          type: string
          description: History ID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistory" />&gt;
          description: |
            The callback
  - name: >-
      getTriggeredWebJobHistorySlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a triggered web job's history by its ID for an app, ,
      or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, id: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: id
          type: string
          description: History ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetTriggeredWebJobHistorySlotResponse" />&gt;
        description: Promise<Models.WebAppsGetTriggeredWebJobHistorySlotResponse>
  - name: >-
      getTriggeredWebJobHistorySlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<TriggeredJobHistory>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, id: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: id
          type: string
          description: History ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistory" />&gt;
          description: |
            The callback
  - name: >-
      getTriggeredWebJobHistorySlot(string, string, string, string, string,
      ServiceCallback<TriggeredJobHistory>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobHistorySlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, id: string, slot: string, callback:
        ServiceCallback<TriggeredJobHistory>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: id
          type: string
          description: History ID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistory" />&gt;
          description: |
            The callback
  - name: >-
      getTriggeredWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a triggered web job by its ID for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetTriggeredWebJobSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetTriggeredWebJobSlotResponse>
  - name: >-
      getTriggeredWebJobSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJob>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.TriggeredWebJob"
            />&gt;
          description: |
            The callback
  - name: >-
      getTriggeredWebJobSlot(string, string, string, string,
      ServiceCallback<TriggeredWebJob>)
    uid: '@azure/arm-appservice.WebApps.getTriggeredWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, callback:
        ServiceCallback<TriggeredWebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.TriggeredWebJob"
            />&gt;
          description: |
            The callback
  - name: 'getVnetConnection(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getVnetConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a virtual network the app (or deployment slot) is
      connected to by name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetVnetConnectionResponse" />&gt;
        description: Promise<Models.WebAppsGetVnetConnectionResponse>
  - name: >-
      getVnetConnection(string, string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.getVnetConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: 'getVnetConnection(string, string, string, ServiceCallback<VnetInfo>)'
    uid: '@azure/arm-appservice.WebApps.getVnetConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      getVnetConnectionGateway(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionGateway'
    package: '@azure/arm-appservice'
    summary: Description for Gets an app's Virtual Network gateway.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetVnetConnectionGatewayResponse"
          />&gt;
        description: Promise<Models.WebAppsGetVnetConnectionGatewayResponse>
  - name: >-
      getVnetConnectionGateway(string, string, string, string,
      RequestOptionsBase, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionGateway_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, options:
        RequestOptionsBase, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      getVnetConnectionGateway(string, string, string, string,
      ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionGateway_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      getVnetConnectionGatewaySlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets an app's Virtual Network gateway.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionGatewaySlot(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetVnetConnectionGatewaySlotResponse" />&gt;
        description: Promise<Models.WebAppsGetVnetConnectionGatewaySlotResponse>
  - name: >-
      getVnetConnectionGatewaySlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionGatewaySlot(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      getVnetConnectionGatewaySlot(string, string, string, string, string,
      ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionGatewaySlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionGatewaySlot(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, slot: string, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get a gateway

            for the production slot's Virtual Network.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      getVnetConnectionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a virtual network the app (or deployment slot) is
      connected to by name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionSlot(resourceGroupName: string, name: string,
        vnetName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            virtual network for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetVnetConnectionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsGetVnetConnectionSlotResponse>
  - name: >-
      getVnetConnectionSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionSlot(resourceGroupName: string, name: string,
        vnetName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            virtual network for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      getVnetConnectionSlot(string, string, string, string,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.getVnetConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getVnetConnectionSlot(resourceGroupName: string, name: string,
        vnetName: string, slot: string, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the virtual network.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the named

            virtual network for the production slot.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: 'getWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getWebJob'
    package: '@azure/arm-appservice'
    summary: 'Description for Get webjob information for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebJob(resourceGroupName: string, name: string, webJobName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of the web job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetWebJobResponse" />&gt;
        description: Promise<Models.WebAppsGetWebJobResponse>
  - name: >-
      getWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<WebJob>)
    uid: '@azure/arm-appservice.WebApps.getWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebJob(resourceGroupName: string, name: string, webJobName:
        string, options: RequestOptionsBase, callback: ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of the web job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.WebJob" />&gt;
          description: |
            The callback
  - name: 'getWebJob(string, string, string, ServiceCallback<WebJob>)'
    uid: '@azure/arm-appservice.WebApps.getWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebJob(resourceGroupName: string, name: string, webJobName:
        string, callback: ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of the web job.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.WebJob" />&gt;
          description: |
            The callback
  - name: 'getWebJobSlot(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getWebJobSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Get webjob information for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of the web job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsGetWebJobSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetWebJobSlotResponse>
  - name: >-
      getWebJobSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<WebJob>)
    uid: '@azure/arm-appservice.WebApps.getWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of the web job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.WebJob" />&gt;
          description: |
            The callback
  - name: 'getWebJobSlot(string, string, string, string, ServiceCallback<WebJob>)'
    uid: '@azure/arm-appservice.WebApps.getWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, callback: ServiceCallback<WebJob>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of the web job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.WebJob" />&gt;
          description: |
            The callback
  - name: 'getWebSiteContainerLogs(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogs'
    package: '@azure/arm-appservice'
    summary: Description for Gets the last lines of docker logs for the given site
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebSiteContainerLogs(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsGetWebSiteContainerLogsResponse"
          />&gt;
        description: Promise<Models.WebAppsGetWebSiteContainerLogsResponse>
  - name: >-
      getWebSiteContainerLogs(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogs_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebSiteContainerLogs(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getWebSiteContainerLogs(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogs_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebSiteContainerLogs(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getWebSiteContainerLogsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the last lines of docker logs for the given site
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebSiteContainerLogsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsGetWebSiteContainerLogsSlotResponse" />&gt;
        description: Promise<Models.WebAppsGetWebSiteContainerLogsSlotResponse>
  - name: >-
      getWebSiteContainerLogsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebSiteContainerLogsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getWebSiteContainerLogsSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.getWebSiteContainerLogsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWebSiteContainerLogsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'installSiteExtension(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.installSiteExtension'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Install site extension on a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function installSiteExtension(resourceGroupName: string, name: string,
        siteExtensionId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsInstallSiteExtensionResponse"
          />&gt;
        description: Promise<Models.WebAppsInstallSiteExtensionResponse>
  - name: >-
      installSiteExtensionSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.installSiteExtensionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Install site extension on a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function installSiteExtensionSlot(resourceGroupName: string, name:
        string, siteExtensionId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: siteExtensionId
          type: string
          description: Site extension name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsInstallSiteExtensionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsInstallSiteExtensionSlotResponse>
  - name: 'isCloneable(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.isCloneable'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Shows whether an app can be cloned to another resource
      group or subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function isCloneable(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsIsCloneableResponse" />&gt;
        description: Promise<Models.WebAppsIsCloneableResponse>
  - name: >-
      isCloneable(string, string, RequestOptionsBase,
      ServiceCallback<SiteCloneability>)
    uid: '@azure/arm-appservice.WebApps.isCloneable_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function isCloneable(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteCloneability" />&gt;
          description: |
            The callback
  - name: 'isCloneable(string, string, ServiceCallback<SiteCloneability>)'
    uid: '@azure/arm-appservice.WebApps.isCloneable_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function isCloneable(resourceGroupName: string, name: string, callback:
        ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteCloneability" />&gt;
          description: |
            The callback
  - name: 'isCloneableSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.isCloneableSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Shows whether an app can be cloned to another resource
      group or subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function isCloneableSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. By default, this API returns
            information on the

            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsIsCloneableSlotResponse" />&gt;
        description: Promise<Models.WebAppsIsCloneableSlotResponse>
  - name: >-
      isCloneableSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteCloneability>)
    uid: '@azure/arm-appservice.WebApps.isCloneableSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function isCloneableSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. By default, this API returns
            information on the

            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteCloneability" />&gt;
          description: |
            The callback
  - name: 'isCloneableSlot(string, string, string, ServiceCallback<SiteCloneability>)'
    uid: '@azure/arm-appservice.WebApps.isCloneableSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function isCloneableSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<SiteCloneability>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. By default, this API returns
            information on the

            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteCloneability" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.list'
    package: '@azure/arm-appservice'
    summary: Description for Get all apps for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListResponse" />&gt;
        description: Promise<Models.WebAppsListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<WebAppCollection>)'
    uid: '@azure/arm-appservice.WebApps.list_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<WebAppCollection>)
    uid: '@azure/arm-appservice.WebApps.list_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<WebAppCollection>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: 'listApplicationSettings(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listApplicationSettings'
    package: '@azure/arm-appservice'
    summary: Description for Gets the application settings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listApplicationSettings(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListApplicationSettingsResponse"
          />&gt;
        description: Promise<Models.WebAppsListApplicationSettingsResponse>
  - name: >-
      listApplicationSettings(string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listApplicationSettings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listApplicationSettings(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: 'listApplicationSettings(string, string, ServiceCallback<StringDictionary>)'
    uid: '@azure/arm-appservice.WebApps.listApplicationSettings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listApplicationSettings(resourceGroupName: string, name:
        string, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listApplicationSettingsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listApplicationSettingsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the application settings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listApplicationSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            application settings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListApplicationSettingsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListApplicationSettingsSlotResponse>
  - name: >-
      listApplicationSettingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listApplicationSettingsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listApplicationSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            application settings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listApplicationSettingsSlot(string, string, string,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listApplicationSettingsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listApplicationSettingsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            application settings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: 'listAzureStorageAccounts(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listAzureStorageAccounts'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Azure storage account configurations of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAzureStorageAccounts(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListAzureStorageAccountsResponse"
          />&gt;
        description: Promise<Models.WebAppsListAzureStorageAccountsResponse>
  - name: >-
      listAzureStorageAccounts(string, string, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.listAzureStorageAccounts_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAzureStorageAccounts(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: >-
      listAzureStorageAccounts(string, string,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.listAzureStorageAccounts_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAzureStorageAccounts(resourceGroupName: string, name:
        string, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: >-
      listAzureStorageAccountsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Azure storage account configurations of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListAzureStorageAccountsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListAzureStorageAccountsSlotResponse>
  - name: >-
      listAzureStorageAccountsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: >-
      listAzureStorageAccountsSlot(string, string, string,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.listAzureStorageAccountsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: 'listBackups(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listBackups'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackups(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListBackupsResponse" />&gt;
        description: Promise<Models.WebAppsListBackupsResponse>
  - name: >-
      listBackups(string, string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listBackups_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackups(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listBackups(string, string, ServiceCallback<BackupItemCollection>)'
    uid: '@azure/arm-appservice.WebApps.listBackups_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackups(resourceGroupName: string, name: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listBackupsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listBackupsNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListBackupsNextResponse" />&gt;
        description: Promise<Models.WebAppsListBackupsNextResponse>
  - name: >-
      listBackupsNext(string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listBackupsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listBackupsNext(string, ServiceCallback<BackupItemCollection>)'
    uid: '@azure/arm-appservice.WebApps.listBackupsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsNext(nextPageLink: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listBackupsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listBackupsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListBackupsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListBackupsSlotResponse>
  - name: >-
      listBackupsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listBackupsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: >-
      listBackupsSlot(string, string, string,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listBackupsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listBackupsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listBackupsSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListBackupsSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListBackupsSlotNextResponse>
  - name: >-
      listBackupsSlotNext(string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listBackupsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listBackupsSlotNext(string, ServiceCallback<BackupItemCollection>)'
    uid: '@azure/arm-appservice.WebApps.listBackupsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupsSlotNext(nextPageLink: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: >-
      listBackupStatusSecrets(string, string, string, BackupRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listBackupStatusSecrets'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets status of a web app backup that may be in progress,
      including secrets

      associated with the backup, such as the Azure Storage SAS URL. Also can be
      used to update the

      SAS URL for the backup if a new URL is passed in the request body.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupStatusSecrets(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: backupId
          type: string
          description: ID of backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Information on backup request.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListBackupStatusSecretsResponse"
          />&gt;
        description: Promise<Models.WebAppsListBackupStatusSecretsResponse>
  - name: >-
      listBackupStatusSecrets(string, string, string, BackupRequest,
      RequestOptionsBase, ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.listBackupStatusSecrets_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupStatusSecrets(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: backupId
          type: string
          description: ID of backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Information on backup request.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      listBackupStatusSecrets(string, string, string, BackupRequest,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.listBackupStatusSecrets_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupStatusSecrets(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, callback:
        ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: backupId
          type: string
          description: ID of backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Information on backup request.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      listBackupStatusSecretsSlot(string, string, string, BackupRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets status of a web app backup that may be in progress,
      including secrets

      associated with the backup, such as the Azure Storage SAS URL. Also can be
      used to update the

      SAS URL for the backup if a new URL is passed in the request body.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupStatusSecretsSlot(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: backupId
          type: string
          description: ID of backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Information on backup request.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListBackupStatusSecretsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListBackupStatusSecretsSlotResponse>
  - name: >-
      listBackupStatusSecretsSlot(string, string, string, BackupRequest, string,
      RequestOptionsBase, ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupStatusSecretsSlot(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: backupId
          type: string
          description: ID of backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Information on backup request.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      listBackupStatusSecretsSlot(string, string, string, BackupRequest, string,
      ServiceCallback<BackupItem>)
    uid: '@azure/arm-appservice.WebApps.listBackupStatusSecretsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBackupStatusSecretsSlot(resourceGroupName: string, name:
        string, backupId: string, request: BackupRequest, slot: string,
        callback: ServiceCallback<BackupItem>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: backupId
          type: string
          description: ID of backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Information on backup request.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupItem"
            />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string,
      Models.WebAppsListByResourceGroupOptionalParams)
    uid: '@azure/arm-appservice.WebApps.listByResourceGroup'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets all web, mobile, and API apps in the specified
      resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.WebAppsListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type: <xref uid="Models.WebAppsListByResourceGroupOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListByResourceGroupResponse"
          />&gt;
        description: Promise<Models.WebAppsListByResourceGroupResponse>
  - name: 'listByResourceGroup(string, ServiceCallback<WebAppCollection>)'
    uid: '@azure/arm-appservice.WebApps.listByResourceGroup_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string, WebAppsListByResourceGroupOptionalParams,
      ServiceCallback<WebAppCollection>)
    uid: '@azure/arm-appservice.WebApps.listByResourceGroup_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        WebAppsListByResourceGroupOptionalParams, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListByResourceGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupNext(string,
      Models.WebAppsListByResourceGroupNextOptionalParams)
    uid: '@azure/arm-appservice.WebApps.listByResourceGroupNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets all web, mobile, and API apps in the specified
      resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        Models.WebAppsListByResourceGroupNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.WebAppsListByResourceGroupNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListByResourceGroupNextResponse>
  - name: 'listByResourceGroupNext(string, ServiceCallback<WebAppCollection>)'
    uid: '@azure/arm-appservice.WebApps.listByResourceGroupNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupNext(string,
      WebAppsListByResourceGroupNextOptionalParams,
      ServiceCallback<WebAppCollection>)
    uid: '@azure/arm-appservice.WebApps.listByResourceGroupNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        WebAppsListByResourceGroupNextOptionalParams, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListByResourceGroupNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: 'listConfigurations(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConfigurations'
    package: '@azure/arm-appservice'
    summary: Description for List the configurations of an app
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurations(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListConfigurationsResponse" />&gt;
        description: Promise<Models.WebAppsListConfigurationsResponse>
  - name: >-
      listConfigurations(string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurations_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurations(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listConfigurations(string, string,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurations_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurations(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: 'listConfigurationSnapshotInfo(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a list of web app configuration snapshots
      identifiers. Each element of the

      list contains a timestamp and the ID of the snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfo(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListConfigurationSnapshotInfoResponse" />&gt;
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoResponse>
  - name: >-
      listConfigurationSnapshotInfo(string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfo(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationSnapshotInfo(string, string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfo_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfo(resourceGroupName: string, name:
        string, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: 'listConfigurationSnapshotInfoNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a list of web app configuration snapshots
      identifiers. Each element of the

      list contains a timestamp and the ID of the snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListConfigurationSnapshotInfoNextResponse" />&gt;
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoNextResponse>
  - name: >-
      listConfigurationSnapshotInfoNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationSnapshotInfoNext(string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoNext(nextPageLink: string,
        callback: ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationSnapshotInfoSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a list of web app configuration snapshots
      identifiers. Each element of the

      list contains a timestamp and the ID of the snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListConfigurationSnapshotInfoSlotResponse" />&gt;
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoSlotResponse>
  - name: >-
      listConfigurationSnapshotInfoSlot(string, string, string,
      RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationSnapshotInfoSlot(string, string, string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: 'listConfigurationSnapshotInfoSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets a list of web app configuration snapshots
      identifiers. Each element of the

      list contains a timestamp and the ID of the snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListConfigurationSnapshotInfoSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListConfigurationSnapshotInfoSlotNextResponse>
  - name: >-
      listConfigurationSnapshotInfoSlotNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationSnapshotInfoSlotNext(string,
      ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationSnapshotInfoSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationSnapshotInfoSlotNext(nextPageLink: string,
        callback: ServiceCallback<SiteConfigurationSnapshotInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigurationSnapshotInfoCollection"
            />&gt;
          description: |
            The callback
  - name: 'listConfigurationsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConfigurationsNext'
    package: '@azure/arm-appservice'
    summary: Description for List the configurations of an app
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListConfigurationsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListConfigurationsNextResponse>
  - name: >-
      listConfigurationsNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationsNext(string,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsNext(nextPageLink: string, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: 'listConfigurationsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConfigurationsSlot'
    package: '@azure/arm-appservice'
    summary: Description for List the configurations of an app
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListConfigurationsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListConfigurationsSlotResponse>
  - name: >-
      listConfigurationsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationsSlot(string, string, string,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: 'listConfigurationsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConfigurationsSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for List the configurations of an app
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListConfigurationsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListConfigurationsSlotNextResponse>
  - name: >-
      listConfigurationsSlotNext(string, RequestOptionsBase,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listConfigurationsSlotNext(string,
      ServiceCallback<SiteConfigResourceCollection>)
    uid: '@azure/arm-appservice.WebApps.listConfigurationsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConfigurationsSlotNext(nextPageLink: string, callback:
        ServiceCallback<SiteConfigResourceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResourceCollection" />&gt;
          description: |
            The callback
  - name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listConnectionStrings'
    package: '@azure/arm-appservice'
    summary: Description for Gets the connection strings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListConnectionStringsResponse"
          />&gt;
        description: Promise<Models.WebAppsListConnectionStringsResponse>
  - name: >-
      listConnectionStrings(string, string, RequestOptionsBase,
      ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listConnectionStrings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listConnectionStrings(string, string,
      ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listConnectionStrings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, name: string,
        callback: ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listConnectionStringsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listConnectionStringsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the connection strings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStringsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            connection settings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListConnectionStringsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListConnectionStringsSlotResponse>
  - name: >-
      listConnectionStringsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listConnectionStringsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStringsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            connection settings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listConnectionStringsSlot(string, string, string,
      ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listConnectionStringsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStringsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            connection settings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: 'listContinuousWebJobs(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobs'
    package: '@azure/arm-appservice'
    summary: 'Description for List continuous web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobs(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListContinuousWebJobsResponse"
          />&gt;
        description: Promise<Models.WebAppsListContinuousWebJobsResponse>
  - name: >-
      listContinuousWebJobs(string, string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobs_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobs(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listContinuousWebJobs(string, string,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobs_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobs(resourceGroupName: string, name: string,
        callback: ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listContinuousWebJobsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List continuous web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListContinuousWebJobsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListContinuousWebJobsNextResponse>
  - name: >-
      listContinuousWebJobsNext(string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listContinuousWebJobsNext(string,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsNext(nextPageLink: string, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listContinuousWebJobsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for List continuous web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListContinuousWebJobsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListContinuousWebJobsSlotResponse>
  - name: >-
      listContinuousWebJobsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listContinuousWebJobsSlot(string, string, string,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listContinuousWebJobsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List continuous web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListContinuousWebJobsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListContinuousWebJobsSlotNextResponse>
  - name: >-
      listContinuousWebJobsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listContinuousWebJobsSlotNext(string,
      ServiceCallback<ContinuousWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listContinuousWebJobsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listContinuousWebJobsSlotNext(nextPageLink: string, callback:
        ServiceCallback<ContinuousWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ContinuousWebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listDeploymentLog(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDeploymentLog'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List deployment log for specific deployment for an app, or
      a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentLog(resourceGroupName: string, name: string, id:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListDeploymentLogResponse" />&gt;
        description: Promise<Models.WebAppsListDeploymentLogResponse>
  - name: >-
      listDeploymentLog(string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.listDeploymentLog_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentLog(resourceGroupName: string, name: string, id:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: 'listDeploymentLog(string, string, string, ServiceCallback<Deployment>)'
    uid: '@azure/arm-appservice.WebApps.listDeploymentLog_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentLog(resourceGroupName: string, name: string, id:
        string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      listDeploymentLogSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listDeploymentLogSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List deployment log for specific deployment for an app, or
      a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentLogSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListDeploymentLogSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListDeploymentLogSlotResponse>
  - name: >-
      listDeploymentLogSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.listDeploymentLogSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentLogSlot(resourceGroupName: string, name: string,
        id: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: >-
      listDeploymentLogSlot(string, string, string, string,
      ServiceCallback<Deployment>)
    uid: '@azure/arm-appservice.WebApps.listDeploymentLogSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentLogSlot(resourceGroupName: string, name: string,
        id: string, slot: string, callback: ServiceCallback<Deployment>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: id
          type: string
          description: >-
            The ID of a specific deployment. This is the value of the name
            property in the JSON

            response from "GET /api/sites/{siteName}/deployments".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Deployment"
            />&gt;
          description: |
            The callback
  - name: 'listDeployments(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDeployments'
    package: '@azure/arm-appservice'
    summary: 'Description for List deployments for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeployments(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListDeploymentsResponse" />&gt;
        description: Promise<Models.WebAppsListDeploymentsResponse>
  - name: >-
      listDeployments(string, string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    uid: '@azure/arm-appservice.WebApps.listDeployments_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeployments(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: 'listDeployments(string, string, ServiceCallback<DeploymentCollection>)'
    uid: '@azure/arm-appservice.WebApps.listDeployments_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeployments(resourceGroupName: string, name: string,
        callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: 'listDeploymentsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDeploymentsNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List deployments for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListDeploymentsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListDeploymentsNextResponse>
  - name: >-
      listDeploymentsNext(string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    uid: '@azure/arm-appservice.WebApps.listDeploymentsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: 'listDeploymentsNext(string, ServiceCallback<DeploymentCollection>)'
    uid: '@azure/arm-appservice.WebApps.listDeploymentsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsNext(nextPageLink: string, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: 'listDeploymentsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDeploymentsSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for List deployments for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListDeploymentsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListDeploymentsSlotResponse>
  - name: >-
      listDeploymentsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    uid: '@azure/arm-appservice.WebApps.listDeploymentsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: >-
      listDeploymentsSlot(string, string, string,
      ServiceCallback<DeploymentCollection>)
    uid: '@azure/arm-appservice.WebApps.listDeploymentsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: 'listDeploymentsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDeploymentsSlotNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List deployments for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListDeploymentsSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListDeploymentsSlotNextResponse>
  - name: >-
      listDeploymentsSlotNext(string, RequestOptionsBase,
      ServiceCallback<DeploymentCollection>)
    uid: '@azure/arm-appservice.WebApps.listDeploymentsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: 'listDeploymentsSlotNext(string, ServiceCallback<DeploymentCollection>)'
    uid: '@azure/arm-appservice.WebApps.listDeploymentsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeploymentsSlotNext(nextPageLink: string, callback:
        ServiceCallback<DeploymentCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.DeploymentCollection" />&gt;
          description: |
            The callback
  - name: 'listDomainOwnershipIdentifiers(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Lists ownership identifiers for domain associated with web
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiers(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListDomainOwnershipIdentifiersResponse" />&gt;
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersResponse>
  - name: >-
      listDomainOwnershipIdentifiers(string, string, RequestOptionsBase,
      ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiers(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: >-
      listDomainOwnershipIdentifiers(string, string,
      ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiers_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiers(resourceGroupName: string, name:
        string, callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: 'listDomainOwnershipIdentifiersNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Lists ownership identifiers for domain associated with web
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListDomainOwnershipIdentifiersNextResponse" />&gt;
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersNextResponse>
  - name: >-
      listDomainOwnershipIdentifiersNext(string, RequestOptionsBase,
      ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: >-
      listDomainOwnershipIdentifiersNext(string,
      ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersNext(nextPageLink: string,
        callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: >-
      listDomainOwnershipIdentifiersSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Lists ownership identifiers for domain associated with web
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListDomainOwnershipIdentifiersSlotResponse" />&gt;
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersSlotResponse>
  - name: >-
      listDomainOwnershipIdentifiersSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: >-
      listDomainOwnershipIdentifiersSlot(string, string, string,
      ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: 'listDomainOwnershipIdentifiersSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Lists ownership identifiers for domain associated with web
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListDomainOwnershipIdentifiersSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListDomainOwnershipIdentifiersSlotNextResponse>
  - name: >-
      listDomainOwnershipIdentifiersSlotNext(string, RequestOptionsBase,
      ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: >-
      listDomainOwnershipIdentifiersSlotNext(string,
      ServiceCallback<IdentifierCollection>)
    uid: '@azure/arm-appservice.WebApps.listDomainOwnershipIdentifiersSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDomainOwnershipIdentifiersSlotNext(nextPageLink: string,
        callback: ServiceCallback<IdentifierCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.IdentifierCollection" />&gt;
          description: |
            The callback
  - name: 'listFunctionKeys(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listFunctionKeys'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get function keys for a function in a web site, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionKeys(resourceGroupName: string, name: string,
        functionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListFunctionKeysResponse" />&gt;
        description: Promise<Models.WebAppsListFunctionKeysResponse>
  - name: >-
      listFunctionKeys(string, string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listFunctionKeys_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionKeys(resourceGroupName: string, name: string,
        functionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listFunctionKeys(string, string, string,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listFunctionKeys_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionKeys(resourceGroupName: string, name: string,
        functionName: string, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listFunctionKeysSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listFunctionKeysSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get function keys for a function in a web site, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionKeysSlot(resourceGroupName: string, name: string,
        functionName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListFunctionKeysSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListFunctionKeysSlotResponse>
  - name: >-
      listFunctionKeysSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listFunctionKeysSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionKeysSlot(resourceGroupName: string, name: string,
        functionName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listFunctionKeysSlot(string, string, string, string,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listFunctionKeysSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionKeysSlot(resourceGroupName: string, name: string,
        functionName: string, slot: string, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: 'listFunctions(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listFunctions'
    package: '@azure/arm-appservice'
    summary: 'Description for List the functions for a web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctions(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListFunctionsResponse" />&gt;
        description: Promise<Models.WebAppsListFunctionsResponse>
  - name: >-
      listFunctions(string, string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    uid: '@azure/arm-appservice.WebApps.listFunctions_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctions(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: 'listFunctions(string, string, ServiceCallback<FunctionEnvelopeCollection>)'
    uid: '@azure/arm-appservice.WebApps.listFunctions_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctions(resourceGroupName: string, name: string,
        callback: ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: 'listFunctionSecrets(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listFunctionSecrets'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get function secrets for a function in a web site, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionSecrets(resourceGroupName: string, name: string,
        functionName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListFunctionSecretsResponse"
          />&gt;
        description: Promise<Models.WebAppsListFunctionSecretsResponse>
  - name: >-
      listFunctionSecrets(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionSecrets>)
    uid: '@azure/arm-appservice.WebApps.listFunctionSecrets_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionSecrets(resourceGroupName: string, name: string,
        functionName: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: >-
      listFunctionSecrets(string, string, string,
      ServiceCallback<FunctionSecrets>)
    uid: '@azure/arm-appservice.WebApps.listFunctionSecrets_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionSecrets(resourceGroupName: string, name: string,
        functionName: string, callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: >-
      listFunctionSecretsSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listFunctionSecretsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get function secrets for a function in a web site, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionSecretsSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListFunctionSecretsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListFunctionSecretsSlotResponse>
  - name: >-
      listFunctionSecretsSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<FunctionSecrets>)
    uid: '@azure/arm-appservice.WebApps.listFunctionSecretsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionSecretsSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: >-
      listFunctionSecretsSlot(string, string, string, string,
      ServiceCallback<FunctionSecrets>)
    uid: '@azure/arm-appservice.WebApps.listFunctionSecretsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionSecretsSlot(resourceGroupName: string, name:
        string, functionName: string, slot: string, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: functionName
          type: string
          description: Function name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: 'listFunctionsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listFunctionsNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List the functions for a web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListFunctionsNextResponse" />&gt;
        description: Promise<Models.WebAppsListFunctionsNextResponse>
  - name: >-
      listFunctionsNext(string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    uid: '@azure/arm-appservice.WebApps.listFunctionsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: 'listFunctionsNext(string, ServiceCallback<FunctionEnvelopeCollection>)'
    uid: '@azure/arm-appservice.WebApps.listFunctionsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listFunctionsNext(nextPageLink: string, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: 'listHostKeys(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listHostKeys'
    package: '@azure/arm-appservice'
    summary: Description for Get host secrets for a function app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostKeys(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListHostKeysResponse" />&gt;
        description: Promise<Models.WebAppsListHostKeysResponse>
  - name: >-
      listHostKeys(string, string, RequestOptionsBase,
      ServiceCallback<HostKeys>)
    uid: '@azure/arm-appservice.WebApps.listHostKeys_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostKeys(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<HostKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostKeys" />&gt;
          description: |
            The callback
  - name: 'listHostKeys(string, string, ServiceCallback<HostKeys>)'
    uid: '@azure/arm-appservice.WebApps.listHostKeys_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostKeys(resourceGroupName: string, name: string, callback:
        ServiceCallback<HostKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostKeys" />&gt;
          description: |
            The callback
  - name: 'listHostKeysSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listHostKeysSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get host secrets for a function app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostKeysSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListHostKeysSlotResponse" />&gt;
        description: Promise<Models.WebAppsListHostKeysSlotResponse>
  - name: >-
      listHostKeysSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<HostKeys>)
    uid: '@azure/arm-appservice.WebApps.listHostKeysSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostKeysSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<HostKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostKeys" />&gt;
          description: |
            The callback
  - name: 'listHostKeysSlot(string, string, string, ServiceCallback<HostKeys>)'
    uid: '@azure/arm-appservice.WebApps.listHostKeysSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostKeysSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<HostKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.HostKeys" />&gt;
          description: |
            The callback
  - name: 'listHostNameBindings(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listHostNameBindings'
    package: '@azure/arm-appservice'
    summary: Description for Get hostname bindings for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListHostNameBindingsResponse"
          />&gt;
        description: Promise<Models.WebAppsListHostNameBindingsResponse>
  - name: >-
      listHostNameBindings(string, string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: >-
      listHostNameBindings(string, string,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindings(resourceGroupName: string, name: string,
        callback: ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: 'listHostNameBindingsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsNext'
    package: '@azure/arm-appservice'
    summary: Description for Get hostname bindings for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListHostNameBindingsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListHostNameBindingsNextResponse>
  - name: >-
      listHostNameBindingsNext(string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: >-
      listHostNameBindingsNext(string,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsNext(nextPageLink: string, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: >-
      listHostNameBindingsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get hostname bindings for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListHostNameBindingsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListHostNameBindingsSlotResponse>
  - name: >-
      listHostNameBindingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: >-
      listHostNameBindingsSlot(string, string, string,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: 'listHostNameBindingsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for Get hostname bindings for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListHostNameBindingsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListHostNameBindingsSlotNextResponse>
  - name: >-
      listHostNameBindingsSlotNext(string, RequestOptionsBase,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: >-
      listHostNameBindingsSlotNext(string,
      ServiceCallback<HostNameBindingCollection>)
    uid: '@azure/arm-appservice.WebApps.listHostNameBindingsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHostNameBindingsSlotNext(nextPageLink: string, callback:
        ServiceCallback<HostNameBindingCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HostNameBindingCollection" />&gt;
          description: |
            The callback
  - name: 'listHybridConnections(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listHybridConnections'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Retrieves all Service Bus Hybrid Connections used by this
      Web App.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListHybridConnectionsResponse"
          />&gt;
        description: Promise<Models.WebAppsListHybridConnectionsResponse>
  - name: >-
      listHybridConnections(string, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.listHybridConnections_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: 'listHybridConnections(string, string, ServiceCallback<HybridConnection>)'
    uid: '@azure/arm-appservice.WebApps.listHybridConnections_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHybridConnections(resourceGroupName: string, name: string,
        callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      listHybridConnectionsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listHybridConnectionsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Retrieves all Service Bus Hybrid Connections used by this
      Web App.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHybridConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListHybridConnectionsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListHybridConnectionsSlotResponse>
  - name: >-
      listHybridConnectionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.listHybridConnectionsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHybridConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      listHybridConnectionsSlot(string, string, string,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.listHybridConnectionsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listHybridConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceFunctionsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for List the functions for a web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceFunctionsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListInstanceFunctionsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListInstanceFunctionsSlotResponse>
  - name: >-
      listInstanceFunctionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceFunctionsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceFunctionsSlot(string, string, string,
      ServiceCallback<FunctionEnvelopeCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceFunctionsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceFunctionsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List the functions for a web site, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceFunctionsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceFunctionsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceFunctionsSlotNextResponse>
  - name: >-
      listInstanceFunctionsSlotNext(string, RequestOptionsBase,
      ServiceCallback<FunctionEnvelopeCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceFunctionsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceFunctionsSlotNext(string,
      ServiceCallback<FunctionEnvelopeCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceFunctionsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceFunctionsSlotNext(nextPageLink: string, callback:
        ServiceCallback<FunctionEnvelopeCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.FunctionEnvelopeCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceIdentifiers(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiers'
    package: '@azure/arm-appservice'
    summary: Description for Gets all scale-out instances of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiers(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListInstanceIdentifiersResponse"
          />&gt;
        description: Promise<Models.WebAppsListInstanceIdentifiersResponse>
  - name: >-
      listInstanceIdentifiers(string, string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiers_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiers(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceIdentifiers(string, string,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiers_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiers(resourceGroupName: string, name:
        string, callback: ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceIdentifiersNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets all scale-out instances of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceIdentifiersNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceIdentifiersNextResponse>
  - name: >-
      listInstanceIdentifiersNext(string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceIdentifiersNext(string,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersNext(nextPageLink: string, callback:
        ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceIdentifiersSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets all scale-out instances of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceIdentifiersSlotResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceIdentifiersSlotResponse>
  - name: >-
      listInstanceIdentifiersSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceIdentifiersSlot(string, string, string,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets the production

            slot instances.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceIdentifiersSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets all scale-out instances of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceIdentifiersSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceIdentifiersSlotNextResponse>
  - name: >-
      listInstanceIdentifiersSlotNext(string, RequestOptionsBase,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceIdentifiersSlotNext(string,
      ServiceCallback<WebAppInstanceStatusCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceIdentifiersSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceIdentifiersSlotNext(nextPageLink: string, callback:
        ServiceCallback<WebAppInstanceStatusCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppInstanceStatusCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcesses(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcesses'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcesses(resourceGroupName: string, name: string,
        instanceId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListInstanceProcessesResponse"
          />&gt;
        description: Promise<Models.WebAppsListInstanceProcessesResponse>
  - name: >-
      listInstanceProcesses(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcesses_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcesses(resourceGroupName: string, name: string,
        instanceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcesses(string, string, string,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcesses_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcesses(resourceGroupName: string, name: string,
        instanceId: string, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcessesNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListInstanceProcessesNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListInstanceProcessesNextResponse>
  - name: >-
      listInstanceProcessesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcessesNext(string, ServiceCallback<ProcessInfoCollection>)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListInstanceProcessesSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListInstanceProcessesSlotResponse>
  - name: >-
      listInstanceProcessesSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessesSlot(string, string, string, string,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesSlot(resourceGroupName: string, name:
        string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcessesSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessesSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessesSlotNextResponse>
  - name: >-
      listInstanceProcessesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessesSlotNext(string,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessesSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessesSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessModules(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModules'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModules(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessModulesResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessModulesResponse>
  - name: >-
      listInstanceProcessModules(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModules_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModules(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessModules(string, string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModules_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModules(resourceGroupName: string, name:
        string, processId: string, instanceId: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcessModulesNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessModulesNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessModulesNextResponse>
  - name: >-
      listInstanceProcessModulesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessModulesNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessModulesSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessModulesSlotResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessModulesSlotResponse>
  - name: >-
      listInstanceProcessModulesSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessModulesSlot(string, string, string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcessModulesSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessModulesSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessModulesSlotNextResponse>
  - name: >-
      listInstanceProcessModulesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessModulesSlotNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessModulesSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessModulesSlotNext(nextPageLink: string,
        callback: ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessThreads(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreads'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreads(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessThreadsResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessThreadsResponse>
  - name: >-
      listInstanceProcessThreads(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreads_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreads(resourceGroupName: string, name:
        string, processId: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessThreads(string, string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreads_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreads(resourceGroupName: string, name:
        string, processId: string, instanceId: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcessThreadsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessThreadsNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessThreadsNextResponse>
  - name: >-
      listInstanceProcessThreadsNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessThreadsNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsNext(nextPageLink: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessThreadsSlot(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessThreadsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessThreadsSlotResponse>
  - name: >-
      listInstanceProcessThreadsSlot(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessThreadsSlot(string, string, string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsSlot(resourceGroupName: string, name:
        string, processId: string, slot: string, instanceId: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: instanceId
          type: string
          description: >-
            ID of a specific scaled-out instance. This is the value of the name
            property

            in the JSON response from "GET api/sites/{siteName}/instances".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listInstanceProcessThreadsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsSlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListInstanceProcessThreadsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListInstanceProcessThreadsSlotNextResponse>
  - name: >-
      listInstanceProcessThreadsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsSlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listInstanceProcessThreadsSlotNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listInstanceProcessThreadsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInstanceProcessThreadsSlotNext(nextPageLink: string,
        callback: ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listMetadata(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listMetadata'
    package: '@azure/arm-appservice'
    summary: Description for Gets the metadata of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetadata(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListMetadataResponse" />&gt;
        description: Promise<Models.WebAppsListMetadataResponse>
  - name: >-
      listMetadata(string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listMetadata_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetadata(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: 'listMetadata(string, string, ServiceCallback<StringDictionary>)'
    uid: '@azure/arm-appservice.WebApps.listMetadata_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetadata(resourceGroupName: string, name: string, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: 'listMetadataSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listMetadataSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the metadata of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetadataSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            metadata for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListMetadataSlotResponse" />&gt;
        description: Promise<Models.WebAppsListMetadataSlotResponse>
  - name: >-
      listMetadataSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listMetadataSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetadataSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            metadata for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      listMetadataSlot(string, string, string,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.listMetadataSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetadataSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            metadata for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: 'listNetworkFeatures(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listNetworkFeatures'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets all network features used by the app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNetworkFeatures(resourceGroupName: string, name: string,
        view: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: view
          type: string
          description: The type of view. This can either be "summary" or "detailed".
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListNetworkFeaturesResponse"
          />&gt;
        description: Promise<Models.WebAppsListNetworkFeaturesResponse>
  - name: >-
      listNetworkFeatures(string, string, string, RequestOptionsBase,
      ServiceCallback<NetworkFeatures>)
    uid: '@azure/arm-appservice.WebApps.listNetworkFeatures_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNetworkFeatures(resourceGroupName: string, name: string,
        view: string, options: RequestOptionsBase, callback:
        ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: view
          type: string
          description: The type of view. This can either be "summary" or "detailed".
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkFeatures"
            />&gt;
          description: |
            The callback
  - name: >-
      listNetworkFeatures(string, string, string,
      ServiceCallback<NetworkFeatures>)
    uid: '@azure/arm-appservice.WebApps.listNetworkFeatures_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNetworkFeatures(resourceGroupName: string, name: string,
        view: string, callback: ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: view
          type: string
          description: The type of view. This can either be "summary" or "detailed".
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkFeatures"
            />&gt;
          description: |
            The callback
  - name: >-
      listNetworkFeaturesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets all network features used by the app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNetworkFeaturesSlot(resourceGroupName: string, name:
        string, view: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: view
          type: string
          description: The type of view. This can either be "summary" or "detailed".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get network

            features for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListNetworkFeaturesSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListNetworkFeaturesSlotResponse>
  - name: >-
      listNetworkFeaturesSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<NetworkFeatures>)
    uid: '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNetworkFeaturesSlot(resourceGroupName: string, name:
        string, view: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: view
          type: string
          description: The type of view. This can either be "summary" or "detailed".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get network

            features for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkFeatures"
            />&gt;
          description: |
            The callback
  - name: >-
      listNetworkFeaturesSlot(string, string, string, string,
      ServiceCallback<NetworkFeatures>)
    uid: '@azure/arm-appservice.WebApps.listNetworkFeaturesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNetworkFeaturesSlot(resourceGroupName: string, name:
        string, view: string, slot: string, callback:
        ServiceCallback<NetworkFeatures>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: view
          type: string
          description: The type of view. This can either be "summary" or "detailed".
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get network

            features for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.NetworkFeatures"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listNext'
    package: '@azure/arm-appservice'
    summary: Description for Get all apps for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListNextResponse" />&gt;
        description: Promise<Models.WebAppsListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<WebAppCollection>)'
    uid: '@azure/arm-appservice.WebApps.listNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<WebAppCollection>)'
    uid: '@azure/arm-appservice.WebApps.listNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCounters(string, string,
      Models.WebAppsListPerfMonCountersOptionalParams)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCounters'
    package: '@azure/arm-appservice'
    summary: Description for Gets perfmon counters for web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCounters(resourceGroupName: string, name: string,
        options?: Models.WebAppsListPerfMonCountersOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="Models.WebAppsListPerfMonCountersOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListPerfMonCountersResponse"
          />&gt;
        description: Promise<Models.WebAppsListPerfMonCountersResponse>
  - name: >-
      listPerfMonCounters(string, string,
      ServiceCallback<PerfMonCounterCollection>)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCounters_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCounters(resourceGroupName: string, name: string,
        callback: ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCounters(string, string,
      WebAppsListPerfMonCountersOptionalParams,
      ServiceCallback<PerfMonCounterCollection>)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCounters_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCounters(resourceGroupName: string, name: string,
        options: WebAppsListPerfMonCountersOptionalParams, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListPerfMonCountersOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCountersNext(string,
      Models.WebAppsListPerfMonCountersNextOptionalParams)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets perfmon counters for web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersNext(nextPageLink: string, options?:
        Models.WebAppsListPerfMonCountersNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.WebAppsListPerfMonCountersNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListPerfMonCountersNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListPerfMonCountersNextResponse>
  - name: 'listPerfMonCountersNext(string, ServiceCallback<PerfMonCounterCollection>)'
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersNext(nextPageLink: string, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCountersNext(string,
      WebAppsListPerfMonCountersNextOptionalParams,
      ServiceCallback<PerfMonCounterCollection>)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersNext(nextPageLink: string, options:
        WebAppsListPerfMonCountersNextOptionalParams, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListPerfMonCountersNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCountersSlot(string, string, string,
      Models.WebAppsListPerfMonCountersSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets perfmon counters for web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsListPerfMonCountersSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="Models.WebAppsListPerfMonCountersSlotOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListPerfMonCountersSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListPerfMonCountersSlotResponse>
  - name: >-
      listPerfMonCountersSlot(string, string, string,
      ServiceCallback<PerfMonCounterCollection>)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCountersSlot(string, string, string,
      WebAppsListPerfMonCountersSlotOptionalParams,
      ServiceCallback<PerfMonCounterCollection>)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersSlot(resourceGroupName: string, name:
        string, slot: string, options:
        WebAppsListPerfMonCountersSlotOptionalParams, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListPerfMonCountersSlotOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCountersSlotNext(string,
      Models.WebAppsListPerfMonCountersSlotNextOptionalParams)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets perfmon counters for web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersSlotNext(nextPageLink: string, options?:
        Models.WebAppsListPerfMonCountersSlotNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref uid="Models.WebAppsListPerfMonCountersSlotNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListPerfMonCountersSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListPerfMonCountersSlotNextResponse>
  - name: >-
      listPerfMonCountersSlotNext(string,
      ServiceCallback<PerfMonCounterCollection>)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersSlotNext(nextPageLink: string, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPerfMonCountersSlotNext(string,
      WebAppsListPerfMonCountersSlotNextOptionalParams,
      ServiceCallback<PerfMonCounterCollection>)
    uid: '@azure/arm-appservice.WebApps.listPerfMonCountersSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPerfMonCountersSlotNext(nextPageLink: string, options:
        WebAppsListPerfMonCountersSlotNextOptionalParams, callback:
        ServiceCallback<PerfMonCounterCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListPerfMonCountersSlotNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PerfMonCounterCollection" />&gt;
          description: |
            The callback
  - name: 'listPremierAddOns(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listPremierAddOns'
    package: '@azure/arm-appservice'
    summary: Description for Gets the premier add-ons of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPremierAddOns(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListPremierAddOnsResponse" />&gt;
        description: Promise<Models.WebAppsListPremierAddOnsResponse>
  - name: >-
      listPremierAddOns(string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.listPremierAddOns_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPremierAddOns(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: 'listPremierAddOns(string, string, ServiceCallback<PremierAddOn>)'
    uid: '@azure/arm-appservice.WebApps.listPremierAddOns_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPremierAddOns(resourceGroupName: string, name: string,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: 'listPremierAddOnsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listPremierAddOnsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the premier add-ons of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPremierAddOnsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            premier add-ons for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListPremierAddOnsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListPremierAddOnsSlotResponse>
  - name: >-
      listPremierAddOnsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.listPremierAddOnsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPremierAddOnsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            premier add-ons for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      listPremierAddOnsSlot(string, string, string,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.listPremierAddOnsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPremierAddOnsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            premier add-ons for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: 'listProcesses(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcesses'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcesses(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListProcessesResponse" />&gt;
        description: Promise<Models.WebAppsListProcessesResponse>
  - name: >-
      listProcesses(string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcesses_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcesses(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcesses(string, string, ServiceCallback<ProcessInfoCollection>)'
    uid: '@azure/arm-appservice.WebApps.listProcesses_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcesses(resourceGroupName: string, name: string,
        callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessesNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessesNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListProcessesNextResponse" />&gt;
        description: Promise<Models.WebAppsListProcessesNextResponse>
  - name: >-
      listProcessesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessesNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessesNext(string, ServiceCallback<ProcessInfoCollection>)'
    uid: '@azure/arm-appservice.WebApps.listProcessesNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessesSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListProcessesSlotResponse" />&gt;
        description: Promise<Models.WebAppsListProcessesSlotResponse>
  - name: >-
      listProcessesSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessesSlot(string, string, string,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessesSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessesSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of processes for a web site, or a deployment
      slot, or for a specific

      scaled-out instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListProcessesSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListProcessesSlotNextResponse>
  - name: >-
      listProcessesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessesSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessesSlotNext(string, ServiceCallback<ProcessInfoCollection>)'
    uid: '@azure/arm-appservice.WebApps.listProcessesSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessesSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessModules(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessModules'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModules(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListProcessModulesResponse" />&gt;
        description: Promise<Models.WebAppsListProcessModulesResponse>
  - name: >-
      listProcessModules(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModules_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModules(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessModules(string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModules_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModules(resourceGroupName: string, name: string,
        processId: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessModulesNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessModulesNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListProcessModulesNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListProcessModulesNextResponse>
  - name: >-
      listProcessModulesNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModulesNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessModulesNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModulesNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesNext(nextPageLink: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessModulesSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listProcessModulesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListProcessModulesSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListProcessModulesSlotResponse>
  - name: >-
      listProcessModulesSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModulesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessModulesSlot(string, string, string, string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModulesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessModulesSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessModulesSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List module information for a process by its ID for a
      specific scaled-out

      instance in a web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListProcessModulesSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListProcessModulesSlotNextResponse>
  - name: >-
      listProcessModulesSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModulesSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessModulesSlotNext(string,
      ServiceCallback<ProcessModuleInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessModulesSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessModulesSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessModuleInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessModuleInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessThreads(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessThreads'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreads(resourceGroupName: string, name: string,
        processId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListProcessThreadsResponse" />&gt;
        description: Promise<Models.WebAppsListProcessThreadsResponse>
  - name: >-
      listProcessThreads(string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreads_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreads(resourceGroupName: string, name: string,
        processId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessThreads(string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreads_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreads(resourceGroupName: string, name: string,
        processId: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessThreadsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListProcessThreadsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListProcessThreadsNextResponse>
  - name: >-
      listProcessThreadsNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessThreadsNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsNext(nextPageLink: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessThreadsSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListProcessThreadsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListProcessThreadsSlotResponse>
  - name: >-
      listProcessThreadsSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessThreadsSlot(string, string, string, string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsSlot(resourceGroupName: string, name: string,
        processId: string, slot: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: processId
          type: string
          description: PID.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listProcessThreadsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List the threads in a process by its ID for a specific
      scaled-out instance in a

      web site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListProcessThreadsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListProcessThreadsSlotNextResponse>
  - name: >-
      listProcessThreadsSlotNext(string, RequestOptionsBase,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listProcessThreadsSlotNext(string,
      ServiceCallback<ProcessThreadInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listProcessThreadsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listProcessThreadsSlotNext(nextPageLink: string, callback:
        ServiceCallback<ProcessThreadInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ProcessThreadInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listPublicCertificates(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listPublicCertificates'
    package: '@azure/arm-appservice'
    summary: Description for Get public certificates for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificates(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListPublicCertificatesResponse"
          />&gt;
        description: Promise<Models.WebAppsListPublicCertificatesResponse>
  - name: >-
      listPublicCertificates(string, string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificates_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificates(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPublicCertificates(string, string,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificates_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificates(resourceGroupName: string, name: string,
        callback: ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: 'listPublicCertificatesNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesNext'
    package: '@azure/arm-appservice'
    summary: Description for Get public certificates for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListPublicCertificatesNextResponse" />&gt;
        description: Promise<Models.WebAppsListPublicCertificatesNextResponse>
  - name: >-
      listPublicCertificatesNext(string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPublicCertificatesNext(string,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesNext(nextPageLink: string, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPublicCertificatesSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlot'
    package: '@azure/arm-appservice'
    summary: Description for Get public certificates for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListPublicCertificatesSlotResponse" />&gt;
        description: Promise<Models.WebAppsListPublicCertificatesSlotResponse>
  - name: >-
      listPublicCertificatesSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPublicCertificatesSlot(string, string, string,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            gets hostname

            bindings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: 'listPublicCertificatesSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for Get public certificates for an app or a deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListPublicCertificatesSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListPublicCertificatesSlotNextResponse>
  - name: >-
      listPublicCertificatesSlotNext(string, RequestOptionsBase,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listPublicCertificatesSlotNext(string,
      ServiceCallback<PublicCertificateCollection>)
    uid: '@azure/arm-appservice.WebApps.listPublicCertificatesSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublicCertificatesSlotNext(nextPageLink: string, callback:
        ServiceCallback<PublicCertificateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.PublicCertificateCollection" />&gt;
          description: |
            The callback
  - name: 'listPublishingCredentials(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listPublishingCredentials'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Git/FTP publishing credentials of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingCredentials(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListPublishingCredentialsResponse"
          />&gt;
        description: Promise<Models.WebAppsListPublishingCredentialsResponse>
  - name: >-
      listPublishingCredentialsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listPublishingCredentialsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Git/FTP publishing credentials of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingCredentialsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing credentials for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListPublishingCredentialsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListPublishingCredentialsSlotResponse>
  - name: >-
      listPublishingProfileXmlWithSecrets(string, string,
      CsmPublishingProfileOptions, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the publishing profile for an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecrets(resourceGroupName: string,
        name: string, publishingProfileOptions: CsmPublishingProfileOptions,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publishingProfileOptions
          type: <xref uid="@azure/arm-appservice.CsmPublishingProfileOptions" />
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListPublishingProfileXmlWithSecretsResponse" />&gt;
        description: Promise<Models.WebAppsListPublishingProfileXmlWithSecretsResponse>
  - name: >-
      listPublishingProfileXmlWithSecrets(string, string,
      CsmPublishingProfileOptions, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecrets(resourceGroupName: string,
        name: string, publishingProfileOptions: CsmPublishingProfileOptions,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publishingProfileOptions
          type: <xref uid="@azure/arm-appservice.CsmPublishingProfileOptions" />
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listPublishingProfileXmlWithSecrets(string, string,
      CsmPublishingProfileOptions, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecrets_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecrets(resourceGroupName: string,
        name: string, publishingProfileOptions: CsmPublishingProfileOptions,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publishingProfileOptions
          type: <xref uid="@azure/arm-appservice.CsmPublishingProfileOptions" />
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listPublishingProfileXmlWithSecretsSlot(string, string,
      CsmPublishingProfileOptions, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the publishing profile for an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecretsSlot(resourceGroupName:
        string, name: string, publishingProfileOptions:
        CsmPublishingProfileOptions, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publishingProfileOptions
          type: <xref uid="@azure/arm-appservice.CsmPublishingProfileOptions" />
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing profile for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListPublishingProfileXmlWithSecretsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListPublishingProfileXmlWithSecretsSlotResponse>
  - name: >-
      listPublishingProfileXmlWithSecretsSlot(string, string,
      CsmPublishingProfileOptions, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecretsSlot(resourceGroupName:
        string, name: string, publishingProfileOptions:
        CsmPublishingProfileOptions, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publishingProfileOptions
          type: <xref uid="@azure/arm-appservice.CsmPublishingProfileOptions" />
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing profile for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listPublishingProfileXmlWithSecretsSlot(string, string,
      CsmPublishingProfileOptions, string, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.listPublishingProfileXmlWithSecretsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listPublishingProfileXmlWithSecretsSlot(resourceGroupName:
        string, name: string, publishingProfileOptions:
        CsmPublishingProfileOptions, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: publishingProfileOptions
          type: <xref uid="@azure/arm-appservice.CsmPublishingProfileOptions" />
          description: >-
            Specifies publishingProfileOptions for publishing profile. For

            example, use {"format": "FileZilla3"} to get a FileZilla publishing
            profile.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get the

            publishing profile for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'listRelayServiceConnections(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listRelayServiceConnections'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets hybrid connections configured for an app (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRelayServiceConnections(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListRelayServiceConnectionsResponse" />&gt;
        description: Promise<Models.WebAppsListRelayServiceConnectionsResponse>
  - name: >-
      listRelayServiceConnections(string, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.listRelayServiceConnections_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRelayServiceConnections(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      listRelayServiceConnections(string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.listRelayServiceConnections_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRelayServiceConnections(resourceGroupName: string, name:
        string, callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      listRelayServiceConnectionsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets hybrid connections configured for an app (or
      deployment slot, if

      specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRelayServiceConnectionsSlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get hybrid

            connections for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListRelayServiceConnectionsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListRelayServiceConnectionsSlotResponse>
  - name: >-
      listRelayServiceConnectionsSlot(string, string, string,
      RequestOptionsBase, ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRelayServiceConnectionsSlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get hybrid

            connections for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      listRelayServiceConnectionsSlot(string, string, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.listRelayServiceConnectionsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRelayServiceConnectionsSlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get hybrid

            connections for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: 'listSiteBackups(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteBackups'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackups(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListSiteBackupsResponse" />&gt;
        description: Promise<Models.WebAppsListSiteBackupsResponse>
  - name: >-
      listSiteBackups(string, string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteBackups_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackups(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteBackups(string, string, ServiceCallback<BackupItemCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSiteBackups_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackups(resourceGroupName: string, name: string,
        callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteBackupsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSiteBackupsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListSiteBackupsNextResponse>
  - name: >-
      listSiteBackupsNext(string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteBackupsNext(string, ServiceCallback<BackupItemCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsNext(nextPageLink: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteBackupsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSiteBackupsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListSiteBackupsSlotResponse>
  - name: >-
      listSiteBackupsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSiteBackupsSlot(string, string, string,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get backups of

            the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteBackupsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets existing backups of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSiteBackupsSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListSiteBackupsSlotNextResponse>
  - name: >-
      listSiteBackupsSlotNext(string, RequestOptionsBase,
      ServiceCallback<BackupItemCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteBackupsSlotNext(string, ServiceCallback<BackupItemCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSiteBackupsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteBackupsSlotNext(nextPageLink: string, callback:
        ServiceCallback<BackupItemCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.BackupItemCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteExtensions(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteExtensions'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of siteextensions for a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensions(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListSiteExtensionsResponse" />&gt;
        description: Promise<Models.WebAppsListSiteExtensionsResponse>
  - name: >-
      listSiteExtensions(string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensions_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensions(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSiteExtensions(string, string,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensions_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensions(resourceGroupName: string, name: string,
        callback: ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteExtensionsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of siteextensions for a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSiteExtensionsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListSiteExtensionsNextResponse>
  - name: >-
      listSiteExtensionsNext(string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSiteExtensionsNext(string,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsNext(nextPageLink: string, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteExtensionsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of siteextensions for a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSiteExtensionsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListSiteExtensionsSlotResponse>
  - name: >-
      listSiteExtensionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSiteExtensionsSlot(string, string, string,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listSiteExtensionsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get list of siteextensions for a web site, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSiteExtensionsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListSiteExtensionsSlotNextResponse>
  - name: >-
      listSiteExtensionsSlotNext(string, RequestOptionsBase,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSiteExtensionsSlotNext(string,
      ServiceCallback<SiteExtensionInfoCollection>)
    uid: '@azure/arm-appservice.WebApps.listSiteExtensionsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSiteExtensionsSlotNext(nextPageLink: string, callback:
        ServiceCallback<SiteExtensionInfoCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteExtensionInfoCollection" />&gt;
          description: |
            The callback
  - name: 'listSitePushSettings(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSitePushSettings'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Push settings associated with web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSitePushSettings(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSitePushSettingsResponse"
          />&gt;
        description: Promise<Models.WebAppsListSitePushSettingsResponse>
  - name: >-
      listSitePushSettings(string, string, RequestOptionsBase,
      ServiceCallback<PushSettings>)
    uid: '@azure/arm-appservice.WebApps.listSitePushSettings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSitePushSettings(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: 'listSitePushSettings(string, string, ServiceCallback<PushSettings>)'
    uid: '@azure/arm-appservice.WebApps.listSitePushSettings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSitePushSettings(resourceGroupName: string, name: string,
        callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: >-
      listSitePushSettingsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listSitePushSettingsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Gets the Push settings associated with web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSitePushSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSitePushSettingsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListSitePushSettingsSlotResponse>
  - name: >-
      listSitePushSettingsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<PushSettings>)
    uid: '@azure/arm-appservice.WebApps.listSitePushSettingsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSitePushSettingsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: >-
      listSitePushSettingsSlot(string, string, string,
      ServiceCallback<PushSettings>)
    uid: '@azure/arm-appservice.WebApps.listSitePushSettingsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSitePushSettingsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: 'listSlotConfigurationNames(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSlotConfigurationNames'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the names of app settings and connection strings that
      stick to the slot

      (not swapped).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotConfigurationNames(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSlotConfigurationNamesResponse" />&gt;
        description: Promise<Models.WebAppsListSlotConfigurationNamesResponse>
  - name: >-
      listSlotConfigurationNames(string, string, RequestOptionsBase,
      ServiceCallback<SlotConfigNamesResource>)
    uid: '@azure/arm-appservice.WebApps.listSlotConfigurationNames_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotConfigurationNames(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotConfigNamesResource" />&gt;
          description: |
            The callback
  - name: >-
      listSlotConfigurationNames(string, string,
      ServiceCallback<SlotConfigNamesResource>)
    uid: '@azure/arm-appservice.WebApps.listSlotConfigurationNames_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotConfigurationNames(resourceGroupName: string, name:
        string, callback: ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotConfigNamesResource" />&gt;
          description: |
            The callback
  - name: >-
      listSlotDifferencesFromProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the difference in configuration settings between two
      web app slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesFromProduction(resourceGroupName: string,
        name: string, slotSwapEntity: CsmSlotEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSlotDifferencesFromProductionResponse" />&gt;
        description: Promise<Models.WebAppsListSlotDifferencesFromProductionResponse>
  - name: >-
      listSlotDifferencesFromProduction(string, string, CsmSlotEntity,
      RequestOptionsBase, ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesFromProduction(resourceGroupName: string,
        name: string, slotSwapEntity: CsmSlotEntity, options:
        RequestOptionsBase, callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSlotDifferencesFromProduction(string, string, CsmSlotEntity,
      ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProduction_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesFromProduction(resourceGroupName: string,
        name: string, slotSwapEntity: CsmSlotEntity, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: 'listSlotDifferencesFromProductionNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the difference in configuration settings between two
      web app slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesFromProductionNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSlotDifferencesFromProductionNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListSlotDifferencesFromProductionNextResponse>
  - name: >-
      listSlotDifferencesFromProductionNext(string, RequestOptionsBase,
      ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesFromProductionNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSlotDifferencesFromProductionNext(string,
      ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesFromProductionNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesFromProductionNext(nextPageLink: string,
        callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSlotDifferencesSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the difference in configuration settings between two
      web app slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSlotDifferencesSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListSlotDifferencesSlotResponse>
  - name: >-
      listSlotDifferencesSlot(string, string, CsmSlotEntity, string,
      RequestOptionsBase, ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSlotDifferencesSlot(string, string, CsmSlotEntity, string,
      ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesSlot(resourceGroupName: string, name:
        string, slotSwapEntity: CsmSlotEntity, slot: string, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: 'listSlotDifferencesSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Get the difference in configuration settings between two
      web app slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSlotDifferencesSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListSlotDifferencesSlotNextResponse>
  - name: >-
      listSlotDifferencesSlotNext(string, RequestOptionsBase,
      ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSlotDifferencesSlotNext(string,
      ServiceCallback<SlotDifferenceCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotDifferencesSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotDifferencesSlotNext(nextPageLink: string, callback:
        ServiceCallback<SlotDifferenceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotDifferenceCollection" />&gt;
          description: |
            The callback
  - name: 'listSlots(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSlots'
    package: '@azure/arm-appservice'
    summary: Description for Gets an app's deployment slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlots(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListSlotsResponse" />&gt;
        description: Promise<Models.WebAppsListSlotsResponse>
  - name: >-
      listSlots(string, string, RequestOptionsBase,
      ServiceCallback<WebAppCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlots_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlots(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: 'listSlots(string, string, ServiceCallback<WebAppCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSlots_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlots(resourceGroupName: string, name: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: 'listSlotsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSlotsNext'
    package: '@azure/arm-appservice'
    summary: Description for Gets an app's deployment slots.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListSlotsNextResponse" />&gt;
        description: Promise<Models.WebAppsListSlotsNextResponse>
  - name: >-
      listSlotsNext(string, RequestOptionsBase,
      ServiceCallback<WebAppCollection>)
    uid: '@azure/arm-appservice.WebApps.listSlotsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: 'listSlotsNext(string, ServiceCallback<WebAppCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSlotsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSlotsNext(nextPageLink: string, callback:
        ServiceCallback<WebAppCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebAppCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshots(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSnapshots'
    package: '@azure/arm-appservice'
    summary: Description for Returns all Snapshots to the user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshots(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListSnapshotsResponse" />&gt;
        description: Promise<Models.WebAppsListSnapshotsResponse>
  - name: >-
      listSnapshots(string, string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshots_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshots(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshots(string, string, ServiceCallback<SnapshotCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSnapshots_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshots(resourceGroupName: string, name: string,
        callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsFromDRSecondary(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns all Snapshots to the user from DRSecondary
      endpoint.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondary(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSnapshotsFromDRSecondaryResponse" />&gt;
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondaryResponse>
  - name: >-
      listSnapshotsFromDRSecondary(string, string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondary(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSnapshotsFromDRSecondary(string, string,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondary_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondary(resourceGroupName: string, name:
        string, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsFromDRSecondaryNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns all Snapshots to the user from DRSecondary
      endpoint.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondaryNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSnapshotsFromDRSecondaryNextResponse" />&gt;
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondaryNextResponse>
  - name: >-
      listSnapshotsFromDRSecondaryNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondaryNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSnapshotsFromDRSecondaryNext(string,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondaryNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondaryNext(nextPageLink: string,
        callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSnapshotsFromDRSecondarySlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns all Snapshots to the user from DRSecondary
      endpoint.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlot(resourceGroupName: string,
        name: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: slot
          type: string
          description: Website Slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSnapshotsFromDRSecondarySlotResponse" />&gt;
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondarySlotResponse>
  - name: >-
      listSnapshotsFromDRSecondarySlot(string, string, string,
      RequestOptionsBase, ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlot(resourceGroupName: string,
        name: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: slot
          type: string
          description: Website Slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSnapshotsFromDRSecondarySlot(string, string, string,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlot(resourceGroupName: string,
        name: string, slot: string, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: slot
          type: string
          description: Website Slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsFromDRSecondarySlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Returns all Snapshots to the user from DRSecondary
      endpoint.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSnapshotsFromDRSecondarySlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListSnapshotsFromDRSecondarySlotNextResponse>
  - name: >-
      listSnapshotsFromDRSecondarySlotNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSnapshotsFromDRSecondarySlotNext(string,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsFromDRSecondarySlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsFromDRSecondarySlotNext(nextPageLink: string,
        callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsNext'
    package: '@azure/arm-appservice'
    summary: Description for Returns all Snapshots to the user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListSnapshotsNextResponse" />&gt;
        description: Promise<Models.WebAppsListSnapshotsNextResponse>
  - name: >-
      listSnapshotsNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsNext(string, ServiceCallback<SnapshotCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsNext(nextPageLink: string, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Returns all Snapshots to the user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: slot
          type: string
          description: Website Slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListSnapshotsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListSnapshotsSlotResponse>
  - name: >-
      listSnapshotsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: slot
          type: string
          description: Website Slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSnapshotsSlot(string, string, string,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Website Name.
        - id: slot
          type: string
          description: Website Slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsSlotNext'
    package: '@azure/arm-appservice'
    summary: Description for Returns all Snapshots to the user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSnapshotsSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListSnapshotsSlotNextResponse>
  - name: >-
      listSnapshotsSlotNext(string, RequestOptionsBase,
      ServiceCallback<SnapshotCollection>)
    uid: '@azure/arm-appservice.WebApps.listSnapshotsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSnapshotsSlotNext(string, ServiceCallback<SnapshotCollection>)'
    uid: '@azure/arm-appservice.WebApps.listSnapshotsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSnapshotsSlotNext(nextPageLink: string, callback:
        ServiceCallback<SnapshotCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SnapshotCollection" />&gt;
          description: |
            The callback
  - name: 'listSyncFunctionTriggers(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggers'
    package: '@azure/arm-appservice'
    summary: Description for This is to allow calling via powershell and ARM template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncFunctionTriggers(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListSyncFunctionTriggersResponse"
          />&gt;
        description: Promise<Models.WebAppsListSyncFunctionTriggersResponse>
  - name: >-
      listSyncFunctionTriggers(string, string, RequestOptionsBase,
      ServiceCallback<FunctionSecrets>)
    uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggers_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncFunctionTriggers(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: 'listSyncFunctionTriggers(string, string, ServiceCallback<FunctionSecrets>)'
    uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggers_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncFunctionTriggers(resourceGroupName: string, name:
        string, callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: >-
      listSyncFunctionTriggersSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot'
    package: '@azure/arm-appservice'
    summary: Description for This is to allow calling via powershell and ARM template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListSyncFunctionTriggersSlotResponse" />&gt;
        description: Promise<Models.WebAppsListSyncFunctionTriggersSlotResponse>
  - name: >-
      listSyncFunctionTriggersSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<FunctionSecrets>)
    uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: >-
      listSyncFunctionTriggersSlot(string, string, string,
      ServiceCallback<FunctionSecrets>)
    uid: '@azure/arm-appservice.WebApps.listSyncFunctionTriggersSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<FunctionSecrets>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.FunctionSecrets"
            />&gt;
          description: |
            The callback
  - name: 'listSyncStatus(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSyncStatus'
    package: '@azure/arm-appservice'
    summary: Description for This is to allow calling via powershell and ARM template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncStatus(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'listSyncStatus(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.listSyncStatus_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncStatus(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'listSyncStatus(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.listSyncStatus_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncStatus(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'listSyncStatusSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listSyncStatusSlot'
    package: '@azure/arm-appservice'
    summary: Description for This is to allow calling via powershell and ARM template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncStatusSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      listSyncStatusSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.listSyncStatusSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncStatusSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'listSyncStatusSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.listSyncStatusSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSyncStatusSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobHistory(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List a triggered web job's history for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListTriggeredWebJobHistoryResponse" />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobHistoryResponse>
  - name: >-
      listTriggeredWebJobHistory(string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobHistory(string, string, string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistory_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistory(resourceGroupName: string, name:
        string, webJobName: string, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: 'listTriggeredWebJobHistoryNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List a triggered web job's history for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistoryNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListTriggeredWebJobHistoryNextResponse" />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobHistoryNextResponse>
  - name: >-
      listTriggeredWebJobHistoryNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistoryNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobHistoryNext(string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistoryNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistoryNext(nextPageLink: string, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobHistorySlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List a triggered web job's history for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListTriggeredWebJobHistorySlotResponse" />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobHistorySlotResponse>
  - name: >-
      listTriggeredWebJobHistorySlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobHistorySlot(string, string, string, string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: 'listTriggeredWebJobHistorySlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for List a triggered web job's history for an app, or a
      deployment slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlotNext(nextPageLink: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListTriggeredWebJobHistorySlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobHistorySlotNextResponse>
  - name: >-
      listTriggeredWebJobHistorySlotNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlotNext(nextPageLink: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobHistorySlotNext(string,
      ServiceCallback<TriggeredJobHistoryCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobHistorySlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobHistorySlotNext(nextPageLink: string,
        callback: ServiceCallback<TriggeredJobHistoryCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredJobHistoryCollection" />&gt;
          description: |
            The callback
  - name: 'listTriggeredWebJobs(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobs'
    package: '@azure/arm-appservice'
    summary: 'Description for List triggered web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobs(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListTriggeredWebJobsResponse"
          />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobsResponse>
  - name: >-
      listTriggeredWebJobs(string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobs_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobs(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobs(string, string,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobs_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobs(resourceGroupName: string, name: string,
        callback: ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listTriggeredWebJobsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List triggered web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListTriggeredWebJobsNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobsNextResponse>
  - name: >-
      listTriggeredWebJobsNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobsNext(string,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsNext(nextPageLink: string, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobsSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for List triggered web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListTriggeredWebJobsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobsSlotResponse>
  - name: >-
      listTriggeredWebJobsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobsSlot(string, string, string,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsSlot(resourceGroupName: string, name:
        string, slot: string, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listTriggeredWebJobsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List triggered web jobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsListTriggeredWebJobsSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListTriggeredWebJobsSlotNextResponse>
  - name: >-
      listTriggeredWebJobsSlotNext(string, RequestOptionsBase,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      listTriggeredWebJobsSlotNext(string,
      ServiceCallback<TriggeredWebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listTriggeredWebJobsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTriggeredWebJobsSlotNext(nextPageLink: string, callback:
        ServiceCallback<TriggeredWebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.TriggeredWebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listUsages(string, string, Models.WebAppsListUsagesOptionalParams)'
    uid: '@azure/arm-appservice.WebApps.listUsages'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the quota usage information of an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, options?:
        Models.WebAppsListUsagesOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="Models.WebAppsListUsagesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListUsagesResponse" />&gt;
        description: Promise<Models.WebAppsListUsagesResponse>
  - name: 'listUsages(string, string, ServiceCallback<CsmUsageQuotaCollection>)'
    uid: '@azure/arm-appservice.WebApps.listUsages_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: >-
      listUsages(string, string, WebAppsListUsagesOptionalParams,
      ServiceCallback<CsmUsageQuotaCollection>)
    uid: '@azure/arm-appservice.WebApps.listUsages_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, name: string, options:
        WebAppsListUsagesOptionalParams, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="@azure/arm-appservice.WebAppsListUsagesOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: 'listUsagesNext(string, Models.WebAppsListUsagesNextOptionalParams)'
    uid: '@azure/arm-appservice.WebApps.listUsagesNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the quota usage information of an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, options?:
        Models.WebAppsListUsagesNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.WebAppsListUsagesNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListUsagesNextResponse" />&gt;
        description: Promise<Models.WebAppsListUsagesNextResponse>
  - name: 'listUsagesNext(string, ServiceCallback<CsmUsageQuotaCollection>)'
    uid: '@azure/arm-appservice.WebApps.listUsagesNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: >-
      listUsagesNext(string, WebAppsListUsagesNextOptionalParams,
      ServiceCallback<CsmUsageQuotaCollection>)
    uid: '@azure/arm-appservice.WebApps.listUsagesNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesNext(nextPageLink: string, options:
        WebAppsListUsagesNextOptionalParams, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListUsagesNextOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: >-
      listUsagesSlot(string, string, string,
      Models.WebAppsListUsagesSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.listUsagesSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the quota usage information of an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesSlot(resourceGroupName: string, name: string, slot:
        string, options?: Models.WebAppsListUsagesSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get quota

            information of the production slot.
        - id: options
          type: <xref uid="Models.WebAppsListUsagesSlotOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListUsagesSlotResponse" />&gt;
        description: Promise<Models.WebAppsListUsagesSlotResponse>
  - name: >-
      listUsagesSlot(string, string, string,
      ServiceCallback<CsmUsageQuotaCollection>)
    uid: '@azure/arm-appservice.WebApps.listUsagesSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get quota

            information of the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: >-
      listUsagesSlot(string, string, string,
      WebAppsListUsagesSlotOptionalParams,
      ServiceCallback<CsmUsageQuotaCollection>)
    uid: '@azure/arm-appservice.WebApps.listUsagesSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesSlot(resourceGroupName: string, name: string, slot:
        string, options: WebAppsListUsagesSlotOptionalParams, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get quota

            information of the production slot.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListUsagesSlotOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: 'listUsagesSlotNext(string, Models.WebAppsListUsagesSlotNextOptionalParams)'
    uid: '@azure/arm-appservice.WebApps.listUsagesSlotNext'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the quota usage information of an app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesSlotNext(nextPageLink: string, options?:
        Models.WebAppsListUsagesSlotNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.WebAppsListUsagesSlotNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListUsagesSlotNextResponse" />&gt;
        description: Promise<Models.WebAppsListUsagesSlotNextResponse>
  - name: 'listUsagesSlotNext(string, ServiceCallback<CsmUsageQuotaCollection>)'
    uid: '@azure/arm-appservice.WebApps.listUsagesSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesSlotNext(nextPageLink: string, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: >-
      listUsagesSlotNext(string, WebAppsListUsagesSlotNextOptionalParams,
      ServiceCallback<CsmUsageQuotaCollection>)
    uid: '@azure/arm-appservice.WebApps.listUsagesSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsagesSlotNext(nextPageLink: string, options:
        WebAppsListUsagesSlotNextOptionalParams, callback:
        ServiceCallback<CsmUsageQuotaCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsListUsagesSlotNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmUsageQuotaCollection" />&gt;
          description: |
            The callback
  - name: 'listVnetConnections(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listVnetConnections'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the virtual networks the app (or deployment slot) is
      connected to.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listVnetConnections(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListVnetConnectionsResponse"
          />&gt;
        description: Promise<Models.WebAppsListVnetConnectionsResponse>
  - name: >-
      listVnetConnections(string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo[]>)
    uid: '@azure/arm-appservice.WebApps.listVnetConnections_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listVnetConnections(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo"
            />[]&gt;
          description: |
            The callback
  - name: 'listVnetConnections(string, string, ServiceCallback<VnetInfo[]>)'
    uid: '@azure/arm-appservice.WebApps.listVnetConnections_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listVnetConnections(resourceGroupName: string, name: string,
        callback: ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo"
            />[]&gt;
          description: |
            The callback
  - name: 'listVnetConnectionsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listVnetConnectionsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Gets the virtual networks the app (or deployment slot) is
      connected to.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listVnetConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get virtual

            network connections for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListVnetConnectionsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsListVnetConnectionsSlotResponse>
  - name: >-
      listVnetConnectionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<VnetInfo[]>)
    uid: '@azure/arm-appservice.WebApps.listVnetConnectionsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listVnetConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get virtual

            network connections for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo"
            />[]&gt;
          description: |
            The callback
  - name: >-
      listVnetConnectionsSlot(string, string, string,
      ServiceCallback<VnetInfo[]>)
    uid: '@azure/arm-appservice.WebApps.listVnetConnectionsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listVnetConnectionsSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<VnetInfo[]>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will get virtual

            network connections for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo"
            />[]&gt;
          description: |
            The callback
  - name: 'listWebJobs(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listWebJobs'
    package: '@azure/arm-appservice'
    summary: 'Description for List webjobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobs(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListWebJobsResponse" />&gt;
        description: Promise<Models.WebAppsListWebJobsResponse>
  - name: >-
      listWebJobs(string, string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listWebJobs_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobs(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listWebJobs(string, string, ServiceCallback<WebJobCollection>)'
    uid: '@azure/arm-appservice.WebApps.listWebJobs_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobs(resourceGroupName: string, name: string, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listWebJobsNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listWebJobsNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List webjobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListWebJobsNextResponse" />&gt;
        description: Promise<Models.WebAppsListWebJobsNextResponse>
  - name: >-
      listWebJobsNext(string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listWebJobsNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listWebJobsNext(string, ServiceCallback<WebJobCollection>)'
    uid: '@azure/arm-appservice.WebApps.listWebJobsNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsNext(nextPageLink: string, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listWebJobsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listWebJobsSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for List webjobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsListWebJobsSlotResponse" />&gt;
        description: Promise<Models.WebAppsListWebJobsSlotResponse>
  - name: >-
      listWebJobsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listWebJobsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listWebJobsSlot(string, string, string, ServiceCallback<WebJobCollection>)'
    uid: '@azure/arm-appservice.WebApps.listWebJobsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            returns deployments

            for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listWebJobsSlotNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.listWebJobsSlotNext'
    package: '@azure/arm-appservice'
    summary: 'Description for List webjobs for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsSlotNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsListWebJobsSlotNextResponse"
          />&gt;
        description: Promise<Models.WebAppsListWebJobsSlotNextResponse>
  - name: >-
      listWebJobsSlotNext(string, RequestOptionsBase,
      ServiceCallback<WebJobCollection>)
    uid: '@azure/arm-appservice.WebApps.listWebJobsSlotNext_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsSlotNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: 'listWebJobsSlotNext(string, ServiceCallback<WebJobCollection>)'
    uid: '@azure/arm-appservice.WebApps.listWebJobsSlotNext_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWebJobsSlotNext(nextPageLink: string, callback:
        ServiceCallback<WebJobCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.WebJobCollection" />&gt;
          description: |
            The callback
  - name: >-
      migrateMySql(string, string, MigrateMySqlRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.migrateMySql'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Migrates a local (in-app) MySql database to a remote MySql
      database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateMySql(resourceGroupName: string, name: string,
        migrationRequestEnvelope: MigrateMySqlRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: migrationRequestEnvelope
          type: <xref uid="@azure/arm-appservice.MigrateMySqlRequest" />
          description: MySql migration options.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsMigrateMySqlResponse" />&gt;
        description: Promise<Models.WebAppsMigrateMySqlResponse>
  - name: >-
      migrateStorage(string, string, string, StorageMigrationOptions,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.migrateStorage'
    package: '@azure/arm-appservice'
    summary: Description for Restores a web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function migrateStorage(subscriptionName: string, resourceGroupName:
        string, name: string, migrationOptions: StorageMigrationOptions,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: subscriptionName
          type: string
          description: Azure subscription.
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: migrationOptions
          type: <xref uid="@azure/arm-appservice.StorageMigrationOptions" />
          description: Migration migrationOptions.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsMigrateStorageResponse" />&gt;
        description: Promise<Models.WebAppsMigrateStorageResponse>
  - name: >-
      putPrivateAccessVnet(string, string, PrivateAccess,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnet'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Sets data around private site access enablement and
      authorized Virtual Networks

      that can access the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function putPrivateAccessVnet(resourceGroupName: string, name: string,
        access: PrivateAccess, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: access
          type: <xref uid="@azure/arm-appservice.PrivateAccess" />
          description: The information for the private access
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsPutPrivateAccessVnetResponse"
          />&gt;
        description: Promise<Models.WebAppsPutPrivateAccessVnetResponse>
  - name: >-
      putPrivateAccessVnet(string, string, PrivateAccess, RequestOptionsBase,
      ServiceCallback<PrivateAccess>)
    uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnet_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function putPrivateAccessVnet(resourceGroupName: string, name: string,
        access: PrivateAccess, options: RequestOptionsBase, callback:
        ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: access
          type: <xref uid="@azure/arm-appservice.PrivateAccess" />
          description: The information for the private access
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: >-
      putPrivateAccessVnet(string, string, PrivateAccess,
      ServiceCallback<PrivateAccess>)
    uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnet_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function putPrivateAccessVnet(resourceGroupName: string, name: string,
        access: PrivateAccess, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: access
          type: <xref uid="@azure/arm-appservice.PrivateAccess" />
          description: The information for the private access
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: >-
      putPrivateAccessVnetSlot(string, string, PrivateAccess, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Sets data around private site access enablement and
      authorized Virtual Networks

      that can access the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function putPrivateAccessVnetSlot(resourceGroupName: string, name:
        string, access: PrivateAccess, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: access
          type: <xref uid="@azure/arm-appservice.PrivateAccess" />
          description: The information for the private access
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsPutPrivateAccessVnetSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsPutPrivateAccessVnetSlotResponse>
  - name: >-
      putPrivateAccessVnetSlot(string, string, PrivateAccess, string,
      RequestOptionsBase, ServiceCallback<PrivateAccess>)
    uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function putPrivateAccessVnetSlot(resourceGroupName: string, name:
        string, access: PrivateAccess, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: access
          type: <xref uid="@azure/arm-appservice.PrivateAccess" />
          description: The information for the private access
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: >-
      putPrivateAccessVnetSlot(string, string, PrivateAccess, string,
      ServiceCallback<PrivateAccess>)
    uid: '@azure/arm-appservice.WebApps.putPrivateAccessVnetSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function putPrivateAccessVnetSlot(resourceGroupName: string, name:
        string, access: PrivateAccess, slot: string, callback:
        ServiceCallback<PrivateAccess>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: access
          type: <xref uid="@azure/arm-appservice.PrivateAccess" />
          description: The information for the private access
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PrivateAccess"
            />&gt;
          description: |
            The callback
  - name: >-
      recoverSiteConfigurationSnapshot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Reverts the configuration of an app to a previous
      snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshot(resourceGroupName: string,
        name: string, snapshotId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      recoverSiteConfigurationSnapshot(string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshot(resourceGroupName: string,
        name: string, snapshotId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      recoverSiteConfigurationSnapshot(string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshot(resourceGroupName: string,
        name: string, snapshotId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      recoverSiteConfigurationSnapshotSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Reverts the configuration of an app to a previous
      snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshotSlot(resourceGroupName: string,
        name: string, snapshotId: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      recoverSiteConfigurationSnapshotSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshotSlot(resourceGroupName: string,
        name: string, snapshotId: string, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      recoverSiteConfigurationSnapshotSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.recoverSiteConfigurationSnapshotSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverSiteConfigurationSnapshotSlot(resourceGroupName: string,
        name: string, snapshotId: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: snapshotId
          type: string
          description: The ID of the snapshot to read.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will return

            configuration for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'resetProductionSlotConfig(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.resetProductionSlotConfig'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Resets the configuration settings of the current slot if
      they were previously

      modified by calling the API with POST.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetProductionSlotConfig(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      resetProductionSlotConfig(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.resetProductionSlotConfig_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetProductionSlotConfig(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'resetProductionSlotConfig(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.resetProductionSlotConfig_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetProductionSlotConfig(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      resetSlotConfigurationSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Resets the configuration settings of the current slot if
      they were previously

      modified by calling the API with POST.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetSlotConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            resets

            configuration settings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      resetSlotConfigurationSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetSlotConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            resets

            configuration settings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'resetSlotConfigurationSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.resetSlotConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetSlotConfigurationSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            resets

            configuration settings for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'restart(string, string, Models.WebAppsRestartOptionalParams)'
    uid: '@azure/arm-appservice.WebApps.restart'
    package: '@azure/arm-appservice'
    summary: 'Description for Restarts an app (or deployment slot, if specified).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restart(resourceGroupName: string, name: string, options?:
        Models.WebAppsRestartOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="Models.WebAppsRestartOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'restart(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.restart_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restart(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      restart(string, string, WebAppsRestartOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.restart_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restart(resourceGroupName: string, name: string, options:
        WebAppsRestartOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="@azure/arm-appservice.WebAppsRestartOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      restartSlot(string, string, string,
      Models.WebAppsRestartSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.restartSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Restarts an app (or deployment slot, if specified).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restartSlot(resourceGroupName: string, name: string, slot:
        string, options?: Models.WebAppsRestartSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restart the

            production slot.
        - id: options
          type: <xref uid="Models.WebAppsRestartSlotOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'restartSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.restartSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restartSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restart the

            production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      restartSlot(string, string, string, WebAppsRestartSlotOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.restartSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restartSlot(resourceGroupName: string, name: string, slot:
        string, options: WebAppsRestartSlotOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restart the

            production slot.
        - id: options
          type: >-
            <xref uid="@azure/arm-appservice.WebAppsRestartSlotOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'restore(string, string, string, RestoreRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.restore'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Restores a specific backup to another app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restore(resourceGroupName: string, name: string, backupId:
        string, request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      restoreFromBackupBlob(string, string, RestoreRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.restoreFromBackupBlob'
    package: '@azure/arm-appservice'
    summary: Description for Restores an app from a backup blob in Azure Storage.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreFromBackupBlob(resourceGroupName: string, name: string,
        request: RestoreRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      restoreFromBackupBlobSlot(string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.restoreFromBackupBlobSlot'
    package: '@azure/arm-appservice'
    summary: Description for Restores an app from a backup blob in Azure Storage.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreFromBackupBlobSlot(resourceGroupName: string, name:
        string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      restoreFromDeletedApp(string, string, DeletedAppRestoreRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.restoreFromDeletedApp'
    package: '@azure/arm-appservice'
    summary: Description for Restores a deleted web app to this web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreFromDeletedApp(resourceGroupName: string, name: string,
        restoreRequest: DeletedAppRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.DeletedAppRestoreRequest" />
          description: Deleted web app restore information.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      restoreFromDeletedAppSlot(string, string, DeletedAppRestoreRequest,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.restoreFromDeletedAppSlot'
    package: '@azure/arm-appservice'
    summary: Description for Restores a deleted web app to this web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreFromDeletedAppSlot(resourceGroupName: string, name:
        string, restoreRequest: DeletedAppRestoreRequest, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.DeletedAppRestoreRequest" />
          description: Deleted web app restore information.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      restoreSlot(string, string, string, RestoreRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.restoreSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Restores a specific backup to another app (or deployment
      slot, if specified).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreSlot(resourceGroupName: string, name: string, backupId:
        string, request: RestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: backupId
          type: string
          description: ID of the backup.
        - id: request
          type: <xref uid="@azure/arm-appservice.RestoreRequest" />
          description: Information on restore request .
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will restore a

            backup of the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      restoreSnapshot(string, string, SnapshotRestoreRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.restoreSnapshot'
    package: '@azure/arm-appservice'
    summary: Description for Restores a web app from a snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreSnapshot(resourceGroupName: string, name: string,
        restoreRequest: SnapshotRestoreRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.SnapshotRestoreRequest" />
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      restoreSnapshotSlot(string, string, SnapshotRestoreRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.restoreSnapshotSlot'
    package: '@azure/arm-appservice'
    summary: Description for Restores a web app from a snapshot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreSnapshotSlot(resourceGroupName: string, name: string,
        restoreRequest: SnapshotRestoreRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: restoreRequest
          type: <xref uid="@azure/arm-appservice.SnapshotRestoreRequest" />
          description: >-
            Snapshot restore settings. Snapshot information can be obtained by
            calling

            GetDeletedSites or GetSiteSnapshots API.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'runTriggeredWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.runTriggeredWebJob'
    package: '@azure/arm-appservice'
    summary: 'Description for Run a triggered web job for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function runTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      runTriggeredWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.runTriggeredWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function runTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'runTriggeredWebJob(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.runTriggeredWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function runTriggeredWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      runTriggeredWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Run a triggered web job for an app, or a deployment slot.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function runTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      runTriggeredWebJobSlot(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function runTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      runTriggeredWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.runTriggeredWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function runTriggeredWebJobSlot(resourceGroupName: string, name: string,
        webJobName: string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            uses the production

            slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'start(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.start'
    package: '@azure/arm-appservice'
    summary: 'Description for Starts an app (or deployment slot, if specified).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function start(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'start(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.start_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function start(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'start(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.start_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function start(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'startContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.startContinuousWebJob'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Start a continuous web job for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      startContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.startContinuousWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'startContinuousWebJob(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.startContinuousWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      startContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.startContinuousWebJobSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Start a continuous web job for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      startContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.startContinuousWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      startContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.startContinuousWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      startNetworkTrace(string, string,
      Models.WebAppsStartNetworkTraceOptionalParams)
    uid: '@azure/arm-appservice.WebApps.startNetworkTrace'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startNetworkTrace(resourceGroupName: string, name: string,
        options?: Models.WebAppsStartNetworkTraceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: <xref uid="Models.WebAppsStartNetworkTraceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsStartNetworkTraceResponse" />&gt;
        description: Promise<Models.WebAppsStartNetworkTraceResponse>
  - name: >-
      startNetworkTraceSlot(string, string, string,
      Models.WebAppsStartNetworkTraceSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.startNetworkTraceSlot'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, options?:
        Models.WebAppsStartNetworkTraceSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: <xref uid="Models.WebAppsStartNetworkTraceSlotOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsStartNetworkTraceSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsStartNetworkTraceSlotResponse>
  - name: 'startSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.startSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Starts an app (or deployment slot, if specified).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startSlot(resourceGroupName: string, name: string, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will start the

            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      startSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.startSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startSlot(resourceGroupName: string, name: string, slot:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will start the

            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'startSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.startSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startSlot(resourceGroupName: string, name: string, slot:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will start the

            production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      startWebSiteNetworkTrace(string, string,
      Models.WebAppsStartWebSiteNetworkTraceOptionalParams)
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Start capturing network packets for the site (To be
      deprecated).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options?: Models.WebAppsStartWebSiteNetworkTraceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: <xref uid="Models.WebAppsStartWebSiteNetworkTraceOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsStartWebSiteNetworkTraceResponse"
          />&gt;
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceResponse>
  - name: 'startWebSiteNetworkTrace(string, string, ServiceCallback<string>)'
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTrace(resourceGroupName: string, name:
        string, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: >-
      startWebSiteNetworkTrace(string, string,
      WebAppsStartWebSiteNetworkTraceOptionalParams, ServiceCallback<string>)
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTrace_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options: WebAppsStartWebSiteNetworkTraceOptionalParams,
        callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsStartWebSiteNetworkTraceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: >-
      startWebSiteNetworkTraceOperation(string, string,
      Models.WebAppsStartWebSiteNetworkTraceOperationOptionalParams)
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceOperation'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTraceOperation(resourceGroupName: string,
        name: string, options?:
        Models.WebAppsStartWebSiteNetworkTraceOperationOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: >-
            <xref
            uid="Models.WebAppsStartWebSiteNetworkTraceOperationOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsStartWebSiteNetworkTraceOperationResponse" />&gt;
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceOperationResponse>
  - name: >-
      startWebSiteNetworkTraceOperationSlot(string, string, string,
      Models.WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceOperationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Start capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTraceOperationSlot(resourceGroupName:
        string, name: string, slot: string, options?:
        Models.WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: >-
            <xref
            uid="Models.WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsStartWebSiteNetworkTraceOperationSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceOperationSlotResponse>
  - name: >-
      startWebSiteNetworkTraceSlot(string, string, string,
      Models.WebAppsStartWebSiteNetworkTraceSlotOptionalParams)
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Start capturing network packets for the site (To be
      deprecated).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options?:
        Models.WebAppsStartWebSiteNetworkTraceSlotOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: >-
            <xref uid="Models.WebAppsStartWebSiteNetworkTraceSlotOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsStartWebSiteNetworkTraceSlotResponse" />&gt;
        description: Promise<Models.WebAppsStartWebSiteNetworkTraceSlotResponse>
  - name: >-
      startWebSiteNetworkTraceSlot(string, string, string,
      ServiceCallback<string>)
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: >-
      startWebSiteNetworkTraceSlot(string, string, string,
      WebAppsStartWebSiteNetworkTraceSlotOptionalParams,
      ServiceCallback<string>)
    uid: '@azure/arm-appservice.WebApps.startWebSiteNetworkTraceSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options:
        WebAppsStartWebSiteNetworkTraceSlotOptionalParams, callback:
        ServiceCallback<string>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.WebAppsStartWebSiteNetworkTraceSlotOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;string&gt;
          description: |
            The callback
  - name: 'stop(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.stop'
    package: '@azure/arm-appservice'
    summary: 'Description for Stops an app (or deployment slot, if specified).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stop(resourceGroupName: string, name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'stop(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stop_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stop(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stop(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stop_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stop(resourceGroupName: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopContinuousWebJob(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.stopContinuousWebJob'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Stop a continuous web job for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopContinuousWebJob(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopContinuousWebJob_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopContinuousWebJob(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stopContinuousWebJob_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopContinuousWebJob(resourceGroupName: string, name: string,
        webJobName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      stopContinuousWebJobSlot(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Stop a continuous web job for an app, or a deployment
      slot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopContinuousWebJobSlot(string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      stopContinuousWebJobSlot(string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopContinuousWebJobSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopContinuousWebJobSlot(resourceGroupName: string, name:
        string, webJobName: string, slot: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Site name.
        - id: webJobName
          type: string
          description: Name of Web Job.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            deletes a

            deployment for the production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopNetworkTrace(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.stopNetworkTrace'
    package: '@azure/arm-appservice'
    summary: Description for Stop ongoing capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopNetworkTrace(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopNetworkTrace(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopNetworkTrace_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopNetworkTrace(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopNetworkTrace(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stopNetworkTrace_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopNetworkTrace(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopNetworkTraceSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.stopNetworkTraceSlot'
    package: '@azure/arm-appservice'
    summary: Description for Stop ongoing capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopNetworkTraceSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopNetworkTraceSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopNetworkTraceSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stopNetworkTraceSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopNetworkTraceSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.stopSlot'
    package: '@azure/arm-appservice'
    summary: 'Description for Stops an app (or deployment slot, if specified).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopSlot(resourceGroupName: string, name: string, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will stop the

            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopSlot(resourceGroupName: string, name: string, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will stop the

            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stopSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopSlot(resourceGroupName: string, name: string, slot: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will stop the

            production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopWebSiteNetworkTrace(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace'
    package: '@azure/arm-appservice'
    summary: Description for Stop ongoing capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopWebSiteNetworkTrace(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopWebSiteNetworkTrace(resourceGroupName: string, name:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopWebSiteNetworkTrace(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTrace_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopWebSiteNetworkTrace(resourceGroupName: string, name:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      stopWebSiteNetworkTraceSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot'
    package: '@azure/arm-appservice'
    summary: Description for Stop ongoing capturing network packets for the site.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopWebSiteNetworkTraceSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopWebSiteNetworkTraceSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.stopWebSiteNetworkTraceSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopWebSiteNetworkTraceSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: slot
          type: string
          description: The name of the slot for this web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      swapSlotSlot(string, string, CsmSlotEntity, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.swapSlotSlot'
    package: '@azure/arm-appservice'
    summary: Description for Swaps two deployment slots of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function swapSlotSlot(resourceGroupName: string, name: string,
        slotSwapEntity: CsmSlotEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: slot
          type: string
          description: >-
            Name of the source slot. If a slot is not specified, the production
            slot is used as

            the source slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      swapSlotWithProduction(string, string, CsmSlotEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.swapSlotWithProduction'
    package: '@azure/arm-appservice'
    summary: Description for Swaps two deployment slots of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function swapSlotWithProduction(resourceGroupName: string, name: string,
        slotSwapEntity: CsmSlotEntity, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotSwapEntity
          type: <xref uid="@azure/arm-appservice.CsmSlotEntity" />
          description: JSON object that contains the target slot name. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'syncFunctions(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.syncFunctions'
    package: '@azure/arm-appservice'
    summary: Description for Syncs function trigger metadata to the management database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctions(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'syncFunctions(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncFunctions_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctions(resourceGroupName: string, name: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncFunctions(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncFunctions_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctions(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncFunctionsSlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.syncFunctionsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Syncs function trigger metadata to the management database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionsSlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      syncFunctionsSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.syncFunctionsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionsSlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncFunctionsSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncFunctionsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionsSlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncFunctionTriggers(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.syncFunctionTriggers'
    package: '@azure/arm-appservice'
    summary: Description for Syncs function trigger metadata to the management database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionTriggers(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      syncFunctionTriggers(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.syncFunctionTriggers_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionTriggers(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncFunctionTriggers(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncFunctionTriggers_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionTriggers(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      syncFunctionTriggersSlot(string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot'
    package: '@azure/arm-appservice'
    summary: Description for Syncs function trigger metadata to the management database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      syncFunctionTriggersSlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncFunctionTriggersSlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncFunctionTriggersSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncFunctionTriggersSlot(resourceGroupName: string, name:
        string, slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slot
          type: string
          description: Name of the deployment slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncRepository(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.syncRepository'
    package: '@azure/arm-appservice'
    summary: Description for Sync web app repository.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncRepository(resourceGroupName: string, name: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'syncRepository(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncRepository_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncRepository(resourceGroupName: string, name: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncRepository(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncRepository_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncRepository(resourceGroupName: string, name: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncRepositorySlot(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.syncRepositorySlot'
    package: '@azure/arm-appservice'
    summary: Description for Sync web app repository.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncRepositorySlot(resourceGroupName: string, name: string,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      syncRepositorySlot(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-appservice.WebApps.syncRepositorySlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncRepositorySlot(resourceGroupName: string, name: string,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'syncRepositorySlot(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-appservice.WebApps.syncRepositorySlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncRepositorySlot(resourceGroupName: string, name: string,
        slot: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'update(string, string, SitePatchResource, msRest.RequestOptionsBase)'
    uid: '@azure/arm-appservice.WebApps.update'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new web, mobile, or API app in an existing
      resource group, or updates

      an existing app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, siteEnvelope:
        SitePatchResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.SitePatchResource" />
          description: A JSON representation of the app properties. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdateResponse" />&gt;
        description: Promise<Models.WebAppsUpdateResponse>
  - name: >-
      update(string, string, SitePatchResource, RequestOptionsBase,
      ServiceCallback<Site>)
    uid: '@azure/arm-appservice.WebApps.update_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, siteEnvelope:
        SitePatchResource, options: RequestOptionsBase, callback:
        ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.SitePatchResource" />
          description: A JSON representation of the app properties. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: 'update(string, string, SitePatchResource, ServiceCallback<Site>)'
    uid: '@azure/arm-appservice.WebApps.update_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, siteEnvelope:
        SitePatchResource, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.SitePatchResource" />
          description: A JSON representation of the app properties. See example.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: >-
      updateApplicationSettings(string, string, StringDictionary,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateApplicationSettings'
    package: '@azure/arm-appservice'
    summary: Description for Replaces the application settings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateApplicationSettings(resourceGroupName: string, name:
        string, appSettings: StringDictionary, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: appSettings
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Application settings of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateApplicationSettingsResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateApplicationSettingsResponse>
  - name: >-
      updateApplicationSettings(string, string, StringDictionary,
      RequestOptionsBase, ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateApplicationSettings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateApplicationSettings(resourceGroupName: string, name:
        string, appSettings: StringDictionary, options: RequestOptionsBase,
        callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: appSettings
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Application settings of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateApplicationSettings(string, string, StringDictionary,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateApplicationSettings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateApplicationSettings(resourceGroupName: string, name:
        string, appSettings: StringDictionary, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: appSettings
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Application settings of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateApplicationSettingsSlot(string, string, StringDictionary, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Replaces the application settings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateApplicationSettingsSlot(resourceGroupName: string, name:
        string, appSettings: StringDictionary, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: appSettings
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Application settings of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            application settings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateApplicationSettingsSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateApplicationSettingsSlotResponse>
  - name: >-
      updateApplicationSettingsSlot(string, string, StringDictionary, string,
      RequestOptionsBase, ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateApplicationSettingsSlot(resourceGroupName: string, name:
        string, appSettings: StringDictionary, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: appSettings
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Application settings of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            application settings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateApplicationSettingsSlot(string, string, StringDictionary, string,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateApplicationSettingsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateApplicationSettingsSlot(resourceGroupName: string, name:
        string, appSettings: StringDictionary, slot: string, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: appSettings
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Application settings of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            application settings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettings(string, string, SiteAuthSettings,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettings'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates the Authentication / Authorization settings
      associated with web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettings(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettings
          type: <xref uid="@azure/arm-appservice.SiteAuthSettings" />
          description: Auth settings associated with web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdateAuthSettingsResponse" />&gt;
        description: Promise<Models.WebAppsUpdateAuthSettingsResponse>
  - name: >-
      updateAuthSettings(string, string, SiteAuthSettings, RequestOptionsBase,
      ServiceCallback<SiteAuthSettings>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettings(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, options: RequestOptionsBase,
        callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettings
          type: <xref uid="@azure/arm-appservice.SiteAuthSettings" />
          description: Auth settings associated with web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettings(string, string, SiteAuthSettings,
      ServiceCallback<SiteAuthSettings>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettings(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettings
          type: <xref uid="@azure/arm-appservice.SiteAuthSettings" />
          description: Auth settings associated with web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettingsSlot(string, string, SiteAuthSettings, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates the Authentication / Authorization settings
      associated with web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsSlot(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettings
          type: <xref uid="@azure/arm-appservice.SiteAuthSettings" />
          description: Auth settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateAuthSettingsSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateAuthSettingsSlotResponse>
  - name: >-
      updateAuthSettingsSlot(string, string, SiteAuthSettings, string,
      RequestOptionsBase, ServiceCallback<SiteAuthSettings>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsSlot(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettings
          type: <xref uid="@azure/arm-appservice.SiteAuthSettings" />
          description: Auth settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettingsSlot(string, string, SiteAuthSettings, string,
      ServiceCallback<SiteAuthSettings>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsSlot(resourceGroupName: string, name: string,
        siteAuthSettings: SiteAuthSettings, slot: string, callback:
        ServiceCallback<SiteAuthSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettings
          type: <xref uid="@azure/arm-appservice.SiteAuthSettings" />
          description: Auth settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettings" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettingsV2(string, string, SiteAuthSettingsV2,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsV2'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates site's Authentication / Authorization settings for
      apps via the V2

      format
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsV2(resourceGroupName: string, name: string,
        siteAuthSettingsV2: SiteAuthSettingsV2, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettingsV2
          type: <xref uid="@azure/arm-appservice.SiteAuthSettingsV2" />
          description: Auth settings associated with web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateAuthSettingsV2Response"
          />&gt;
        description: Promise<Models.WebAppsUpdateAuthSettingsV2Response>
  - name: >-
      updateAuthSettingsV2(string, string, SiteAuthSettingsV2,
      RequestOptionsBase, ServiceCallback<SiteAuthSettingsV2>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsV2_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsV2(resourceGroupName: string, name: string,
        siteAuthSettingsV2: SiteAuthSettingsV2, options: RequestOptionsBase,
        callback: ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettingsV2
          type: <xref uid="@azure/arm-appservice.SiteAuthSettingsV2" />
          description: Auth settings associated with web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettingsV2(string, string, SiteAuthSettingsV2,
      ServiceCallback<SiteAuthSettingsV2>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsV2_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsV2(resourceGroupName: string, name: string,
        siteAuthSettingsV2: SiteAuthSettingsV2, callback:
        ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettingsV2
          type: <xref uid="@azure/arm-appservice.SiteAuthSettingsV2" />
          description: Auth settings associated with web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettingsV2Slot(string, string, SiteAuthSettingsV2, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsV2Slot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates site's Authentication / Authorization settings for
      apps via the V2

      format
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsV2Slot(resourceGroupName: string, name:
        string, siteAuthSettingsV2: SiteAuthSettingsV2, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettingsV2
          type: <xref uid="@azure/arm-appservice.SiteAuthSettingsV2" />
          description: Auth settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateAuthSettingsV2SlotResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateAuthSettingsV2SlotResponse>
  - name: >-
      updateAuthSettingsV2Slot(string, string, SiteAuthSettingsV2, string,
      RequestOptionsBase, ServiceCallback<SiteAuthSettingsV2>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsV2Slot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsV2Slot(resourceGroupName: string, name:
        string, siteAuthSettingsV2: SiteAuthSettingsV2, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettingsV2
          type: <xref uid="@azure/arm-appservice.SiteAuthSettingsV2" />
          description: Auth settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: >-
      updateAuthSettingsV2Slot(string, string, SiteAuthSettingsV2, string,
      ServiceCallback<SiteAuthSettingsV2>)
    uid: '@azure/arm-appservice.WebApps.updateAuthSettingsV2Slot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAuthSettingsV2Slot(resourceGroupName: string, name:
        string, siteAuthSettingsV2: SiteAuthSettingsV2, slot: string, callback:
        ServiceCallback<SiteAuthSettingsV2>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: siteAuthSettingsV2
          type: <xref uid="@azure/arm-appservice.SiteAuthSettingsV2" />
          description: Auth settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteAuthSettingsV2" />&gt;
          description: |
            The callback
  - name: >-
      updateAzureStorageAccounts(string, string,
      AzureStoragePropertyDictionaryResource, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccounts'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates the Azure storage account configurations of an
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAzureStorageAccounts(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: azureStorageAccounts
          type: >-
            <xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />
          description: Azure storage accounts of the app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateAzureStorageAccountsResponse" />&gt;
        description: Promise<Models.WebAppsUpdateAzureStorageAccountsResponse>
  - name: >-
      updateAzureStorageAccounts(string, string,
      AzureStoragePropertyDictionaryResource, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccounts_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAzureStorageAccounts(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: azureStorageAccounts
          type: >-
            <xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />
          description: Azure storage accounts of the app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: >-
      updateAzureStorageAccounts(string, string,
      AzureStoragePropertyDictionaryResource,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccounts_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAzureStorageAccounts(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        callback: ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: azureStorageAccounts
          type: >-
            <xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />
          description: Azure storage accounts of the app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: >-
      updateAzureStorageAccountsSlot(string, string,
      AzureStoragePropertyDictionaryResource, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates the Azure storage account configurations of an
      app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: azureStorageAccounts
          type: >-
            <xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />
          description: Azure storage accounts of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateAzureStorageAccountsSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateAzureStorageAccountsSlotResponse>
  - name: >-
      updateAzureStorageAccountsSlot(string, string,
      AzureStoragePropertyDictionaryResource, string, RequestOptionsBase,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: azureStorageAccounts
          type: >-
            <xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />
          description: Azure storage accounts of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: >-
      updateAzureStorageAccountsSlot(string, string,
      AzureStoragePropertyDictionaryResource, string,
      ServiceCallback<AzureStoragePropertyDictionaryResource>)
    uid: '@azure/arm-appservice.WebApps.updateAzureStorageAccountsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAzureStorageAccountsSlot(resourceGroupName: string, name:
        string, azureStorageAccounts: AzureStoragePropertyDictionaryResource,
        slot: string, callback:
        ServiceCallback<AzureStoragePropertyDictionaryResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: azureStorageAccounts
          type: >-
            <xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />
          description: Azure storage accounts of the app.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            Azure storage account configurations for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.AzureStoragePropertyDictionaryResource"
            />&gt;
          description: |
            The callback
  - name: >-
      updateBackupConfiguration(string, string, BackupRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateBackupConfiguration'
    package: '@azure/arm-appservice'
    summary: Description for Updates the backup configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateBackupConfiguration(resourceGroupName: string, name:
        string, request: BackupRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Edited backup configuration.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateBackupConfigurationResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateBackupConfigurationResponse>
  - name: >-
      updateBackupConfiguration(string, string, BackupRequest,
      RequestOptionsBase, ServiceCallback<BackupRequest>)
    uid: '@azure/arm-appservice.WebApps.updateBackupConfiguration_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateBackupConfiguration(resourceGroupName: string, name:
        string, request: BackupRequest, options: RequestOptionsBase, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Edited backup configuration.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      updateBackupConfiguration(string, string, BackupRequest,
      ServiceCallback<BackupRequest>)
    uid: '@azure/arm-appservice.WebApps.updateBackupConfiguration_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateBackupConfiguration(resourceGroupName: string, name:
        string, request: BackupRequest, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Edited backup configuration.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      updateBackupConfigurationSlot(string, string, BackupRequest, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the backup configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateBackupConfigurationSlot(resourceGroupName: string, name:
        string, request: BackupRequest, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Edited backup configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            backup configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateBackupConfigurationSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateBackupConfigurationSlotResponse>
  - name: >-
      updateBackupConfigurationSlot(string, string, BackupRequest, string,
      RequestOptionsBase, ServiceCallback<BackupRequest>)
    uid: '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateBackupConfigurationSlot(resourceGroupName: string, name:
        string, request: BackupRequest, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Edited backup configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            backup configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      updateBackupConfigurationSlot(string, string, BackupRequest, string,
      ServiceCallback<BackupRequest>)
    uid: '@azure/arm-appservice.WebApps.updateBackupConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateBackupConfigurationSlot(resourceGroupName: string, name:
        string, request: BackupRequest, slot: string, callback:
        ServiceCallback<BackupRequest>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: request
          type: <xref uid="@azure/arm-appservice.BackupRequest" />
          description: Edited backup configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            backup configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.BackupRequest"
            />&gt;
          description: |
            The callback
  - name: >-
      updateConfiguration(string, string, SiteConfigResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateConfiguration'
    package: '@azure/arm-appservice'
    summary: Description for Updates the configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConfiguration(resourceGroupName: string, name: string,
        siteConfig: SiteConfigResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateConfigurationResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateConfigurationResponse>
  - name: >-
      updateConfiguration(string, string, SiteConfigResource,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.updateConfiguration_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConfiguration(resourceGroupName: string, name: string,
        siteConfig: SiteConfigResource, options: RequestOptionsBase, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      updateConfiguration(string, string, SiteConfigResource,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.updateConfiguration_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConfiguration(resourceGroupName: string, name: string,
        siteConfig: SiteConfigResource, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      updateConfigurationSlot(string, string, SiteConfigResource, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateConfigurationSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConfigurationSlot(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateConfigurationSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateConfigurationSlotResponse>
  - name: >-
      updateConfigurationSlot(string, string, SiteConfigResource, string,
      RequestOptionsBase, ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.updateConfigurationSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConfigurationSlot(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      updateConfigurationSlot(string, string, SiteConfigResource, string,
      ServiceCallback<SiteConfigResource>)
    uid: '@azure/arm-appservice.WebApps.updateConfigurationSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConfigurationSlot(resourceGroupName: string, name:
        string, siteConfig: SiteConfigResource, slot: string, callback:
        ServiceCallback<SiteConfigResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteConfig
          type: <xref uid="@azure/arm-appservice.SiteConfigResource" />
          description: JSON representation of a SiteConfig object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update

            configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteConfigResource" />&gt;
          description: |
            The callback
  - name: >-
      updateConnectionStrings(string, string, ConnectionStringDictionary,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateConnectionStrings'
    package: '@azure/arm-appservice'
    summary: Description for Replaces the connection strings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConnectionStrings(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionStrings
          type: <xref uid="@azure/arm-appservice.ConnectionStringDictionary" />
          description: Connection strings of the app or deployment slot. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateConnectionStringsResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateConnectionStringsResponse>
  - name: >-
      updateConnectionStrings(string, string, ConnectionStringDictionary,
      RequestOptionsBase, ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateConnectionStrings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConnectionStrings(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, options:
        RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionStrings
          type: <xref uid="@azure/arm-appservice.ConnectionStringDictionary" />
          description: Connection strings of the app or deployment slot. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateConnectionStrings(string, string, ConnectionStringDictionary,
      ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateConnectionStrings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConnectionStrings(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionStrings
          type: <xref uid="@azure/arm-appservice.ConnectionStringDictionary" />
          description: Connection strings of the app or deployment slot. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateConnectionStringsSlot(string, string, ConnectionStringDictionary,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateConnectionStringsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Replaces the connection strings of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConnectionStringsSlot(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionStrings
          type: <xref uid="@azure/arm-appservice.ConnectionStringDictionary" />
          description: Connection strings of the app or deployment slot. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            connection settings for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateConnectionStringsSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateConnectionStringsSlotResponse>
  - name: >-
      updateConnectionStringsSlot(string, string, ConnectionStringDictionary,
      string, RequestOptionsBase, ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateConnectionStringsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConnectionStringsSlot(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, slot: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionStrings
          type: <xref uid="@azure/arm-appservice.ConnectionStringDictionary" />
          description: Connection strings of the app or deployment slot. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            connection settings for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateConnectionStringsSlot(string, string, ConnectionStringDictionary,
      string, ServiceCallback<ConnectionStringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateConnectionStringsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateConnectionStringsSlot(resourceGroupName: string, name:
        string, connectionStrings: ConnectionStringDictionary, slot: string,
        callback: ServiceCallback<ConnectionStringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionStrings
          type: <xref uid="@azure/arm-appservice.ConnectionStringDictionary" />
          description: Connection strings of the app or deployment slot. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            connection settings for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.ConnectionStringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateDiagnosticLogsConfig(string, string, SiteLogsConfig,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig'
    package: '@azure/arm-appservice'
    summary: Description for Updates the logging configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDiagnosticLogsConfig(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteLogsConfig
          type: <xref uid="@azure/arm-appservice.SiteLogsConfig" />
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateDiagnosticLogsConfigResponse" />&gt;
        description: Promise<Models.WebAppsUpdateDiagnosticLogsConfigResponse>
  - name: >-
      updateDiagnosticLogsConfig(string, string, SiteLogsConfig,
      RequestOptionsBase, ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDiagnosticLogsConfig(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, options: RequestOptionsBase,
        callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteLogsConfig
          type: <xref uid="@azure/arm-appservice.SiteLogsConfig" />
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      updateDiagnosticLogsConfig(string, string, SiteLogsConfig,
      ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfig_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDiagnosticLogsConfig(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteLogsConfig
          type: <xref uid="@azure/arm-appservice.SiteLogsConfig" />
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      updateDiagnosticLogsConfigSlot(string, string, SiteLogsConfig, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the logging configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDiagnosticLogsConfigSlot(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteLogsConfig
          type: <xref uid="@azure/arm-appservice.SiteLogsConfig" />
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            logging configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateDiagnosticLogsConfigSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateDiagnosticLogsConfigSlotResponse>
  - name: >-
      updateDiagnosticLogsConfigSlot(string, string, SiteLogsConfig, string,
      RequestOptionsBase, ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDiagnosticLogsConfigSlot(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteLogsConfig
          type: <xref uid="@azure/arm-appservice.SiteLogsConfig" />
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            logging configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      updateDiagnosticLogsConfigSlot(string, string, SiteLogsConfig, string,
      ServiceCallback<SiteLogsConfig>)
    uid: '@azure/arm-appservice.WebApps.updateDiagnosticLogsConfigSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDiagnosticLogsConfigSlot(resourceGroupName: string, name:
        string, siteLogsConfig: SiteLogsConfig, slot: string, callback:
        ServiceCallback<SiteLogsConfig>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteLogsConfig
          type: <xref uid="@azure/arm-appservice.SiteLogsConfig" />
          description: >-
            A SiteLogsConfig JSON object that contains the logging configuration
            to

            change in the "properties" property.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            logging configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.SiteLogsConfig"
            />&gt;
          description: |
            The callback
  - name: >-
      updateDomainOwnershipIdentifier(string, string, string, Identifier,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a domain ownership identifier for web app, or
      updates an existing

      ownership identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateDomainOwnershipIdentifierResponse" />&gt;
        description: Promise<Models.WebAppsUpdateDomainOwnershipIdentifierResponse>
  - name: >-
      updateDomainOwnershipIdentifier(string, string, string, Identifier,
      RequestOptionsBase, ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, options: RequestOptionsBase,
        callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      updateDomainOwnershipIdentifier(string, string, string, Identifier,
      ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifier_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDomainOwnershipIdentifier(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      updateDomainOwnershipIdentifierSlot(string, string, string, Identifier,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a domain ownership identifier for web app, or
      updates an existing

      ownership identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateDomainOwnershipIdentifierSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateDomainOwnershipIdentifierSlotResponse>
  - name: >-
      updateDomainOwnershipIdentifierSlot(string, string, string, Identifier,
      string, RequestOptionsBase, ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      updateDomainOwnershipIdentifierSlot(string, string, string, Identifier,
      string, ServiceCallback<Identifier>)
    uid: '@azure/arm-appservice.WebApps.updateDomainOwnershipIdentifierSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDomainOwnershipIdentifierSlot(resourceGroupName: string,
        name: string, domainOwnershipIdentifierName: string,
        domainOwnershipIdentifier: Identifier, slot: string, callback:
        ServiceCallback<Identifier>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: domainOwnershipIdentifierName
          type: string
          description: Name of domain ownership identifier.
        - id: domainOwnershipIdentifier
          type: <xref uid="@azure/arm-appservice.Identifier" />
          description: A JSON representation of the domain ownership properties.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will delete the

            binding for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.Identifier"
            />&gt;
          description: |
            The callback
  - name: >-
      updateFtpAllowed(string, string, CsmPublishingCredentialsPoliciesEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateFtpAllowed'
    package: '@azure/arm-appservice'
    summary: Description for Updates whether FTP is allowed on the site or not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFtpAllowed(resourceGroupName: string, name: string,
        csmPublishingAccessPoliciesEntity:
        CsmPublishingCredentialsPoliciesEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: csmPublishingAccessPoliciesEntity
          type: >-
            <xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdateFtpAllowedResponse" />&gt;
        description: Promise<Models.WebAppsUpdateFtpAllowedResponse>
  - name: >-
      updateFtpAllowed(string, string, CsmPublishingCredentialsPoliciesEntity,
      RequestOptionsBase,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.updateFtpAllowed_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFtpAllowed(resourceGroupName: string, name: string,
        csmPublishingAccessPoliciesEntity:
        CsmPublishingCredentialsPoliciesEntity, options: RequestOptionsBase,
        callback: ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: csmPublishingAccessPoliciesEntity
          type: >-
            <xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />
          description: ''
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: >-
      updateFtpAllowed(string, string, CsmPublishingCredentialsPoliciesEntity,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.updateFtpAllowed_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFtpAllowed(resourceGroupName: string, name: string,
        csmPublishingAccessPoliciesEntity:
        CsmPublishingCredentialsPoliciesEntity, callback:
        ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: csmPublishingAccessPoliciesEntity
          type: >-
            <xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: >-
      updateHybridConnection(string, string, string, string, HybridConnection,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateHybridConnection'
    package: '@azure/arm-appservice'
    summary: Description for Creates a new Hybrid Connection using a Service Bus relay.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateHybridConnectionResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateHybridConnectionResponse>
  - name: >-
      updateHybridConnection(string, string, string, string, HybridConnection,
      RequestOptionsBase, ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.updateHybridConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      updateHybridConnection(string, string, string, string, HybridConnection,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.updateHybridConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateHybridConnection(resourceGroupName: string, name: string,
        namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, callback: ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      updateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateHybridConnectionSlot'
    package: '@azure/arm-appservice'
    summary: Description for Creates a new Hybrid Connection using a Service Bus relay.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateHybridConnectionSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateHybridConnectionSlotResponse>
  - name: >-
      updateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, RequestOptionsBase,
      ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.updateHybridConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      updateHybridConnectionSlot(string, string, string, string,
      HybridConnection, string, ServiceCallback<HybridConnection>)
    uid: '@azure/arm-appservice.WebApps.updateHybridConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateHybridConnectionSlot(resourceGroupName: string, name:
        string, namespaceName: string, relayName: string, connectionEnvelope:
        HybridConnection, slot: string, callback:
        ServiceCallback<HybridConnection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: The name of the web app.
        - id: namespaceName
          type: string
          description: The namespace for this hybrid connection.
        - id: relayName
          type: string
          description: The relay name for this hybrid connection.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.HybridConnection" />
          description: The details of the hybrid connection.
        - id: slot
          type: string
          description: The name of the slot for the web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.HybridConnection" />&gt;
          description: |
            The callback
  - name: >-
      updateMetadata(string, string, StringDictionary,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateMetadata'
    package: '@azure/arm-appservice'
    summary: Description for Replaces the metadata of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMetadata(resourceGroupName: string, name: string,
        metadata: StringDictionary, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: metadata
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Edited metadata of the app or deployment slot. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdateMetadataResponse" />&gt;
        description: Promise<Models.WebAppsUpdateMetadataResponse>
  - name: >-
      updateMetadata(string, string, StringDictionary, RequestOptionsBase,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateMetadata_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMetadata(resourceGroupName: string, name: string,
        metadata: StringDictionary, options: RequestOptionsBase, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: metadata
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Edited metadata of the app or deployment slot. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateMetadata(string, string, StringDictionary,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateMetadata_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMetadata(resourceGroupName: string, name: string,
        metadata: StringDictionary, callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: metadata
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Edited metadata of the app or deployment slot. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateMetadataSlot(string, string, StringDictionary, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateMetadataSlot'
    package: '@azure/arm-appservice'
    summary: Description for Replaces the metadata of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMetadataSlot(resourceGroupName: string, name: string,
        metadata: StringDictionary, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: metadata
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Edited metadata of the app or deployment slot. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            metadata for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdateMetadataSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateMetadataSlotResponse>
  - name: >-
      updateMetadataSlot(string, string, StringDictionary, string,
      RequestOptionsBase, ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateMetadataSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMetadataSlot(resourceGroupName: string, name: string,
        metadata: StringDictionary, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: metadata
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Edited metadata of the app or deployment slot. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            metadata for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updateMetadataSlot(string, string, StringDictionary, string,
      ServiceCallback<StringDictionary>)
    uid: '@azure/arm-appservice.WebApps.updateMetadataSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMetadataSlot(resourceGroupName: string, name: string,
        metadata: StringDictionary, slot: string, callback:
        ServiceCallback<StringDictionary>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: metadata
          type: <xref uid="@azure/arm-appservice.StringDictionary" />
          description: Edited metadata of the app or deployment slot. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            metadata for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.StringDictionary" />&gt;
          description: |
            The callback
  - name: >-
      updatePremierAddOn(string, string, string, PremierAddOnPatchResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updatePremierAddOn'
    package: '@azure/arm-appservice'
    summary: Description for Updates a named add-on of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updatePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOnPatchResource" />
          description: A JSON representation of the edited premier add-on.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdatePremierAddOnResponse" />&gt;
        description: Promise<Models.WebAppsUpdatePremierAddOnResponse>
  - name: >-
      updatePremierAddOn(string, string, string, PremierAddOnPatchResource,
      RequestOptionsBase, ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.updatePremierAddOn_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updatePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource,
        options: RequestOptionsBase, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOnPatchResource" />
          description: A JSON representation of the edited premier add-on.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      updatePremierAddOn(string, string, string, PremierAddOnPatchResource,
      ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.updatePremierAddOn_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updatePremierAddOn(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource,
        callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOnPatchResource" />
          description: A JSON representation of the edited premier add-on.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      updatePremierAddOnSlot(string, string, string, PremierAddOnPatchResource,
      string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updatePremierAddOnSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates a named add-on of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updatePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOnPatchResource" />
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdatePremierAddOnSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdatePremierAddOnSlotResponse>
  - name: >-
      updatePremierAddOnSlot(string, string, string, PremierAddOnPatchResource,
      string, RequestOptionsBase, ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.updatePremierAddOnSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updatePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOnPatchResource" />
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      updatePremierAddOnSlot(string, string, string, PremierAddOnPatchResource,
      string, ServiceCallback<PremierAddOn>)
    uid: '@azure/arm-appservice.WebApps.updatePremierAddOnSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updatePremierAddOnSlot(resourceGroupName: string, name: string,
        premierAddOnName: string, premierAddOn: PremierAddOnPatchResource, slot:
        string, callback: ServiceCallback<PremierAddOn>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: premierAddOnName
          type: string
          description: Add-on name.
        - id: premierAddOn
          type: <xref uid="@azure/arm-appservice.PremierAddOnPatchResource" />
          description: A JSON representation of the edited premier add-on.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            named add-on for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PremierAddOn"
            />&gt;
          description: |
            The callback
  - name: >-
      updateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new hybrid connection configuration (PUT), or
      updates an existing one

      (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateRelayServiceConnectionResponse" />&gt;
        description: Promise<Models.WebAppsUpdateRelayServiceConnectionResponse>
  - name: >-
      updateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, options: RequestOptionsBase, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      updateRelayServiceConnection(string, string, string,
      RelayServiceConnectionEntity,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRelayServiceConnection(resourceGroupName: string, name:
        string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      updateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new hybrid connection configuration (PUT), or
      updates an existing one

      (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateRelayServiceConnectionSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateRelayServiceConnectionSlotResponse>
  - name: >-
      updateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string, RequestOptionsBase,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, options: RequestOptionsBase,
        callback: ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      updateRelayServiceConnectionSlot(string, string, string,
      RelayServiceConnectionEntity, string,
      ServiceCallback<RelayServiceConnectionEntity>)
    uid: '@azure/arm-appservice.WebApps.updateRelayServiceConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRelayServiceConnectionSlot(resourceGroupName: string,
        name: string, entityName: string, connectionEnvelope:
        RelayServiceConnectionEntity, slot: string, callback:
        ServiceCallback<RelayServiceConnectionEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: entityName
          type: string
          description: Name of the hybrid connection configuration.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.RelayServiceConnectionEntity" />
          description: Details of the hybrid connection configuration.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create or

            update a hybrid connection for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.RelayServiceConnectionEntity" />&gt;
          description: |
            The callback
  - name: >-
      updateScmAllowed(string, string, CsmPublishingCredentialsPoliciesEntity,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateScmAllowed'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates whether user publishing credentials are allowed on
      the site or not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateScmAllowed(resourceGroupName: string, name: string,
        csmPublishingAccessPoliciesEntity:
        CsmPublishingCredentialsPoliciesEntity, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: csmPublishingAccessPoliciesEntity
          type: >-
            <xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdateScmAllowedResponse" />&gt;
        description: Promise<Models.WebAppsUpdateScmAllowedResponse>
  - name: >-
      updateScmAllowed(string, string, CsmPublishingCredentialsPoliciesEntity,
      RequestOptionsBase,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.updateScmAllowed_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateScmAllowed(resourceGroupName: string, name: string,
        csmPublishingAccessPoliciesEntity:
        CsmPublishingCredentialsPoliciesEntity, options: RequestOptionsBase,
        callback: ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: csmPublishingAccessPoliciesEntity
          type: >-
            <xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />
          description: ''
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: >-
      updateScmAllowed(string, string, CsmPublishingCredentialsPoliciesEntity,
      ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
    uid: '@azure/arm-appservice.WebApps.updateScmAllowed_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateScmAllowed(resourceGroupName: string, name: string,
        csmPublishingAccessPoliciesEntity:
        CsmPublishingCredentialsPoliciesEntity, callback:
        ServiceCallback<CsmPublishingCredentialsPoliciesEntity>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: csmPublishingAccessPoliciesEntity
          type: >-
            <xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.CsmPublishingCredentialsPoliciesEntity"
            />&gt;
          description: |
            The callback
  - name: >-
      updateSitePushSettings(string, string, PushSettings,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSitePushSettings'
    package: '@azure/arm-appservice'
    summary: Description for Updates the Push settings associated with web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSitePushSettings(resourceGroupName: string, name: string,
        pushSettings: PushSettings, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: pushSettings
          type: <xref uid="@azure/arm-appservice.PushSettings" />
          description: Push settings associated with web app.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateSitePushSettingsResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateSitePushSettingsResponse>
  - name: >-
      updateSitePushSettings(string, string, PushSettings, RequestOptionsBase,
      ServiceCallback<PushSettings>)
    uid: '@azure/arm-appservice.WebApps.updateSitePushSettings_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSitePushSettings(resourceGroupName: string, name: string,
        pushSettings: PushSettings, options: RequestOptionsBase, callback:
        ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: pushSettings
          type: <xref uid="@azure/arm-appservice.PushSettings" />
          description: Push settings associated with web app.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: >-
      updateSitePushSettings(string, string, PushSettings,
      ServiceCallback<PushSettings>)
    uid: '@azure/arm-appservice.WebApps.updateSitePushSettings_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSitePushSettings(resourceGroupName: string, name: string,
        pushSettings: PushSettings, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: pushSettings
          type: <xref uid="@azure/arm-appservice.PushSettings" />
          description: Push settings associated with web app.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: >-
      updateSitePushSettingsSlot(string, string, PushSettings, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the Push settings associated with web app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSitePushSettingsSlot(resourceGroupName: string, name:
        string, pushSettings: PushSettings, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: pushSettings
          type: <xref uid="@azure/arm-appservice.PushSettings" />
          description: Push settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateSitePushSettingsSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateSitePushSettingsSlotResponse>
  - name: >-
      updateSitePushSettingsSlot(string, string, PushSettings, string,
      RequestOptionsBase, ServiceCallback<PushSettings>)
    uid: '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSitePushSettingsSlot(resourceGroupName: string, name:
        string, pushSettings: PushSettings, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: pushSettings
          type: <xref uid="@azure/arm-appservice.PushSettings" />
          description: Push settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: >-
      updateSitePushSettingsSlot(string, string, PushSettings, string,
      ServiceCallback<PushSettings>)
    uid: '@azure/arm-appservice.WebApps.updateSitePushSettingsSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSitePushSettingsSlot(resourceGroupName: string, name:
        string, pushSettings: PushSettings, slot: string, callback:
        ServiceCallback<PushSettings>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of web app.
        - id: pushSettings
          type: <xref uid="@azure/arm-appservice.PushSettings" />
          description: Push settings associated with web app.
        - id: slot
          type: string
          description: >-
            Name of web app slot. If not specified then will default to
            production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.PushSettings"
            />&gt;
          description: |
            The callback
  - name: >-
      updateSlot(string, string, SitePatchResource, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Creates a new web, mobile, or API app in an existing
      resource group, or updates

      an existing app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSlot(resourceGroupName: string, name: string,
        siteEnvelope: SitePatchResource, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.SitePatchResource" />
          description: A JSON representation of the app properties. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WebAppsUpdateSlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateSlotResponse>
  - name: >-
      updateSlot(string, string, SitePatchResource, string, RequestOptionsBase,
      ServiceCallback<Site>)
    uid: '@azure/arm-appservice.WebApps.updateSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSlot(resourceGroupName: string, name: string,
        siteEnvelope: SitePatchResource, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.SitePatchResource" />
          description: A JSON representation of the app properties. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: >-
      updateSlot(string, string, SitePatchResource, string,
      ServiceCallback<Site>)
    uid: '@azure/arm-appservice.WebApps.updateSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSlot(resourceGroupName: string, name: string,
        siteEnvelope: SitePatchResource, slot: string, callback:
        ServiceCallback<Site>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: >-
            Unique name of the app to create or update. To create or update a
            deployment slot,

            use the {slot} parameter.
        - id: siteEnvelope
          type: <xref uid="@azure/arm-appservice.SitePatchResource" />
          description: A JSON representation of the app properties. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot to create or update. By default, this
            API attempts to

            create or modify the production slot.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.Site" />&gt;
          description: |
            The callback
  - name: >-
      updateSlotConfigurationNames(string, string, SlotConfigNamesResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSlotConfigurationNames'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Updates the names of application settings and connection
      string that remain with

      the slot during swap operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSlotConfigurationNames(resourceGroupName: string, name:
        string, slotConfigNames: SlotConfigNamesResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotConfigNames
          type: <xref uid="@azure/arm-appservice.SlotConfigNamesResource" />
          description: Names of application settings and connection strings. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateSlotConfigurationNamesResponse" />&gt;
        description: Promise<Models.WebAppsUpdateSlotConfigurationNamesResponse>
  - name: >-
      updateSlotConfigurationNames(string, string, SlotConfigNamesResource,
      RequestOptionsBase, ServiceCallback<SlotConfigNamesResource>)
    uid: '@azure/arm-appservice.WebApps.updateSlotConfigurationNames_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSlotConfigurationNames(resourceGroupName: string, name:
        string, slotConfigNames: SlotConfigNamesResource, options:
        RequestOptionsBase, callback: ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotConfigNames
          type: <xref uid="@azure/arm-appservice.SlotConfigNamesResource" />
          description: Names of application settings and connection strings. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotConfigNamesResource" />&gt;
          description: |
            The callback
  - name: >-
      updateSlotConfigurationNames(string, string, SlotConfigNamesResource,
      ServiceCallback<SlotConfigNamesResource>)
    uid: '@azure/arm-appservice.WebApps.updateSlotConfigurationNames_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSlotConfigurationNames(resourceGroupName: string, name:
        string, slotConfigNames: SlotConfigNamesResource, callback:
        ServiceCallback<SlotConfigNamesResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: slotConfigNames
          type: <xref uid="@azure/arm-appservice.SlotConfigNamesResource" />
          description: Names of application settings and connection strings. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SlotConfigNamesResource" />&gt;
          description: |
            The callback
  - name: >-
      updateSourceControl(string, string, SiteSourceControl,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSourceControl'
    package: '@azure/arm-appservice'
    summary: Description for Updates the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSourceControl(resourceGroupName: string, name: string,
        siteSourceControl: SiteSourceControl, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateSourceControlResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateSourceControlResponse>
  - name: >-
      updateSourceControl(string, string, SiteSourceControl, RequestOptionsBase,
      ServiceCallback<SiteSourceControl>)
    uid: '@azure/arm-appservice.WebApps.updateSourceControl_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSourceControl(resourceGroupName: string, name: string,
        siteSourceControl: SiteSourceControl, options: RequestOptionsBase,
        callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: >-
      updateSourceControl(string, string, SiteSourceControl,
      ServiceCallback<SiteSourceControl>)
    uid: '@azure/arm-appservice.WebApps.updateSourceControl_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSourceControl(resourceGroupName: string, name: string,
        siteSourceControl: SiteSourceControl, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: >-
      updateSourceControlSlot(string, string, SiteSourceControl, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSourceControlSlot'
    package: '@azure/arm-appservice'
    summary: Description for Updates the source control configuration of an app.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSourceControlSlot(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, slot: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateSourceControlSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateSourceControlSlotResponse>
  - name: >-
      updateSourceControlSlot(string, string, SiteSourceControl, string,
      RequestOptionsBase, ServiceCallback<SiteSourceControl>)
    uid: '@azure/arm-appservice.WebApps.updateSourceControlSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSourceControlSlot(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, slot: string, options:
        RequestOptionsBase, callback: ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: >-
      updateSourceControlSlot(string, string, SiteSourceControl, string,
      ServiceCallback<SiteSourceControl>)
    uid: '@azure/arm-appservice.WebApps.updateSourceControlSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSourceControlSlot(resourceGroupName: string, name:
        string, siteSourceControl: SiteSourceControl, slot: string, callback:
        ServiceCallback<SiteSourceControl>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: siteSourceControl
          type: <xref uid="@azure/arm-appservice.SiteSourceControl" />
          description: JSON representation of a SiteSourceControl object. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will update the

            source control configuration for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SiteSourceControl" />&gt;
          description: |
            The callback
  - name: >-
      updateSwiftVirtualNetworkConnection(string, string, SwiftVirtualNetwork,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Integrates this Web App with a Virtual Network. This
      requires that 1)

      "swiftSupported" is true when doing a GET against this resource, and 2)
      that the target Subnet

      has already been delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, connectionEnvelope: SwiftVirtualNetwork, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateSwiftVirtualNetworkConnectionResponse" />&gt;
        description: Promise<Models.WebAppsUpdateSwiftVirtualNetworkConnectionResponse>
  - name: >-
      updateSwiftVirtualNetworkConnection(string, string, SwiftVirtualNetwork,
      RequestOptionsBase, ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, connectionEnvelope: SwiftVirtualNetwork, options:
        RequestOptionsBase, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      updateSwiftVirtualNetworkConnection(string, string, SwiftVirtualNetwork,
      ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnection(resourceGroupName: string,
        name: string, connectionEnvelope: SwiftVirtualNetwork, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      updateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Integrates this Web App with a Virtual Network. This
      requires that 1)

      "swiftSupported" is true when doing a GET against this resource, and 2)
      that the target Subnet

      has already been delegated, and is not

      in use by another App Service Plan other than the one this App is in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateSwiftVirtualNetworkConnectionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateSwiftVirtualNetworkConnectionSlotResponse>
  - name: >-
      updateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, RequestOptionsBase,
      ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      updateSwiftVirtualNetworkConnectionSlot(string, string,
      SwiftVirtualNetwork, string, ServiceCallback<SwiftVirtualNetwork>)
    uid: '@azure/arm-appservice.WebApps.updateSwiftVirtualNetworkConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSwiftVirtualNetworkConnectionSlot(resourceGroupName:
        string, name: string, connectionEnvelope: SwiftVirtualNetwork, slot:
        string, callback: ServiceCallback<SwiftVirtualNetwork>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.SwiftVirtualNetwork" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-appservice.SwiftVirtualNetwork" />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnection(string, string, string, VnetInfo,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnection'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a Virtual Network connection to an app or slot (PUT)
      or updates the

      connection properties (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, connectionEnvelope: VnetInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateVnetConnectionResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateVnetConnectionResponse>
  - name: >-
      updateVnetConnection(string, string, string, VnetInfo, RequestOptionsBase,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnection_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, connectionEnvelope: VnetInfo, options:
        RequestOptionsBase, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnection(string, string, string, VnetInfo,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnection_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnection(resourceGroupName: string, name: string,
        vnetName: string, connectionEnvelope: VnetInfo, callback:
        ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnectionGateway(string, string, string, string, VnetGateway,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGateway'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a gateway to a connected Virtual Network (PUT) or
      updates it (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateVnetConnectionGatewayResponse" />&gt;
        description: Promise<Models.WebAppsUpdateVnetConnectionGatewayResponse>
  - name: >-
      updateVnetConnectionGateway(string, string, string, string, VnetGateway,
      RequestOptionsBase, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGateway_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, options: RequestOptionsBase, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnectionGateway(string, string, string, string, VnetGateway,
      ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGateway_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionGateway(resourceGroupName: string, name:
        string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a gateway to a connected Virtual Network (PUT) or
      updates it (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionGatewaySlot(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, slot: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.WebAppsUpdateVnetConnectionGatewaySlotResponse" />&gt;
        description: Promise<Models.WebAppsUpdateVnetConnectionGatewaySlotResponse>
  - name: >-
      updateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, RequestOptionsBase, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionGatewaySlot(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, slot: string, options: RequestOptionsBase, callback:
        ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnectionGatewaySlot(string, string, string, string,
      VnetGateway, string, ServiceCallback<VnetGateway>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionGatewaySlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionGatewaySlot(resourceGroupName: string,
        name: string, vnetName: string, gatewayName: string, connectionEnvelope:
        VnetGateway, slot: string, callback: ServiceCallback<VnetGateway>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of the Virtual Network.
        - id: gatewayName
          type: string
          description: >-
            Name of the gateway. Currently, the only supported string is
            "primary".
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetGateway" />
          description: The properties to update this gateway with.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            a gateway for the production slot's Virtual Network.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetGateway"
            />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnectionSlot(string, string, string, VnetInfo, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Description for Adds a Virtual Network connection to an app or slot (PUT)
      or updates the

      connection properties (PATCH).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, slot: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.WebAppsUpdateVnetConnectionSlotResponse"
          />&gt;
        description: Promise<Models.WebAppsUpdateVnetConnectionSlotResponse>
  - name: >-
      updateVnetConnectionSlot(string, string, string, VnetInfo, string,
      RequestOptionsBase, ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionSlot_2'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, slot: string,
        options: RequestOptionsBase, callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
  - name: >-
      updateVnetConnectionSlot(string, string, string, VnetInfo, string,
      ServiceCallback<VnetInfo>)
    uid: '@azure/arm-appservice.WebApps.updateVnetConnectionSlot_1'
    package: '@azure/arm-appservice'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateVnetConnectionSlot(resourceGroupName: string, name:
        string, vnetName: string, connectionEnvelope: VnetInfo, slot: string,
        callback: ServiceCallback<VnetInfo>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group to which the resource belongs.
        - id: name
          type: string
          description: Name of the app.
        - id: vnetName
          type: string
          description: Name of an existing Virtual Network.
        - id: connectionEnvelope
          type: <xref uid="@azure/arm-appservice.VnetInfo" />
          description: Properties of the Virtual Network connection. See example.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will add or update

            connections for the production slot.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-appservice.VnetInfo" />&gt;
          description: |
            The callback
