### YamlMime:TSType
name: GlobalUsers
uid: '@azure/arm-labservices.GlobalUsers'
package: '@azure/arm-labservices'
summary: Class representing a GlobalUsers.
fullName: GlobalUsers
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: GlobalUsers(ManagedLabsClientContext)
    uid: '@azure/arm-labservices.GlobalUsers.constructor'
    package: '@azure/arm-labservices'
    summary: Create a GlobalUsers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new GlobalUsers(client: ManagedLabsClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-labservices.ManagedLabsClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginResetPassword(string, ResetPasswordPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.beginResetPassword'
    package: '@azure/arm-labservices'
    summary: >-
      Resets the user password on an environment This operation can take a while
      to complete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginResetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: resetPasswordPayload
          type: <xref uid="@azure/arm-labservices.ResetPasswordPayload" />
          description: Represents the payload for resetting passwords.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginStartEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.beginStartEnvironment'
    package: '@azure/arm-labservices'
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This operation can take

      a while to complete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: environmentOperationsPayload
          type: <xref uid="@azure/arm-labservices.EnvironmentOperationsPayload" />
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginStopEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.beginStopEnvironment'
    package: '@azure/arm-labservices'
    summary: >-
      Stops an environment by stopping all resources inside the environment This
      operation can take a

      while to complete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStopEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: environmentOperationsPayload
          type: <xref uid="@azure/arm-labservices.EnvironmentOperationsPayload" />
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      getEnvironment(string, EnvironmentOperationsPayload,
      GlobalUsersGetEnvironmentOptionalParams,
      ServiceCallback<GetEnvironmentResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getEnvironment_2'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options:
        GlobalUsersGetEnvironmentOptionalParams, callback:
        ServiceCallback<GetEnvironmentResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: environmentOperationsPayload
          type: <xref uid="@azure/arm-labservices.EnvironmentOperationsPayload" />
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type: >-
            <xref
            uid="@azure/arm-labservices.GlobalUsersGetEnvironmentOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.GetEnvironmentResponse" />&gt;
          description: |
            The callback
  - name: >-
      getEnvironment(string, EnvironmentOperationsPayload,
      Models.GlobalUsersGetEnvironmentOptionalParams)
    uid: '@azure/arm-labservices.GlobalUsers.getEnvironment'
    package: '@azure/arm-labservices'
    summary: Gets the virtual machine details
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options?:
        Models.GlobalUsersGetEnvironmentOptionalParams)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: environmentOperationsPayload
          type: <xref uid="@azure/arm-labservices.EnvironmentOperationsPayload" />
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type: <xref uid="Models.GlobalUsersGetEnvironmentOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GlobalUsersGetEnvironmentResponse" />&gt;
        description: Promise<Models.GlobalUsersGetEnvironmentResponse>
  - name: >-
      getEnvironment(string, EnvironmentOperationsPayload,
      ServiceCallback<GetEnvironmentResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getEnvironment_1'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, callback:
        ServiceCallback<GetEnvironmentResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: environmentOperationsPayload
          type: <xref uid="@azure/arm-labservices.EnvironmentOperationsPayload" />
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.GetEnvironmentResponse" />&gt;
          description: |
            The callback
  - name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus'
    package: '@azure/arm-labservices'
    summary: Get batch operation status
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: operationBatchStatusPayload
          type: <xref uid="@azure/arm-labservices.OperationBatchStatusPayload" />
          description: Payload to get the status of an operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.GlobalUsersGetOperationBatchStatusResponse" />&gt;
        description: Promise<Models.GlobalUsersGetOperationBatchStatusResponse>
  - name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload,
      RequestOptionsBase, ServiceCallback<OperationBatchStatusResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus_2'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, options:
        RequestOptionsBase, callback:
        ServiceCallback<OperationBatchStatusResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: operationBatchStatusPayload
          type: <xref uid="@azure/arm-labservices.OperationBatchStatusPayload" />
          description: Payload to get the status of an operation
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.OperationBatchStatusResponse" />&gt;
          description: |
            The callback
  - name: >-
      getOperationBatchStatus(string, OperationBatchStatusPayload,
      ServiceCallback<OperationBatchStatusResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getOperationBatchStatus_1'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOperationBatchStatus(userName: string,
        operationBatchStatusPayload: OperationBatchStatusPayload, callback:
        ServiceCallback<OperationBatchStatusResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: operationBatchStatusPayload
          type: <xref uid="@azure/arm-labservices.OperationBatchStatusPayload" />
          description: Payload to get the status of an operation
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.OperationBatchStatusResponse" />&gt;
          description: |
            The callback
  - name: >-
      getOperationStatus(string, OperationStatusPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.getOperationStatus'
    package: '@azure/arm-labservices'
    summary: Gets the status of long running operation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: operationStatusPayload
          type: <xref uid="@azure/arm-labservices.OperationStatusPayload" />
          description: Payload to get the status of an operation
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.GlobalUsersGetOperationStatusResponse"
          />&gt;
        description: Promise<Models.GlobalUsersGetOperationStatusResponse>
  - name: >-
      getOperationStatus(string, OperationStatusPayload, RequestOptionsBase,
      ServiceCallback<OperationStatusResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getOperationStatus_2'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, options: RequestOptionsBase, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: operationStatusPayload
          type: <xref uid="@azure/arm-labservices.OperationStatusPayload" />
          description: Payload to get the status of an operation
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.OperationStatusResponse" />&gt;
          description: |
            The callback
  - name: >-
      getOperationStatus(string, OperationStatusPayload,
      ServiceCallback<OperationStatusResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getOperationStatus_1'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOperationStatus(userName: string, operationStatusPayload:
        OperationStatusPayload, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: operationStatusPayload
          type: <xref uid="@azure/arm-labservices.OperationStatusPayload" />
          description: Payload to get the status of an operation
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.OperationStatusResponse" />&gt;
          description: |
            The callback
  - name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.getPersonalPreferences'
    package: '@azure/arm-labservices'
    summary: Get personal preferences for a user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: personalPreferencesOperationsPayload
          type: >-
            <xref
            uid="@azure/arm-labservices.PersonalPreferencesOperationsPayload" />
          description: |-
            Represents payload for any Environment operations
            like get, start, stop, connect
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.GlobalUsersGetPersonalPreferencesResponse" />&gt;
        description: Promise<Models.GlobalUsersGetPersonalPreferencesResponse>
  - name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      RequestOptionsBase, ServiceCallback<GetPersonalPreferencesResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getPersonalPreferences_2'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, options: RequestOptionsBase,
        callback: ServiceCallback<GetPersonalPreferencesResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: personalPreferencesOperationsPayload
          type: >-
            <xref
            uid="@azure/arm-labservices.PersonalPreferencesOperationsPayload" />
          description: |-
            Represents payload for any Environment operations
            like get, start, stop, connect
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.GetPersonalPreferencesResponse" />&gt;
          description: |
            The callback
  - name: >-
      getPersonalPreferences(string, PersonalPreferencesOperationsPayload,
      ServiceCallback<GetPersonalPreferencesResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.getPersonalPreferences_1'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPersonalPreferences(userName: string,
        personalPreferencesOperationsPayload:
        PersonalPreferencesOperationsPayload, callback:
        ServiceCallback<GetPersonalPreferencesResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: personalPreferencesOperationsPayload
          type: >-
            <xref
            uid="@azure/arm-labservices.PersonalPreferencesOperationsPayload" />
          description: |-
            Represents payload for any Environment operations
            like get, start, stop, connect
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.GetPersonalPreferencesResponse" />&gt;
          description: |
            The callback
  - name: >-
      listEnvironments(string, ListEnvironmentsPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.listEnvironments'
    package: '@azure/arm-labservices'
    summary: List Environments for the user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: listEnvironmentsPayload
          type: <xref uid="@azure/arm-labservices.ListEnvironmentsPayload" />
          description: Represents the payload to list environments owned by a user
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.GlobalUsersListEnvironmentsResponse"
          />&gt;
        description: Promise<Models.GlobalUsersListEnvironmentsResponse>
  - name: >-
      listEnvironments(string, ListEnvironmentsPayload, RequestOptionsBase,
      ServiceCallback<ListEnvironmentsResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.listEnvironments_2'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, options: RequestOptionsBase, callback:
        ServiceCallback<ListEnvironmentsResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: listEnvironmentsPayload
          type: <xref uid="@azure/arm-labservices.ListEnvironmentsPayload" />
          description: Represents the payload to list environments owned by a user
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.ListEnvironmentsResponse" />&gt;
          description: |
            The callback
  - name: >-
      listEnvironments(string, ListEnvironmentsPayload,
      ServiceCallback<ListEnvironmentsResponse>)
    uid: '@azure/arm-labservices.GlobalUsers.listEnvironments_1'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listEnvironments(userName: string, listEnvironmentsPayload:
        ListEnvironmentsPayload, callback:
        ServiceCallback<ListEnvironmentsResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: listEnvironmentsPayload
          type: <xref uid="@azure/arm-labservices.ListEnvironmentsPayload" />
          description: Represents the payload to list environments owned by a user
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.ListEnvironmentsResponse" />&gt;
          description: |
            The callback
  - name: 'listLabs(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-labservices.GlobalUsers.listLabs'
    package: '@azure/arm-labservices'
    summary: List labs for the user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listLabs(userName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GlobalUsersListLabsResponse" />&gt;
        description: Promise<Models.GlobalUsersListLabsResponse>
  - name: 'listLabs(string, RequestOptionsBase, ServiceCallback<ListLabsResponse>)'
    uid: '@azure/arm-labservices.GlobalUsers.listLabs_2'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listLabs(userName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ListLabsResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.ListLabsResponse" />&gt;
          description: |
            The callback
  - name: 'listLabs(string, ServiceCallback<ListLabsResponse>)'
    uid: '@azure/arm-labservices.GlobalUsers.listLabs_1'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listLabs(userName: string, callback:
        ServiceCallback<ListLabsResponse>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-labservices.ListLabsResponse" />&gt;
          description: |
            The callback
  - name: 'register(string, RegisterPayload, msRest.RequestOptionsBase)'
    uid: '@azure/arm-labservices.GlobalUsers.register'
    package: '@azure/arm-labservices'
    summary: Register a user to a managed lab
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: registerPayload
          type: <xref uid="@azure/arm-labservices.RegisterPayload" />
          description: Represents payload for Register action.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      register(string, RegisterPayload, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-labservices.GlobalUsers.register_2'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: registerPayload
          type: <xref uid="@azure/arm-labservices.RegisterPayload" />
          description: Represents payload for Register action.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'register(string, RegisterPayload, ServiceCallback<void>)'
    uid: '@azure/arm-labservices.GlobalUsers.register_1'
    package: '@azure/arm-labservices'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function register(userName: string, registerPayload: RegisterPayload,
        callback: ServiceCallback<void>)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: registerPayload
          type: <xref uid="@azure/arm-labservices.RegisterPayload" />
          description: Represents payload for Register action.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'resetPassword(string, ResetPasswordPayload, msRest.RequestOptionsBase)'
    uid: '@azure/arm-labservices.GlobalUsers.resetPassword'
    package: '@azure/arm-labservices'
    summary: >-
      Resets the user password on an environment This operation can take a while
      to complete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetPassword(userName: string, resetPasswordPayload:
        ResetPasswordPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: resetPasswordPayload
          type: <xref uid="@azure/arm-labservices.ResetPasswordPayload" />
          description: Represents the payload for resetting passwords.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      startEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.startEnvironment'
    package: '@azure/arm-labservices'
    summary: >-
      Starts an environment by starting all resources inside the environment.
      This operation can take

      a while to complete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startEnvironment(userName: string,
        environmentOperationsPayload: EnvironmentOperationsPayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: environmentOperationsPayload
          type: <xref uid="@azure/arm-labservices.EnvironmentOperationsPayload" />
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      stopEnvironment(string, EnvironmentOperationsPayload,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-labservices.GlobalUsers.stopEnvironment'
    package: '@azure/arm-labservices'
    summary: >-
      Stops an environment by stopping all resources inside the environment This
      operation can take a

      while to complete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopEnvironment(userName: string, environmentOperationsPayload:
        EnvironmentOperationsPayload, options?: msRest.RequestOptionsBase)
      parameters:
        - id: userName
          type: string
          description: The name of the user.
        - id: environmentOperationsPayload
          type: <xref uid="@azure/arm-labservices.EnvironmentOperationsPayload" />
          description: |-
            Represents payload for any Environment operations like get,
            start, stop, connect
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
