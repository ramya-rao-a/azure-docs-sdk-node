### YamlMime:TSType
name: MixedRealityClient
uid: '@azure/arm-mixedreality.MixedRealityClient'
package: '@azure/arm-mixedreality'
summary: ''
fullName: MixedRealityClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      MixedRealityClient(ServiceClientCredentials, string,
      Models.MixedRealityClientOptions)
    uid: '@azure/arm-mixedreality.MixedRealityClient.constructor'
    package: '@azure/arm-mixedreality'
    summary: Initializes a new instance of the MixedRealityClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new MixedRealityClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?: Models.MixedRealityClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type: string
          description: |-
            The Azure subscription ID. This is a GUID-formatted string (e.g.
            00000000-0000-0000-0000-000000000000)
        - id: options
          type: <xref uid="Models.MixedRealityClientOptions" />
          description: ''
properties:
  - name: acceptLanguage
    uid: '@azure/arm-mixedreality.MixedRealityClient.acceptLanguage'
    package: '@azure/arm-mixedreality'
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        type: string
        description: ''
  - name: apiVersion
    uid: '@azure/arm-mixedreality.MixedRealityClient.apiVersion'
    package: '@azure/arm-mixedreality'
    summary: ''
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: credentials
    uid: '@azure/arm-mixedreality.MixedRealityClient.credentials'
    package: '@azure/arm-mixedreality'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type: ServiceClientCredentials
        description: ''
  - name: longRunningOperationRetryTimeout
    uid: >-
      @azure/arm-mixedreality.MixedRealityClient.longRunningOperationRetryTimeout
    package: '@azure/arm-mixedreality'
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: operations
    uid: '@azure/arm-mixedreality.MixedRealityClient.operations'
    package: '@azure/arm-mixedreality'
    summary: ''
    fullName: operations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'operations: Operations'
      return:
        type: <xref uid="@azure/arm-mixedreality.Operations" />
        description: ''
  - name: remoteRenderingAccounts
    uid: '@azure/arm-mixedreality.MixedRealityClient.remoteRenderingAccounts'
    package: '@azure/arm-mixedreality'
    summary: ''
    fullName: remoteRenderingAccounts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'remoteRenderingAccounts: RemoteRenderingAccounts'
      return:
        type: <xref uid="@azure/arm-mixedreality.RemoteRenderingAccounts" />
        description: ''
  - name: spatialAnchorsAccounts
    uid: '@azure/arm-mixedreality.MixedRealityClient.spatialAnchorsAccounts'
    package: '@azure/arm-mixedreality'
    summary: ''
    fullName: spatialAnchorsAccounts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'spatialAnchorsAccounts: SpatialAnchorsAccounts'
      return:
        type: <xref uid="@azure/arm-mixedreality.SpatialAnchorsAccounts" />
        description: ''
  - name: subscriptionId
    uid: '@azure/arm-mixedreality.MixedRealityClient.subscriptionId'
    package: '@azure/arm-mixedreality'
    summary: ''
    fullName: subscriptionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionId: string'
      return:
        type: string
        description: ''
methods:
  - name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-mixedreality.MixedRealityClient.beginLongRunningRequest'
    package: '@azure/arm-mixedreality'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
  - name: >-
      checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal'
    package: '@azure/arm-mixedreality'
    summary: Check Name Availability for local uniqueness
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailabilityLocal(location: string,
        checkNameAvailability: CheckNameAvailabilityRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: location
          type: string
          description: The location in which uniqueness will be verified.
        - id: checkNameAvailability
          type: <xref uid="@azure/arm-mixedreality.CheckNameAvailabilityRequest" />
          description: Check Name Availability Request.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CheckNameAvailabilityLocalResponse"
          />&gt;
        description: Promise<Models.CheckNameAvailabilityLocalResponse>
  - name: >-
      checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest,
      RequestOptionsBase, ServiceCallback<CheckNameAvailabilityResponse>)
    uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_2'
    package: '@azure/arm-mixedreality'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailabilityLocal(location: string,
        checkNameAvailability: CheckNameAvailabilityRequest, options:
        RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: location
          type: string
          description: The location in which uniqueness will be verified.
        - id: checkNameAvailability
          type: <xref uid="@azure/arm-mixedreality.CheckNameAvailabilityRequest" />
          description: Check Name Availability Request.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-mixedreality.CheckNameAvailabilityResponse" />&gt;
          description: |
            The callback
  - name: >-
      checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest,
      ServiceCallback<CheckNameAvailabilityResponse>)
    uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_1'
    package: '@azure/arm-mixedreality'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailabilityLocal(location: string,
        checkNameAvailability: CheckNameAvailabilityRequest, callback:
        ServiceCallback<CheckNameAvailabilityResponse>)
      parameters:
        - id: location
          type: string
          description: The location in which uniqueness will be verified.
        - id: checkNameAvailability
          type: <xref uid="@azure/arm-mixedreality.CheckNameAvailabilityRequest" />
          description: Check Name Availability Request.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-mixedreality.CheckNameAvailabilityResponse" />&gt;
          description: |
            The callback
  - name: restoreLROPoller(LROPollState)
    uid: '@azure/arm-mixedreality.MixedRealityClient.restoreLROPoller'
    package: '@azure/arm-mixedreality'
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type: LROPollState
          description: ''
      return:
        type: LROPoller
        description: ''
  - name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-mixedreality.MixedRealityClient.sendLongRunningRequest'
    package: '@azure/arm-mixedreality'
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
  - name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    uid: '@azure/arm-mixedreality.MixedRealityClient.sendLRORequest'
    package: '@azure/arm-mixedreality'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type: OperationSpec
          description: The specification for the operation.
        - id: options
          type: RequestOptionsBase
          description: Additional options to be sent while making the request.
      return:
        type: Promise&lt;LROPoller&gt;
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/arm-mixedreality.MixedRealityClient.sendOperationRequest'
    package: '@azure/arm-mixedreality'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/arm-mixedreality.MixedRealityClient.sendRequest'
    package: '@azure/arm-mixedreality'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
extends: <xref uid="@azure/arm-mixedreality.MixedRealityClientContext" />
