### YamlMime:TSType
name: ManagementLocks
uid: '@azure/arm-locks.ManagementLocks'
package: '@azure/arm-locks'
summary: Class representing a ManagementLocks.
fullName: ManagementLocks
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ManagementLocks(ManagementLockClientContext)
    uid: '@azure/arm-locks.ManagementLocks.constructor'
    package: '@azure/arm-locks'
    summary: Create a ManagementLocks.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ManagementLocks(client: ManagementLockClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-locks.ManagementLockClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: >-
      When you apply a lock at a parent scope, all child resources inherit the
      same lock. To create

      management locks, you must have access to Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceGroupLevel(resourceGroupName: string,
        lockName: string, parameters: ManagementLockObject, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to lock.
        - id: lockName
          type: string
          description: >-
            The lock name. The lock name can be a maximum of 260 characters. It
            cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksCreateOrUpdateAtResourceGroupLevelResponse"
          />&gt;
        description: >-
          Promise<Models.ManagementLocksCreateOrUpdateAtResourceGroupLevelResponse>
  - name: >-
      createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject,
      RequestOptionsBase, ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceGroupLevel(resourceGroupName: string,
        lockName: string, parameters: ManagementLockObject, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to lock.
        - id: lockName
          type: string
          description: >-
            The lock name. The lock name can be a maximum of 260 characters. It
            cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceGroupLevel(resourceGroupName: string,
        lockName: string, parameters: ManagementLockObject, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to lock.
        - id: lockName
          type: string
          description: >-
            The lock name. The lock name can be a maximum of 260 characters. It
            cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAtResourceLevel(string, string, string, string, string,
      string, ManagementLockObject, msRest.RequestOptionsBase)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel'
    package: '@azure/arm-locks'
    summary: >-
      When you apply a lock at a parent scope, all child resources inherit the
      same lock. To create

      management locks, you must have access to Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string,
        parameters: ManagementLockObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource to lock.
        - id: resourceProviderNamespace
          type: string
          description: The resource provider namespace of the resource to lock.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to lock.
        - id: resourceName
          type: string
          description: The name of the resource to lock.
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Parameters for creating or updating a  management lock.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksCreateOrUpdateAtResourceLevelResponse"
          />&gt;
        description: Promise<Models.ManagementLocksCreateOrUpdateAtResourceLevelResponse>
  - name: >-
      createOrUpdateAtResourceLevel(string, string, string, string, string,
      string, ManagementLockObject, RequestOptionsBase,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string,
        parameters: ManagementLockObject, options: RequestOptionsBase, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource to lock.
        - id: resourceProviderNamespace
          type: string
          description: The resource provider namespace of the resource to lock.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to lock.
        - id: resourceName
          type: string
          description: The name of the resource to lock.
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Parameters for creating or updating a  management lock.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAtResourceLevel(string, string, string, string, string,
      string, ManagementLockObject, ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string,
        parameters: ManagementLockObject, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource to lock.
        - id: resourceProviderNamespace
          type: string
          description: The resource provider namespace of the resource to lock.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to lock.
        - id: resourceName
          type: string
          description: The name of the resource to lock.
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Parameters for creating or updating a  management lock.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAtSubscriptionLevel(string, ManagementLockObject,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: >-
      When you apply a lock at a parent scope, all child resources inherit the
      same lock. To create

      management locks, you must have access to Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtSubscriptionLevel(lockName: string, parameters:
        ManagementLockObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksCreateOrUpdateAtSubscriptionLevelResponse"
          />&gt;
        description: >-
          Promise<Models.ManagementLocksCreateOrUpdateAtSubscriptionLevelResponse>
  - name: >-
      createOrUpdateAtSubscriptionLevel(string, ManagementLockObject,
      RequestOptionsBase, ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtSubscriptionLevel(lockName: string, parameters:
        ManagementLockObject, options: RequestOptionsBase, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateAtSubscriptionLevel(string, ManagementLockObject,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtSubscriptionLevel(lockName: string, parameters:
        ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)
      parameters:
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot

            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateByScope(string, string, ManagementLockObject,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateByScope'
    package: '@azure/arm-locks'
    summary: Create or update a management lock by scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateByScope(scope: string, lockName: string,
        parameters: ManagementLockObject, options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use

            '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: lockName
          type: string
          description: The name of lock.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Create or update management lock parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksCreateOrUpdateByScopeResponse" />&gt;
        description: Promise<Models.ManagementLocksCreateOrUpdateByScopeResponse>
  - name: >-
      createOrUpdateByScope(string, string, ManagementLockObject,
      RequestOptionsBase, ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateByScope_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateByScope(scope: string, lockName: string,
        parameters: ManagementLockObject, options: RequestOptionsBase, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use

            '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: lockName
          type: string
          description: The name of lock.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Create or update management lock parameters.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdateByScope(string, string, ManagementLockObject,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.createOrUpdateByScope_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateByScope(scope: string, lockName: string,
        parameters: ManagementLockObject, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use

            '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: lockName
          type: string
          description: The name of lock.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Create or update management lock parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: 'deleteAtResourceGroupLevel(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: >-
      To delete management locks, you must have access to
      Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the lock.
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteAtResourceGroupLevel(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the lock.
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteAtResourceGroupLevel(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the lock.
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteAtResourceLevel(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel'
    package: '@azure/arm-locks'
    summary: >-
      To delete management locks, you must have access to
      Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource with the lock
            to

            delete.
        - id: resourceProviderNamespace
          type: string
          description: |-
            The resource provider namespace of the resource with the lock
            to delete.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource with the lock to delete.
        - id: resourceName
          type: string
          description: The name of the resource with the lock to delete.
        - id: lockName
          type: string
          description: The name of the lock to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteAtResourceLevel(string, string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource with the lock
            to

            delete.
        - id: resourceProviderNamespace
          type: string
          description: |-
            The resource provider namespace of the resource with the lock
            to delete.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource with the lock to delete.
        - id: resourceName
          type: string
          description: The name of the resource with the lock to delete.
        - id: lockName
          type: string
          description: The name of the lock to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteAtResourceLevel(string, string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource with the lock
            to

            delete.
        - id: resourceProviderNamespace
          type: string
          description: |-
            The resource provider namespace of the resource with the lock
            to delete.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource with the lock to delete.
        - id: resourceName
          type: string
          description: The name of the resource with the lock to delete.
        - id: lockName
          type: string
          description: The name of the lock to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteAtSubscriptionLevel(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: >-
      To delete management locks, you must have access to
      Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtSubscriptionLevel(lockName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteAtSubscriptionLevel(string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtSubscriptionLevel(lockName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteAtSubscriptionLevel(string, ServiceCallback<void>)'
    uid: '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtSubscriptionLevel(lockName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteByScope(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.deleteByScope'
    package: '@azure/arm-locks'
    summary: Delete a management lock by scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteByScope(scope: string, lockName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteByScope(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-locks.ManagementLocks.deleteByScope_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteByScope(scope: string, lockName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteByScope(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-locks.ManagementLocks.deleteByScope_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteByScope(scope: string, lockName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getAtResourceGroupLevel(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: Gets a management lock at the resource group level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the locked resource group.
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksGetAtResourceGroupLevelResponse" />&gt;
        description: Promise<Models.ManagementLocksGetAtResourceGroupLevelResponse>
  - name: >-
      getAtResourceGroupLevel(string, string, RequestOptionsBase,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the locked resource group.
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      getAtResourceGroupLevel(string, string,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, callback: ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the locked resource group.
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      getAtResourceLevel(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-locks.ManagementLocks.getAtResourceLevel'
    package: '@azure/arm-locks'
    summary: Get the management lock of a resource or any level below resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: 'An extra path parameter needed in some services, like SQL Databases.'
        - id: resourceType
          type: string
          description: The type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksGetAtResourceLevelResponse" />&gt;
        description: Promise<Models.ManagementLocksGetAtResourceLevelResponse>
  - name: >-
      getAtResourceLevel(string, string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.getAtResourceLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: 'An extra path parameter needed in some services, like SQL Databases.'
        - id: resourceType
          type: string
          description: The type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      getAtResourceLevel(string, string, string, string, string, string,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.getAtResourceLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: 'An extra path parameter needed in some services, like SQL Databases.'
        - id: resourceType
          type: string
          description: The type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: lockName
          type: string
          description: The name of lock.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: 'getAtSubscriptionLevel(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: Gets a management lock at the subscription level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtSubscriptionLevel(lockName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksGetAtSubscriptionLevelResponse" />&gt;
        description: Promise<Models.ManagementLocksGetAtSubscriptionLevelResponse>
  - name: >-
      getAtSubscriptionLevel(string, RequestOptionsBase,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtSubscriptionLevel(lockName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)
      parameters:
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: 'getAtSubscriptionLevel(string, ServiceCallback<ManagementLockObject>)'
    uid: '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtSubscriptionLevel(lockName: string, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: 'getByScope(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.getByScope'
    package: '@azure/arm-locks'
    summary: Get a management lock by scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByScope(scope: string, lockName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ManagementLocksGetByScopeResponse" />&gt;
        description: Promise<Models.ManagementLocksGetByScopeResponse>
  - name: >-
      getByScope(string, string, RequestOptionsBase,
      ServiceCallback<ManagementLockObject>)
    uid: '@azure/arm-locks.ManagementLocks.getByScope_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByScope(scope: string, lockName: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: 'getByScope(string, string, ServiceCallback<ManagementLockObject>)'
    uid: '@azure/arm-locks.ManagementLocks.getByScope_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByScope(scope: string, lockName: string, callback:
        ServiceCallback<ManagementLockObject>)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-locks.ManagementLockObject"
            />&gt;
          description: |
            The callback
  - name: >-
      listAtResourceGroupLevel(string,
      ManagementLocksListAtResourceGroupLevelOptionalParams,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevel(resourceGroupName: string, options:
        ManagementLocksListAtResourceGroupLevelOptionalParams, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the locks to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtResourceGroupLevelOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAtResourceGroupLevel(string,
      Models.ManagementLocksListAtResourceGroupLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevel(resourceGroupName: string, options?:
        Models.ManagementLocksListAtResourceGroupLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the locks to get.
        - id: options
          type: >-
            <xref
            uid="Models.ManagementLocksListAtResourceGroupLevelOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksListAtResourceGroupLevelResponse" />&gt;
        description: Promise<Models.ManagementLocksListAtResourceGroupLevelResponse>
  - name: >-
      listAtResourceGroupLevel(string,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevel(resourceGroupName: string, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the locks to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: 'listAtResourceGroupLevelNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevelNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksListAtResourceGroupLevelNextResponse"
          />&gt;
        description: Promise<Models.ManagementLocksListAtResourceGroupLevelNextResponse>
  - name: >-
      listAtResourceGroupLevelNext(string, RequestOptionsBase,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevelNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAtResourceGroupLevelNext(string,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevelNext(nextPageLink: string, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAtResourceLevel(string, string, string, string, string,
      ManagementLocksListAtResourceLevelOptionalParams,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options:
        ManagementLocksListAtResourceLevelOptionalParams, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the locked resource. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the locked resource.
        - id: resourceName
          type: string
          description: The name of the locked resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtResourceLevelOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAtResourceLevel(string, string, string, string, string,
      Models.ManagementLocksListAtResourceLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevel'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a resource or any level below resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?:
        Models.ManagementLocksListAtResourceLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the locked resource. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the locked resource.
        - id: resourceName
          type: string
          description: The name of the locked resource.
        - id: options
          type: >-
            <xref uid="Models.ManagementLocksListAtResourceLevelOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksListAtResourceLevelResponse" />&gt;
        description: Promise<Models.ManagementLocksListAtResourceLevelResponse>
  - name: >-
      listAtResourceLevel(string, string, string, string, string,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the locked resource. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the locked resource.
        - id: resourceName
          type: string
          description: The name of the locked resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: 'listAtResourceLevelNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a resource or any level below resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevelNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksListAtResourceLevelNextResponse" />&gt;
        description: Promise<Models.ManagementLocksListAtResourceLevelNextResponse>
  - name: >-
      listAtResourceLevelNext(string, RequestOptionsBase,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevelNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: 'listAtResourceLevelNext(string, ServiceCallback<ManagementLockListResult>)'
    uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevelNext(nextPageLink: string, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAtSubscriptionLevel(ManagementLocksListAtSubscriptionLevelOptionalParams,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevel(options:
        ManagementLocksListAtSubscriptionLevelOptionalParams, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtSubscriptionLevelOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAtSubscriptionLevel(Models.ManagementLocksListAtSubscriptionLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevel(options?:
        Models.ManagementLocksListAtSubscriptionLevelOptionalParams)
      parameters:
        - id: options
          type: >-
            <xref
            uid="Models.ManagementLocksListAtSubscriptionLevelOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksListAtSubscriptionLevelResponse" />&gt;
        description: Promise<Models.ManagementLocksListAtSubscriptionLevelResponse>
  - name: listAtSubscriptionLevel(ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevel(callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: 'listAtSubscriptionLevelNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevelNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagementLocksListAtSubscriptionLevelNextResponse" />&gt;
        description: Promise<Models.ManagementLocksListAtSubscriptionLevelNextResponse>
  - name: >-
      listAtSubscriptionLevelNext(string, RequestOptionsBase,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevelNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listAtSubscriptionLevelNext(string,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevelNext(nextPageLink: string, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByScope(string, ManagementLocksListByScopeOptionalParams,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listByScope_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScope(scope: string, options:
        ManagementLocksListByScopeOptionalParams, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use

            '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListByScopeOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: 'listByScope(string, Models.ManagementLocksListByScopeOptionalParams)'
    uid: '@azure/arm-locks.ManagementLocks.listByScope'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScope(scope: string, options?:
        Models.ManagementLocksListByScopeOptionalParams)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use

            '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: options
          type: <xref uid="Models.ManagementLocksListByScopeOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ManagementLocksListByScopeResponse"
          />&gt;
        description: Promise<Models.ManagementLocksListByScopeResponse>
  - name: 'listByScope(string, ServiceCallback<ManagementLockListResult>)'
    uid: '@azure/arm-locks.ManagementLocks.listByScope_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScope(scope: string, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use

            '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: 'listByScopeNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-locks.ManagementLocks.listByScopeNext'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScopeNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ManagementLocksListByScopeNextResponse"
          />&gt;
        description: Promise<Models.ManagementLocksListByScopeNextResponse>
  - name: >-
      listByScopeNext(string, RequestOptionsBase,
      ServiceCallback<ManagementLockListResult>)
    uid: '@azure/arm-locks.ManagementLocks.listByScopeNext_2'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScopeNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
  - name: 'listByScopeNext(string, ServiceCallback<ManagementLockListResult>)'
    uid: '@azure/arm-locks.ManagementLocks.listByScopeNext_1'
    package: '@azure/arm-locks'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScopeNext(nextPageLink: string, callback:
        ServiceCallback<ManagementLockListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-locks.ManagementLockListResult" />&gt;
          description: |
            The callback
