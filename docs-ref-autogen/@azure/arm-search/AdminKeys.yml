### YamlMime:TSType
name: AdminKeys
uid: '@azure/arm-search.AdminKeys'
package: '@azure/arm-search'
summary: Class representing a AdminKeys.
fullName: AdminKeys
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: AdminKeys(SearchManagementClientContext)
    uid: '@azure/arm-search.AdminKeys.constructor'
    package: '@azure/arm-search'
    summary: Create a AdminKeys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AdminKeys(client: SearchManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-search.SearchManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      get(string, string, AdminKeysGetOptionalParams,
      ServiceCallback<AdminKeyResult>)
    uid: '@azure/arm-search.AdminKeys.get_2'
    package: '@azure/arm-search'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        options: AdminKeysGetOptionalParams, callback:
        ServiceCallback<AdminKeyResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type: string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: options
          type: <xref uid="@azure/arm-search.AdminKeysGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-search.AdminKeyResult"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, Models.AdminKeysGetOptionalParams)'
    uid: '@azure/arm-search.AdminKeys.get'
    package: '@azure/arm-search'
    summary: >-
      Gets the primary and secondary admin API keys for the specified Azure
      Search service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        options?: Models.AdminKeysGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type: string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: options
          type: <xref uid="Models.AdminKeysGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AdminKeysGetResponse" />&gt;
        description: Promise<Models.AdminKeysGetResponse>
  - name: 'get(string, string, ServiceCallback<AdminKeyResult>)'
    uid: '@azure/arm-search.AdminKeys.get_1'
    package: '@azure/arm-search'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        callback: ServiceCallback<AdminKeyResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type: string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-search.AdminKeyResult"
            />&gt;
          description: |
            The callback
  - name: >-
      regenerate(string, string, Models.AdminKeyKind,
      AdminKeysRegenerateOptionalParams, ServiceCallback<AdminKeyResult>)
    uid: '@azure/arm-search.AdminKeys.regenerate_2'
    package: '@azure/arm-search'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerate(resourceGroupName: string, searchServiceName:
        string, keyKind: Models.AdminKeyKind, options:
        AdminKeysRegenerateOptionalParams, callback:
        ServiceCallback<AdminKeyResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type: string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: keyKind
          type: <xref uid="Models.AdminKeyKind" />
          description: >-
            Specifies which key to regenerate. Valid values include 'primary'
            and

            'secondary'. Possible values include: 'primary', 'secondary'
        - id: options
          type: <xref uid="@azure/arm-search.AdminKeysRegenerateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-search.AdminKeyResult"
            />&gt;
          description: |
            The callback
  - name: >-
      regenerate(string, string, Models.AdminKeyKind,
      Models.AdminKeysRegenerateOptionalParams)
    uid: '@azure/arm-search.AdminKeys.regenerate'
    package: '@azure/arm-search'
    summary: >-
      Regenerates either the primary or secondary admin API key. You can only
      regenerate one key at a

      time.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerate(resourceGroupName: string, searchServiceName:
        string, keyKind: Models.AdminKeyKind, options?:
        Models.AdminKeysRegenerateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type: string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: keyKind
          type: <xref uid="Models.AdminKeyKind" />
          description: >-
            Specifies which key to regenerate. Valid values include 'primary'
            and

            'secondary'. Possible values include: 'primary', 'secondary'
        - id: options
          type: <xref uid="Models.AdminKeysRegenerateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AdminKeysRegenerateResponse" />&gt;
        description: Promise<Models.AdminKeysRegenerateResponse>
  - name: >-
      regenerate(string, string, Models.AdminKeyKind,
      ServiceCallback<AdminKeyResult>)
    uid: '@azure/arm-search.AdminKeys.regenerate_1'
    package: '@azure/arm-search'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerate(resourceGroupName: string, searchServiceName:
        string, keyKind: Models.AdminKeyKind, callback:
        ServiceCallback<AdminKeyResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the current subscription. You
            can

            obtain this value from the Azure Resource Manager API or the portal.
        - id: searchServiceName
          type: string
          description: |-
            The name of the Azure Search service associated with the specified
            resource group.
        - id: keyKind
          type: <xref uid="Models.AdminKeyKind" />
          description: >-
            Specifies which key to regenerate. Valid values include 'primary'
            and

            'secondary'. Possible values include: 'primary', 'secondary'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-search.AdminKeyResult"
            />&gt;
          description: |
            The callback
