### YamlMime:TSType
name: Metrics
uid: '@azure/applicationinsights-query.Metrics'
package: '@azure/applicationinsights-query'
summary: Class representing a Metrics.
fullName: Metrics
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Metrics(ApplicationInsightsDataClientContext)
    uid: '@azure/applicationinsights-query.Metrics.constructor'
    package: '@azure/applicationinsights-query'
    summary: Create a Metrics.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Metrics(client: ApplicationInsightsDataClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/applicationinsights-query.ApplicationInsightsDataClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      get(string, Models.MetricId, MetricsGetOptionalParams,
      ServiceCallback<MetricsResult>)
    uid: '@azure/applicationinsights-query.Metrics.get_2'
    package: '@azure/applicationinsights-query'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(appId: string, metricId: Models.MetricId, options:
        MetricsGetOptionalParams, callback: ServiceCallback<MetricsResult>)
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: metricId
          type: <xref uid="Models.MetricId" />
          description: >-
            ID of the metric. This is either a standard AI metric, or an

            application-specific custom metric. Possible values include:
            'requests/count',

            'requests/duration', 'requests/failed', 'users/count',
            'users/authenticated', 'pageViews/count',

            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration',

            'client/networkDuration', 'client/sendDuration',
            'client/totalDuration', 'dependencies/count',

            'dependencies/failed', 'dependencies/duration', 'exceptions/count',
            'exceptions/browser',

            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',

            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',

            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',

            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',

            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',

            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration',

            'billing/telemetryCount', 'customEvents/count'
        - id: options
          type: >-
            <xref
            uid="@azure/applicationinsights-query.MetricsGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/applicationinsights-query.MetricsResult" />&gt;
          description: |
            The callback
  - name: 'get(string, Models.MetricId, Models.MetricsGetOptionalParams)'
    uid: '@azure/applicationinsights-query.Metrics.get'
    package: '@azure/applicationinsights-query'
    summary: Gets metric values for a single metric
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(appId: string, metricId: Models.MetricId, options?:
        Models.MetricsGetOptionalParams)
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: metricId
          type: <xref uid="Models.MetricId" />
          description: >-
            ID of the metric. This is either a standard AI metric, or an

            application-specific custom metric. Possible values include:
            'requests/count',

            'requests/duration', 'requests/failed', 'users/count',
            'users/authenticated', 'pageViews/count',

            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration',

            'client/networkDuration', 'client/sendDuration',
            'client/totalDuration', 'dependencies/count',

            'dependencies/failed', 'dependencies/duration', 'exceptions/count',
            'exceptions/browser',

            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',

            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',

            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',

            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',

            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',

            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration',

            'billing/telemetryCount', 'customEvents/count'
        - id: options
          type: <xref uid="Models.MetricsGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.MetricsGetResponse" />&gt;
        description: Promise<Models.MetricsGetResponse>
  - name: 'get(string, Models.MetricId, ServiceCallback<MetricsResult>)'
    uid: '@azure/applicationinsights-query.Metrics.get_1'
    package: '@azure/applicationinsights-query'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(appId: string, metricId: Models.MetricId, callback:
        ServiceCallback<MetricsResult>)
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: metricId
          type: <xref uid="Models.MetricId" />
          description: >-
            ID of the metric. This is either a standard AI metric, or an

            application-specific custom metric. Possible values include:
            'requests/count',

            'requests/duration', 'requests/failed', 'users/count',
            'users/authenticated', 'pageViews/count',

            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration',

            'client/networkDuration', 'client/sendDuration',
            'client/totalDuration', 'dependencies/count',

            'dependencies/failed', 'dependencies/duration', 'exceptions/count',
            'exceptions/browser',

            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',

            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',

            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',

            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',

            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',

            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration',

            'billing/telemetryCount', 'customEvents/count'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/applicationinsights-query.MetricsResult" />&gt;
          description: |
            The callback
  - name: 'getMetadata(string, msRest.RequestOptionsBase)'
    uid: '@azure/applicationinsights-query.Metrics.getMetadata'
    package: '@azure/applicationinsights-query'
    summary: Gets metadata describing the available metrics
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getMetadata(appId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.MetricsGetMetadataResponse" />&gt;
        description: Promise<Models.MetricsGetMetadataResponse>
  - name: 'getMetadata(string, RequestOptionsBase, ServiceCallback<any>)'
    uid: '@azure/applicationinsights-query.Metrics.getMetadata_2'
    package: '@azure/applicationinsights-query'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMetadata(appId: string, options: RequestOptionsBase,
        callback: ServiceCallback<any>)
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback
  - name: 'getMetadata(string, ServiceCallback<any>)'
    uid: '@azure/applicationinsights-query.Metrics.getMetadata_1'
    package: '@azure/applicationinsights-query'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getMetadata(appId: string, callback: ServiceCallback<any>)'
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback
  - name: 'getMultiple(string, MetricsPostBodySchema[], msRest.RequestOptionsBase)'
    uid: '@azure/applicationinsights-query.Metrics.getMultiple'
    package: '@azure/applicationinsights-query'
    summary: Gets metric values for multiple metrics
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMultiple(appId: string, body: MetricsPostBodySchema[],
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: body
          type: >-
            <xref uid="@azure/applicationinsights-query.MetricsPostBodySchema"
            />[]
          description: The batched metrics query.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.MetricsGetMultipleResponse" />&gt;
        description: Promise<Models.MetricsGetMultipleResponse>
  - name: >-
      getMultiple(string, MetricsPostBodySchema[], RequestOptionsBase,
      ServiceCallback<MetricsResultsItem[]>)
    uid: '@azure/applicationinsights-query.Metrics.getMultiple_2'
    package: '@azure/applicationinsights-query'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMultiple(appId: string, body: MetricsPostBodySchema[],
        options: RequestOptionsBase, callback:
        ServiceCallback<MetricsResultsItem[]>)
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: body
          type: >-
            <xref uid="@azure/applicationinsights-query.MetricsPostBodySchema"
            />[]
          description: The batched metrics query.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/applicationinsights-query.MetricsResultsItem" />[]&gt;
          description: |
            The callback
  - name: >-
      getMultiple(string, MetricsPostBodySchema[],
      ServiceCallback<MetricsResultsItem[]>)
    uid: '@azure/applicationinsights-query.Metrics.getMultiple_1'
    package: '@azure/applicationinsights-query'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMultiple(appId: string, body: MetricsPostBodySchema[],
        callback: ServiceCallback<MetricsResultsItem[]>)
      parameters:
        - id: appId
          type: string
          description: >-
            ID of the application. This is Application ID from the API Access
            settings blade in

            the Azure portal.
        - id: body
          type: >-
            <xref uid="@azure/applicationinsights-query.MetricsPostBodySchema"
            />[]
          description: The batched metrics query.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/applicationinsights-query.MetricsResultsItem" />[]&gt;
          description: |
            The callback
