### YamlMime:TSType
name: PredictionAPIClient
uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient'
package: '@azure/cognitiveservices-customvision-prediction'
summary: ''
fullName: PredictionAPIClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      PredictionAPIClient(ServiceClientCredentials, string,
      msRest.ServiceClientOptions)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: Initializes a new instance of the PredictionAPIClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new PredictionAPIClient(credentials: ServiceClientCredentials, endpoint:
        string, options?: msRest.ServiceClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: >-
            Subscription credentials which uniquely identify client
            subscription.
        - id: endpoint
          type: string
          description: Supported Cognitive Services endpoints.
        - id: options
          type: <xref uid="msRest.ServiceClientOptions" />
          description: ''
properties:
  - name: credentials
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.credentials
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type: ServiceClientCredentials
        description: ''
  - name: endpoint
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        type: string
        description: ''
methods:
  - name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientClassifyImageOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientClassifyImageOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: <xref uid="Models.PredictionAPIClientClassifyImageOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ClassifyImageResponse" />&gt;
        description: Promise<Models.ClassifyImageResponse>
  - name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      PredictionAPIClientClassifyImageOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientClassifyImageOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImage(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrl(string, string, ImageUrl,
      Models.PredictionAPIClientClassifyImageUrlOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientClassifyImageUrlOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref uid="Models.PredictionAPIClientClassifyImageUrlOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ClassifyImageUrlResponse" />&gt;
        description: Promise<Models.ClassifyImageUrlResponse>
  - name: >-
      classifyImageUrl(string, string, ImageUrl,
      PredictionAPIClientClassifyImageUrlOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options:
        PredictionAPIClientClassifyImageUrlOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrl(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ClassifyImageUrlWithNoStoreResponse"
          />&gt;
        description: Promise<Models.ClassifyImageUrlWithNoStoreResponse>
  - name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options:
        PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageUrlWithNoStore(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ClassifyImageWithNoStoreResponse" />&gt;
        description: Promise<Models.ClassifyImageWithNoStoreResponse>
  - name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      PredictionAPIClientClassifyImageWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientClassifyImageWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      classifyImageWithNoStore(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function classifyImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientDetectImageOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientDetectImageOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: <xref uid="Models.PredictionAPIClientDetectImageOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DetectImageResponse" />&gt;
        description: Promise<Models.DetectImageResponse>
  - name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      PredictionAPIClientDetectImageOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientDetectImageOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImage(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImage(projectId: string, publishedName: string,
        imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageUrl(string, string, ImageUrl,
      Models.PredictionAPIClientDetectImageUrlOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientDetectImageUrlOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref uid="Models.PredictionAPIClientDetectImageUrlOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DetectImageUrlResponse" />&gt;
        description: Promise<Models.DetectImageUrlResponse>
  - name: >-
      detectImageUrl(string, string, ImageUrl,
      PredictionAPIClientDetectImageUrlOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, options:
        PredictionAPIClientDetectImageUrlOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: 'detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrl(projectId: string, publishedName: string,
        imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: An ImageUrl that contains the url of the image to be evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options?:
        Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DetectImageUrlWithNoStoreResponse" />&gt;
        description: Promise<Models.DetectImageUrlWithNoStoreResponse>
  - name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, options:
        PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageUrlWithNoStore(string, string, ImageUrl,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageUrlWithNoStore(projectId: string, publishedName:
        string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageUrl
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.ImageUrl" />
          description: >-
            An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
            to be

            evaluated.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options?:
        Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DetectImageWithNoStoreResponse" />&gt;
        description: Promise<Models.DetectImageWithNoStoreResponse>
  - name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      PredictionAPIClientDetectImageWithNoStoreOptionalParams,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, options:
        PredictionAPIClientDetectImageWithNoStoreOptionalParams, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      detectImageWithNoStore(string, string, msRest.HttpRequestBody,
      ServiceCallback<ImagePrediction>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function detectImageWithNoStore(projectId: string, publishedName:
        string, imageData: msRest.HttpRequestBody, callback:
        ServiceCallback<ImagePrediction>)
      parameters:
        - id: projectId
          type: string
          description: The project id.
        - id: publishedName
          type: string
          description: Specifies the name of the model to evaluate against.
        - id: imageData
          type: <xref uid="msRest.HttpRequestBody" />
          description: >-
            Binary image data. Supported formats are JPEG, GIF, PNG, and BMP.
            Supports

            images up to 4MB.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/cognitiveservices-customvision-prediction.ImagePrediction"
            />&gt;
          description: |
            The callback
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: >-
      @azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest
    package: '@azure/cognitiveservices-customvision-prediction'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
extends: >-
  <xref
  uid="@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext"
  />
