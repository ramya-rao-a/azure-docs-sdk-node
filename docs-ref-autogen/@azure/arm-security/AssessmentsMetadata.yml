### YamlMime:TSType
name: AssessmentsMetadata
uid: '@azure/arm-security.AssessmentsMetadata'
package: '@azure/arm-security'
summary: Class representing a AssessmentsMetadata.
fullName: AssessmentsMetadata
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: AssessmentsMetadata(SecurityCenterContext)
    uid: '@azure/arm-security.AssessmentsMetadata.constructor'
    package: '@azure/arm-security'
    summary: Create a AssessmentsMetadata.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AssessmentsMetadata(client: SecurityCenterContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-security.SecurityCenterContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createInSubscription(string, SecurityAssessmentMetadata,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-security.AssessmentsMetadata.createInSubscription'
    package: '@azure/arm-security'
    summary: >-
      Create metadata information on an assessment type in a specific
      subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInSubscription(assessmentMetadataName: string,
        assessmentMetadata: SecurityAssessmentMetadata, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessmentMetadata
          type: <xref uid="@azure/arm-security.SecurityAssessmentMetadata" />
          description: AssessmentMetadata object
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AssessmentsMetadataCreateInSubscriptionResponse" />&gt;
        description: Promise<Models.AssessmentsMetadataCreateInSubscriptionResponse>
  - name: >-
      createInSubscription(string, SecurityAssessmentMetadata,
      RequestOptionsBase, ServiceCallback<SecurityAssessmentMetadata>)
    uid: '@azure/arm-security.AssessmentsMetadata.createInSubscription_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInSubscription(assessmentMetadataName: string,
        assessmentMetadata: SecurityAssessmentMetadata, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessmentMetadata
          type: <xref uid="@azure/arm-security.SecurityAssessmentMetadata" />
          description: AssessmentMetadata object
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadata" />&gt;
          description: |
            The callback
  - name: >-
      createInSubscription(string, SecurityAssessmentMetadata,
      ServiceCallback<SecurityAssessmentMetadata>)
    uid: '@azure/arm-security.AssessmentsMetadata.createInSubscription_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInSubscription(assessmentMetadataName: string,
        assessmentMetadata: SecurityAssessmentMetadata, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessmentMetadata
          type: <xref uid="@azure/arm-security.SecurityAssessmentMetadata" />
          description: AssessmentMetadata object
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadata" />&gt;
          description: |
            The callback
  - name: 'deleteInSubscription(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-security.AssessmentsMetadata.deleteInSubscription'
    package: '@azure/arm-security'
    summary: >-
      Delete metadata information on an assessment type in a specific
      subscription, will cause the

      deletion of all the assessments of that type in that subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInSubscription(assessmentMetadataName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteInSubscription(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-security.AssessmentsMetadata.deleteInSubscription_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInSubscription(assessmentMetadataName: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteInSubscription(string, ServiceCallback<void>)'
    uid: '@azure/arm-security.AssessmentsMetadata.deleteInSubscription_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteInSubscription(assessmentMetadataName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-security.AssessmentsMetadata.get'
    package: '@azure/arm-security'
    summary: Get metadata information on an assessment type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(assessmentMetadataName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AssessmentsMetadataGetResponse" />&gt;
        description: Promise<Models.AssessmentsMetadataGetResponse>
  - name: >-
      get(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadata>)
    uid: '@azure/arm-security.AssessmentsMetadata.get_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(assessmentMetadataName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadata" />&gt;
          description: |
            The callback
  - name: 'get(string, ServiceCallback<SecurityAssessmentMetadata>)'
    uid: '@azure/arm-security.AssessmentsMetadata.get_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(assessmentMetadataName: string, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadata" />&gt;
          description: |
            The callback
  - name: 'getInSubscription(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-security.AssessmentsMetadata.getInSubscription'
    package: '@azure/arm-security'
    summary: Get metadata information on an assessment type in a specific subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInSubscription(assessmentMetadataName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AssessmentsMetadataGetInSubscriptionResponse" />&gt;
        description: Promise<Models.AssessmentsMetadataGetInSubscriptionResponse>
  - name: >-
      getInSubscription(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadata>)
    uid: '@azure/arm-security.AssessmentsMetadata.getInSubscription_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInSubscription(assessmentMetadataName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadata" />&gt;
          description: |
            The callback
  - name: 'getInSubscription(string, ServiceCallback<SecurityAssessmentMetadata>)'
    uid: '@azure/arm-security.AssessmentsMetadata.getInSubscription_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInSubscription(assessmentMetadataName: string, callback:
        ServiceCallback<SecurityAssessmentMetadata>)
      parameters:
        - id: assessmentMetadataName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadata" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-security.AssessmentsMetadata.list'
    package: '@azure/arm-security'
    summary: Get metadata information on all assessment types
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AssessmentsMetadataListResponse" />&gt;
        description: Promise<Models.AssessmentsMetadataListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<SecurityAssessmentMetadataList>)'
    uid: '@azure/arm-security.AssessmentsMetadata.list_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<SecurityAssessmentMetadataList>)
    uid: '@azure/arm-security.AssessmentsMetadata.list_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<SecurityAssessmentMetadataList>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
  - name: listBySubscription(msRest.RequestOptionsBase)
    uid: '@azure/arm-security.AssessmentsMetadata.listBySubscription'
    package: '@azure/arm-security'
    summary: >-
      Get metadata information on all assessment types in a specific
      subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AssessmentsMetadataListBySubscriptionResponse" />&gt;
        description: Promise<Models.AssessmentsMetadataListBySubscriptionResponse>
  - name: >-
      listBySubscription(RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadataList>)
    uid: '@azure/arm-security.AssessmentsMetadata.listBySubscription_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
  - name: listBySubscription(ServiceCallback<SecurityAssessmentMetadataList>)
    uid: '@azure/arm-security.AssessmentsMetadata.listBySubscription_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext'
    package: '@azure/arm-security'
    summary: >-
      Get metadata information on all assessment types in a specific
      subscription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AssessmentsMetadataListBySubscriptionNextResponse" />&gt;
        description: Promise<Models.AssessmentsMetadataListBySubscriptionNextResponse>
  - name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadataList>)
    uid: '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
  - name: >-
      listBySubscriptionNext(string,
      ServiceCallback<SecurityAssessmentMetadataList>)
    uid: '@azure/arm-security.AssessmentsMetadata.listBySubscriptionNext_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-security.AssessmentsMetadata.listNext'
    package: '@azure/arm-security'
    summary: Get metadata information on all assessment types
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AssessmentsMetadataListNextResponse"
          />&gt;
        description: Promise<Models.AssessmentsMetadataListNextResponse>
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<SecurityAssessmentMetadataList>)
    uid: '@azure/arm-security.AssessmentsMetadata.listNext_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<SecurityAssessmentMetadataList>)'
    uid: '@azure/arm-security.AssessmentsMetadata.listNext_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SecurityAssessmentMetadataList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecurityAssessmentMetadataList" />&gt;
          description: |
            The callback
