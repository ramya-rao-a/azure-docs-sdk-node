### YamlMime:TSType
name: ContractualRulesMediaAttribution
uid: '@azure/cognitiveservices-entitysearch.ContractualRulesMediaAttribution'
package: '@azure/cognitiveservices-entitysearch'
summary: Defines a contractual rule for media attribution.
fullName: ContractualRulesMediaAttribution
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: mustBeCloseToContent
    uid: >-
      @azure/cognitiveservices-entitysearch.ContractualRulesMediaAttribution.mustBeCloseToContent
    package: '@azure/cognitiveservices-entitysearch'
    summary: >-
      A Boolean value that determines whether the contents of the rule must be
      placed in close

      proximity to the field that the rule applies to. If true, the contents
      must be placed in close

      proximity. If false, or this field does not exist, the contents may be
      placed at the caller's

      discretion.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: mustBeCloseToContent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mustBeCloseToContent?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: targetPropertyName
    uid: >-
      @azure/cognitiveservices-entitysearch.ContractualRulesMediaAttribution.targetPropertyName
    package: '@azure/cognitiveservices-entitysearch'
    summary: >-
      The name of the field that the rule applies to.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: targetPropertyName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'targetPropertyName?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: url
    uid: '@azure/cognitiveservices-entitysearch.ContractualRulesMediaAttribution.url'
    package: '@azure/cognitiveservices-entitysearch'
    summary: >-
      The URL that you use to create of hyperlink of the media content. For
      example, if the target

      is an image, you would use the URL to make the image clickable.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: url
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'url?: undefined | string'
      return:
        type: undefined | string
        description: ''
