### YamlMime:TSType
name: TenantActivityLogs
uid: '@azure/arm-monitor.TenantActivityLogs'
package: '@azure/arm-monitor'
summary: Class representing a TenantActivityLogs.
fullName: TenantActivityLogs
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: TenantActivityLogs(MonitorManagementClientContext)
    uid: '@azure/arm-monitor.TenantActivityLogs.constructor'
    package: '@azure/arm-monitor'
    summary: Create a TenantActivityLogs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TenantActivityLogs(client: MonitorManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-monitor.MonitorManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: list(Models.TenantActivityLogsListOptionalParams)
    uid: '@azure/arm-monitor.TenantActivityLogs.list'
    package: '@azure/arm-monitor'
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to
      the API to get the

      Activity Logs for the subscription is applicable to this API (the
      parameters, $filter,

      etc.).<br>One thing to point out here is that this API does *not* retrieve
      the logs at the

      individual subscription of the tenant but only surfaces the logs that were
      generated at the

      tenant level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.TenantActivityLogsListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.TenantActivityLogsListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TenantActivityLogsListResponse" />&gt;
        description: Promise<Models.TenantActivityLogsListResponse>
  - name: list(ServiceCallback<EventDataCollection>)
    uid: '@azure/arm-monitor.TenantActivityLogs.list_1'
    package: '@azure/arm-monitor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<EventDataCollection>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-monitor.EventDataCollection" />&gt;
          description: |
            The callback
  - name: >-
      list(TenantActivityLogsListOptionalParams,
      ServiceCallback<EventDataCollection>)
    uid: '@azure/arm-monitor.TenantActivityLogs.list_2'
    package: '@azure/arm-monitor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: TenantActivityLogsListOptionalParams, callback:
        ServiceCallback<EventDataCollection>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/arm-monitor.TenantActivityLogsListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-monitor.EventDataCollection" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-monitor.TenantActivityLogs.listNext'
    package: '@azure/arm-monitor'
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to
      the API to get the

      Activity Logs for the subscription is applicable to this API (the
      parameters, $filter,

      etc.).<br>One thing to point out here is that this API does *not* retrieve
      the logs at the

      individual subscription of the tenant but only surfaces the logs that were
      generated at the

      tenant level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.TenantActivityLogsListNextResponse"
          />&gt;
        description: Promise<Models.TenantActivityLogsListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<EventDataCollection>)'
    uid: '@azure/arm-monitor.TenantActivityLogs.listNext_2'
    package: '@azure/arm-monitor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<EventDataCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-monitor.EventDataCollection" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<EventDataCollection>)'
    uid: '@azure/arm-monitor.TenantActivityLogs.listNext_1'
    package: '@azure/arm-monitor'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<EventDataCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-monitor.EventDataCollection" />&gt;
          description: |
            The callback
