### YamlMime:TSType
name: ResourceGroups
uid: '@azure/arm-resources.ResourceGroups'
package: '@azure/arm-resources'
summary: Class representing a ResourceGroups.
fullName: ResourceGroups
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ResourceGroups(ResourceManagementClientContext)
    uid: '@azure/arm-resources.ResourceGroups.constructor'
    package: '@azure/arm-resources'
    summary: Create a ResourceGroups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ResourceGroups(client: ResourceManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-resources.ResourceManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'beginDeleteMethod(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.beginDeleteMethod'
    package: '@azure/arm-resources'
    summary: >-
      When you delete a resource group, all of its resources are also deleted.
      Deleting a resource

      group deletes all of its template deployments and currently stored
      operations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to delete. The name is case
            insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginExportTemplate(string, ExportTemplateRequest,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.ResourceGroups.beginExportTemplate'
    package: '@azure/arm-resources'
    summary: Captures the specified resource group as a template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginExportTemplate(resourceGroupName: string, parameters:
        ExportTemplateRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ExportTemplateRequest" />
          description: Parameters for exporting the template.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'checkExistence(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.checkExistence'
    package: '@azure/arm-resources'
    summary: Checks whether a resource group exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to check. The name is case
            insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ResourceGroupsCheckExistenceResponse"
          />&gt;
        description: Promise<Models.ResourceGroupsCheckExistenceResponse>
  - name: 'checkExistence(string, RequestOptionsBase, ServiceCallback<boolean>)'
    uid: '@azure/arm-resources.ResourceGroups.checkExistence_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to check. The name is case
            insensitive.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'checkExistence(string, ServiceCallback<boolean>)'
    uid: '@azure/arm-resources.ResourceGroups.checkExistence_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to check. The name is case
            insensitive.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'createOrUpdate(string, ResourceGroup, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.createOrUpdate'
    package: '@azure/arm-resources'
    summary: Creates or updates a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, parameters:
        ResourceGroup, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to create or update. Can include

            alphanumeric, underscore, parentheses, hyphen, period (except at
            end), and Unicode characters

            that match the allowed characters.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroup" />
          description: Parameters supplied to the create or update a resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ResourceGroupsCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.ResourceGroupsCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, ResourceGroup, RequestOptionsBase,
      ServiceCallback<ResourceGroup>)
    uid: '@azure/arm-resources.ResourceGroups.createOrUpdate_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, parameters:
        ResourceGroup, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to create or update. Can include

            alphanumeric, underscore, parentheses, hyphen, period (except at
            end), and Unicode characters

            that match the allowed characters.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroup" />
          description: Parameters supplied to the create or update a resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.ResourceGroup"
            />&gt;
          description: |
            The callback
  - name: 'createOrUpdate(string, ResourceGroup, ServiceCallback<ResourceGroup>)'
    uid: '@azure/arm-resources.ResourceGroups.createOrUpdate_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, parameters:
        ResourceGroup, callback: ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to create or update. Can include

            alphanumeric, underscore, parentheses, hyphen, period (except at
            end), and Unicode characters

            that match the allowed characters.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroup" />
          description: Parameters supplied to the create or update a resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.ResourceGroup"
            />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.deleteMethod'
    package: '@azure/arm-resources'
    summary: >-
      When you delete a resource group, all of its resources are also deleted.
      Deleting a resource

      group deletes all of its template deployments and currently stored
      operations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to delete. The name is case
            insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'exportTemplate(string, ExportTemplateRequest, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.exportTemplate'
    package: '@azure/arm-resources'
    summary: Captures the specified resource group as a template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exportTemplate(resourceGroupName: string, parameters:
        ExportTemplateRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ExportTemplateRequest" />
          description: Parameters for exporting the template.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ResourceGroupsExportTemplateResponse"
          />&gt;
        description: Promise<Models.ResourceGroupsExportTemplateResponse>
  - name: 'get(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.get'
    package: '@azure/arm-resources'
    summary: Gets a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourceGroupsGetResponse" />&gt;
        description: Promise<Models.ResourceGroupsGetResponse>
  - name: 'get(string, RequestOptionsBase, ServiceCallback<ResourceGroup>)'
    uid: '@azure/arm-resources.ResourceGroups.get_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.ResourceGroup"
            />&gt;
          description: |
            The callback
  - name: 'get(string, ServiceCallback<ResourceGroup>)'
    uid: '@azure/arm-resources.ResourceGroups.get_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, callback:
        ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.ResourceGroup"
            />&gt;
          description: |
            The callback
  - name: list(Models.ResourceGroupsListOptionalParams)
    uid: '@azure/arm-resources.ResourceGroups.list'
    package: '@azure/arm-resources'
    summary: Gets all the resource groups for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.ResourceGroupsListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.ResourceGroupsListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourceGroupsListResponse" />&gt;
        description: Promise<Models.ResourceGroupsListResponse>
  - name: >-
      list(ResourceGroupsListOptionalParams,
      ServiceCallback<ResourceGroupListResult>)
    uid: '@azure/arm-resources.ResourceGroups.list_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: ResourceGroupsListOptionalParams, callback:
        ServiceCallback<ResourceGroupListResult>)
      parameters:
        - id: options
          type: <xref uid="@azure/arm-resources.ResourceGroupsListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceGroupListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<ResourceGroupListResult>)
    uid: '@azure/arm-resources.ResourceGroups.list_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ResourceGroupListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceGroupListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.listNext'
    package: '@azure/arm-resources'
    summary: Gets all the resource groups for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourceGroupsListNextResponse" />&gt;
        description: Promise<Models.ResourceGroupsListNextResponse>
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ResourceGroupListResult>)
    uid: '@azure/arm-resources.ResourceGroups.listNext_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ResourceGroupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceGroupListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ResourceGroupListResult>)'
    uid: '@azure/arm-resources.ResourceGroups.listNext_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ResourceGroupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceGroupListResult" />&gt;
          description: |
            The callback
  - name: 'update(string, ResourceGroupPatchable, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.ResourceGroups.update'
    package: '@azure/arm-resources'
    summary: >-
      Resource groups can be updated through a simple PATCH operation to a group
      address. The format

      of the request is the same as that for creating a resource group. If a
      field is unspecified, the

      current value is retained.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, parameters:
        ResourceGroupPatchable, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to update. The name is case
            insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroupPatchable" />
          description: Parameters supplied to update a resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourceGroupsUpdateResponse" />&gt;
        description: Promise<Models.ResourceGroupsUpdateResponse>
  - name: >-
      update(string, ResourceGroupPatchable, RequestOptionsBase,
      ServiceCallback<ResourceGroup>)
    uid: '@azure/arm-resources.ResourceGroups.update_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, parameters:
        ResourceGroupPatchable, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to update. The name is case
            insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroupPatchable" />
          description: Parameters supplied to update a resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.ResourceGroup"
            />&gt;
          description: |
            The callback
  - name: 'update(string, ResourceGroupPatchable, ServiceCallback<ResourceGroup>)'
    uid: '@azure/arm-resources.ResourceGroups.update_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, parameters:
        ResourceGroupPatchable, callback: ServiceCallback<ResourceGroup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to update. The name is case
            insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroupPatchable" />
          description: Parameters supplied to update a resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.ResourceGroup"
            />&gt;
          description: |
            The callback
