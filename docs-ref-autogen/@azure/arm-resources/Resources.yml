### YamlMime:TSType
name: Resources
uid: '@azure/arm-resources.Resources'
package: '@azure/arm-resources'
summary: Class representing a Resources.
fullName: Resources
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Resources(ResourceManagementClientContext)
    uid: '@azure/arm-resources.Resources.constructor'
    package: '@azure/arm-resources'
    summary: Create a Resources.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Resources(client: ResourceManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-resources.ResourceManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, string, string, string,
      GenericResource, msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.beginCreateOrUpdate'
    package: '@azure/arm-resources'
    summary: Creates a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to create.
        - id: resourceName
          type: string
          description: The name of the resource to create.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Parameters for creating or updating the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCreateOrUpdateById(string, string, GenericResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.beginCreateOrUpdateById'
    package: '@azure/arm-resources'
    summary: Create a resource by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateById(resourceId: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Create or update resource parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteById(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.beginDeleteById'
    package: '@azure/arm-resources'
    summary: Deletes a resource by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteById(resourceId: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginDeleteMethod(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.beginDeleteMethod'
    package: '@azure/arm-resources'
    summary: Deletes a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource to delete.
            The name is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type.
        - id: resourceName
          type: string
          description: The name of the resource to delete.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginMoveResources(string, ResourcesMoveInfo, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.beginMoveResources'
    package: '@azure/arm-resources'
    summary: >-
      The resources to move must be in the same source resource group. The
      target resource group may

      be in a different subscription. When moving resources, both the source
      group and the target

      group are locked for the duration of the operation. Write and delete
      operations are blocked on

      the groups until the move completes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginMoveResources(sourceResourceGroupName: string, parameters:
        ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type: string
          description: The name of the resource group containing the resources to move.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourcesMoveInfo" />
          description: Parameters for moving resources.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdate(string, string, string, string, string, string,
      GenericResource, msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.beginUpdate'
    package: '@azure/arm-resources'
    summary: Updates a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to update.
        - id: resourceName
          type: string
          description: The name of the resource to update.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Parameters for updating the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdateById(string, string, GenericResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.beginUpdateById'
    package: '@azure/arm-resources'
    summary: Updates a resource by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateById(resourceId: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Update resource parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginValidateMoveResources(string, ResourcesMoveInfo,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.beginValidateMoveResources'
    package: '@azure/arm-resources'
    summary: >-
      This operation checks whether the specified resources can be moved to the
      target. The resources

      to move must be in the same source resource group. The target resource
      group may be in a

      different subscription. If validation succeeds, it returns HTTP response
      code 204 (no content).

      If validation fails, it returns HTTP response code 409 (Conflict) with an
      error message.

      Retrieve the URL in the Location header value to check the result of the
      long-running operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateMoveResources(sourceResourceGroupName: string,
        parameters: ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type: string
          description: |-
            The name of the resource group containing the resources to
            validate for move.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourcesMoveInfo" />
          description: Parameters for moving resources.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      checkExistence(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.checkExistence'
    package: '@azure/arm-resources'
    summary: Checks whether a resource exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group containing the resource to check. The
            name is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The resource provider of the resource to check.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type.
        - id: resourceName
          type: string
          description: The name of the resource to check whether it exists.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesCheckExistenceResponse" />&gt;
        description: Promise<Models.ResourcesCheckExistenceResponse>
  - name: >-
      checkExistence(string, string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<boolean>)
    uid: '@azure/arm-resources.Resources.checkExistence_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string, options:
        RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group containing the resource to check. The
            name is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The resource provider of the resource to check.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type.
        - id: resourceName
          type: string
          description: The name of the resource to check whether it exists.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      checkExistence(string, string, string, string, string, string,
      ServiceCallback<boolean>)
    uid: '@azure/arm-resources.Resources.checkExistence_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group containing the resource to check. The
            name is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The resource provider of the resource to check.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type.
        - id: resourceName
          type: string
          description: The name of the resource to check whether it exists.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'checkExistenceById(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.checkExistenceById'
    package: '@azure/arm-resources'
    summary: Checks by ID whether a resource exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistenceById(resourceId: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ResourcesCheckExistenceByIdResponse"
          />&gt;
        description: Promise<Models.ResourcesCheckExistenceByIdResponse>
  - name: >-
      checkExistenceById(string, string, RequestOptionsBase,
      ServiceCallback<boolean>)
    uid: '@azure/arm-resources.Resources.checkExistenceById_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistenceById(resourceId: string, apiVersion: string,
        options: RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'checkExistenceById(string, string, ServiceCallback<boolean>)'
    uid: '@azure/arm-resources.Resources.checkExistenceById_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistenceById(resourceId: string, apiVersion: string,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, string, string, string,
      GenericResource, msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.createOrUpdate'
    package: '@azure/arm-resources'
    summary: Creates a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to create.
        - id: resourceName
          type: string
          description: The name of the resource to create.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Parameters for creating or updating the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ResourcesCreateOrUpdateResponse>
  - name: >-
      createOrUpdateById(string, string, GenericResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.createOrUpdateById'
    package: '@azure/arm-resources'
    summary: Create a resource by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateById(resourceId: string, apiVersion: string,
        parameters: GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Create or update resource parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ResourcesCreateOrUpdateByIdResponse"
          />&gt;
        description: Promise<Models.ResourcesCreateOrUpdateByIdResponse>
  - name: 'deleteById(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.deleteById'
    package: '@azure/arm-resources'
    summary: Deletes a resource by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteById(resourceId: string, apiVersion: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.deleteMethod'
    package: '@azure/arm-resources'
    summary: Deletes a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, apiVersion: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource to delete.
            The name is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type.
        - id: resourceName
          type: string
          description: The name of the resource to delete.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      get(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.get'
    package: '@azure/arm-resources'
    summary: Gets a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource to get. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource to get.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesGetResponse" />&gt;
        description: Promise<Models.ResourcesGetResponse>
  - name: >-
      get(string, string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<GenericResource>)
    uid: '@azure/arm-resources.Resources.get_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, options: RequestOptionsBase, callback:
        ServiceCallback<GenericResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource to get. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource to get.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.GenericResource"
            />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, string, string, string,
      ServiceCallback<GenericResource>)
    uid: '@azure/arm-resources.Resources.get_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, callback: ServiceCallback<GenericResource>)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource to get. The
            name

            is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource to get.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.GenericResource"
            />&gt;
          description: |
            The callback
  - name: 'getById(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.getById'
    package: '@azure/arm-resources'
    summary: Gets a resource by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(resourceId: string, apiVersion: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesGetByIdResponse" />&gt;
        description: Promise<Models.ResourcesGetByIdResponse>
  - name: >-
      getById(string, string, RequestOptionsBase,
      ServiceCallback<GenericResource>)
    uid: '@azure/arm-resources.Resources.getById_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(resourceId: string, apiVersion: string, options:
        RequestOptionsBase, callback: ServiceCallback<GenericResource>)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.GenericResource"
            />&gt;
          description: |
            The callback
  - name: 'getById(string, string, ServiceCallback<GenericResource>)'
    uid: '@azure/arm-resources.Resources.getById_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getById(resourceId: string, apiVersion: string, callback:
        ServiceCallback<GenericResource>)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-resources.GenericResource"
            />&gt;
          description: |
            The callback
  - name: list(Models.ResourcesListOptionalParams)
    uid: '@azure/arm-resources.Resources.list'
    package: '@azure/arm-resources'
    summary: Get all the resources in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.ResourcesListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.ResourcesListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesListResponse" />&gt;
        description: Promise<Models.ResourcesListResponse>
  - name: 'list(ResourcesListOptionalParams, ServiceCallback<ResourceListResult>)'
    uid: '@azure/arm-resources.Resources.list_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: ResourcesListOptionalParams, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: options
          type: <xref uid="@azure/arm-resources.ResourcesListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<ResourceListResult>)
    uid: '@azure/arm-resources.Resources.list_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ResourceListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroup(string,
      Models.ResourcesListByResourceGroupOptionalParams)
    uid: '@azure/arm-resources.Resources.listByResourceGroup'
    package: '@azure/arm-resources'
    summary: Get all the resources for a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Models.ResourcesListByResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group with the resources to get.
        - id: options
          type: <xref uid="Models.ResourcesListByResourceGroupOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ResourcesListByResourceGroupResponse"
          />&gt;
        description: Promise<Models.ResourcesListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, ResourcesListByResourceGroupOptionalParams,
      ServiceCallback<ResourceListResult>)
    uid: '@azure/arm-resources.Resources.listByResourceGroup_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        ResourcesListByResourceGroupOptionalParams, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group with the resources to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ResourcesListByResourceGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<ResourceListResult>)'
    uid: '@azure/arm-resources.Resources.listByResourceGroup_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The resource group with the resources to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.listByResourceGroupNext'
    package: '@azure/arm-resources'
    summary: Get all the resources for a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ResourcesListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.ResourcesListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<ResourceListResult>)
    uid: '@azure/arm-resources.Resources.listByResourceGroupNext_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<ResourceListResult>)'
    uid: '@azure/arm-resources.Resources.listByResourceGroupNext_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.listNext'
    package: '@azure/arm-resources'
    summary: Get all the resources in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesListNextResponse" />&gt;
        description: Promise<Models.ResourcesListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<ResourceListResult>)'
    uid: '@azure/arm-resources.Resources.listNext_2'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ResourceListResult>)'
    uid: '@azure/arm-resources.Resources.listNext_1'
    package: '@azure/arm-resources'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-resources.ResourceListResult" />&gt;
          description: |
            The callback
  - name: 'moveResources(string, ResourcesMoveInfo, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.moveResources'
    package: '@azure/arm-resources'
    summary: >-
      The resources to move must be in the same source resource group. The
      target resource group may

      be in a different subscription. When moving resources, both the source
      group and the target

      group are locked for the duration of the operation. Write and delete
      operations are blocked on

      the groups until the move completes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function moveResources(sourceResourceGroupName: string, parameters:
        ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type: string
          description: The name of the resource group containing the resources to move.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourcesMoveInfo" />
          description: Parameters for moving resources.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      update(string, string, string, string, string, string, GenericResource,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.update'
    package: '@azure/arm-resources'
    summary: Updates a resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, resourceProviderNamespace:
        string, parentResourcePath: string, resourceType: string, resourceName:
        string, apiVersion: string, parameters: GenericResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group for the resource. The name is case
            insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to update.
        - id: resourceName
          type: string
          description: The name of the resource to update.
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Parameters for updating the resource.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesUpdateResponse" />&gt;
        description: Promise<Models.ResourcesUpdateResponse>
  - name: 'updateById(string, string, GenericResource, msRest.RequestOptionsBase)'
    uid: '@azure/arm-resources.Resources.updateById'
    package: '@azure/arm-resources'
    summary: Updates a resource by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateById(resourceId: string, apiVersion: string, parameters:
        GenericResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceId
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and

            resource type. Use the format,

            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
        - id: apiVersion
          type: string
          description: The API version to use for the operation.
        - id: parameters
          type: <xref uid="@azure/arm-resources.GenericResource" />
          description: Update resource parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ResourcesUpdateByIdResponse" />&gt;
        description: Promise<Models.ResourcesUpdateByIdResponse>
  - name: >-
      validateMoveResources(string, ResourcesMoveInfo,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-resources.Resources.validateMoveResources'
    package: '@azure/arm-resources'
    summary: >-
      This operation checks whether the specified resources can be moved to the
      target. The resources

      to move must be in the same source resource group. The target resource
      group may be in a

      different subscription. If validation succeeds, it returns HTTP response
      code 204 (no content).

      If validation fails, it returns HTTP response code 409 (Conflict) with an
      error message.

      Retrieve the URL in the Location header value to check the result of the
      long-running operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function validateMoveResources(sourceResourceGroupName: string,
        parameters: ResourcesMoveInfo, options?: msRest.RequestOptionsBase)
      parameters:
        - id: sourceResourceGroupName
          type: string
          description: |-
            The name of the resource group containing the resources to
            validate for move.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourcesMoveInfo" />
          description: Parameters for moving resources.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
