### YamlMime:TSType
name: Backend
uid: '@azure/arm-apimanagement.Backend'
package: '@azure/arm-apimanagement'
summary: Class representing a Backend.
fullName: Backend
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Backend(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.Backend.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a Backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Backend(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, BackendContract,
      BackendCreateOrUpdateOptionalParams, ServiceCallback<BackendContract>)
    uid: '@azure/arm-apimanagement.Backend.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        backendId: string, parameters: BackendContract, options:
        BackendCreateOrUpdateOptionalParams, callback:
        ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendContract" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.BackendCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, BackendContract,
      Models.BackendCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or Updates a backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        backendId: string, parameters: BackendContract, options?:
        Models.BackendCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendContract" />
          description: Create parameters.
        - id: options
          type: <xref uid="Models.BackendCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.BackendCreateOrUpdateResponse" />&gt;
        description: Promise<Models.BackendCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, BackendContract,
      ServiceCallback<BackendContract>)
    uid: '@azure/arm-apimanagement.Backend.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        backendId: string, parameters: BackendContract, callback:
        ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendContract" />
          description: Create parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendContract" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Backend.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes the specified backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        backendId: string, ifMatch: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Backend.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        backendId: string, ifMatch: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Backend.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        backendId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Backend.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the backend specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, backendId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.BackendGetResponse" />&gt;
        description: Promise<Models.BackendGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<BackendContract>)
    uid: '@azure/arm-apimanagement.Backend.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, backendId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<BackendContract>)'
    uid: '@azure/arm-apimanagement.Backend.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, backendId:
        string, callback: ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Backend.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the backend specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        backendId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.BackendGetEntityTagResponse" />&gt;
        description: Promise<Models.BackendGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Backend.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        backendId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Backend.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        backendId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, BackendListByServiceOptionalParams,
      ServiceCallback<BackendCollection>)
    uid: '@azure/arm-apimanagement.Backend.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: BackendListByServiceOptionalParams, callback:
        ServiceCallback<BackendCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.BackendListByServiceOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendCollection" />&gt;
          description: |
            The callback
  - name: 'listByService(string, string, Models.BackendListByServiceOptionalParams)'
    uid: '@azure/arm-apimanagement.Backend.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of backends in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.BackendListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.BackendListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.BackendListByServiceResponse" />&gt;
        description: Promise<Models.BackendListByServiceResponse>
  - name: 'listByService(string, string, ServiceCallback<BackendCollection>)'
    uid: '@azure/arm-apimanagement.Backend.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<BackendCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, BackendListByServiceNextOptionalParams,
      ServiceCallback<BackendCollection>)
    uid: '@azure/arm-apimanagement.Backend.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        BackendListByServiceNextOptionalParams, callback:
        ServiceCallback<BackendCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.BackendListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendCollection" />&gt;
          description: |
            The callback
  - name: 'listByServiceNext(string, Models.BackendListByServiceNextOptionalParams)'
    uid: '@azure/arm-apimanagement.Backend.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of backends in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.BackendListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.BackendListByServiceNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.BackendListByServiceNextResponse" />&gt;
        description: Promise<Models.BackendListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<BackendCollection>)'
    uid: '@azure/arm-apimanagement.Backend.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<BackendCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendCollection" />&gt;
          description: |
            The callback
  - name: >-
      reconnect(string, string, string, BackendReconnectOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Backend.reconnect_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reconnect(resourceGroupName: string, serviceName: string,
        backendId: string, options: BackendReconnectOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.BackendReconnectOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'reconnect(string, string, string, Models.BackendReconnectOptionalParams)'
    uid: '@azure/arm-apimanagement.Backend.reconnect'
    package: '@azure/arm-apimanagement'
    summary: >-
      Notifies the APIM proxy to create a new connection to the backend after
      the specified timeout.

      If no timeout was specified, timeout of 2 minutes is used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reconnect(resourceGroupName: string, serviceName: string,
        backendId: string, options?: Models.BackendReconnectOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: <xref uid="Models.BackendReconnectOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'reconnect(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Backend.reconnect_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reconnect(resourceGroupName: string, serviceName: string,
        backendId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, BackendUpdateParameters, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.Backend.update'
    package: '@azure/arm-apimanagement'
    summary: Updates an existing backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        backendId: string, parameters: BackendUpdateParameters, ifMatch: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.BackendUpdateResponse" />&gt;
        description: Promise<Models.BackendUpdateResponse>
  - name: >-
      update(string, string, string, BackendUpdateParameters, string,
      RequestOptionsBase, ServiceCallback<BackendContract>)
    uid: '@azure/arm-apimanagement.Backend.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        backendId: string, parameters: BackendUpdateParameters, ifMatch: string,
        options: RequestOptionsBase, callback: ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, BackendUpdateParameters, string,
      ServiceCallback<BackendContract>)
    uid: '@azure/arm-apimanagement.Backend.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        backendId: string, parameters: BackendUpdateParameters, ifMatch: string,
        callback: ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.BackendContract" />&gt;
          description: |
            The callback
