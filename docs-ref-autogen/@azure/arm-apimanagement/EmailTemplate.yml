### YamlMime:TSType
name: EmailTemplate
uid: '@azure/arm-apimanagement.EmailTemplate'
package: '@azure/arm-apimanagement'
summary: Class representing a EmailTemplate.
fullName: EmailTemplate
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: EmailTemplate(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.EmailTemplate.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a EmailTemplate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new EmailTemplate(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, Models.TemplateName,
      EmailTemplateUpdateParameters, EmailTemplateCreateOrUpdateOptionalParams,
      ServiceCallback<EmailTemplateContract>)
    uid: '@azure/arm-apimanagement.EmailTemplate.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, parameters:
        EmailTemplateUpdateParameters, options:
        EmailTemplateCreateOrUpdateOptionalParams, callback:
        ServiceCallback<EmailTemplateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: parameters
          type: >-
            <xref uid="@azure/arm-apimanagement.EmailTemplateUpdateParameters"
            />
          description: Email Template update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.EmailTemplateCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, Models.TemplateName,
      EmailTemplateUpdateParameters,
      Models.EmailTemplateCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.EmailTemplate.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Updates an Email Template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, parameters:
        EmailTemplateUpdateParameters, options?:
        Models.EmailTemplateCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: parameters
          type: >-
            <xref uid="@azure/arm-apimanagement.EmailTemplateUpdateParameters"
            />
          description: Email Template update parameters.
        - id: options
          type: <xref uid="Models.EmailTemplateCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.EmailTemplateCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.EmailTemplateCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, Models.TemplateName,
      EmailTemplateUpdateParameters, ServiceCallback<EmailTemplateContract>)
    uid: '@azure/arm-apimanagement.EmailTemplate.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, parameters:
        EmailTemplateUpdateParameters, callback:
        ServiceCallback<EmailTemplateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: parameters
          type: >-
            <xref uid="@azure/arm-apimanagement.EmailTemplateUpdateParameters"
            />
          description: Email Template update parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateContract" />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, Models.TemplateName, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.EmailTemplate.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: >-
      Reset the Email Template to default template provided by the API
      Management service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, Models.TemplateName, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.EmailTemplate.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, Models.TemplateName, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.EmailTemplate.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, Models.TemplateName, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.EmailTemplate.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the email template specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.EmailTemplateGetResponse" />&gt;
        description: Promise<Models.EmailTemplateGetResponse>
  - name: >-
      get(string, string, Models.TemplateName, RequestOptionsBase,
      ServiceCallback<EmailTemplateContract>)
    uid: '@azure/arm-apimanagement.EmailTemplate.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, options: RequestOptionsBase,
        callback: ServiceCallback<EmailTemplateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateContract" />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, Models.TemplateName,
      ServiceCallback<EmailTemplateContract>)
    uid: '@azure/arm-apimanagement.EmailTemplate.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, callback:
        ServiceCallback<EmailTemplateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateContract" />&gt;
          description: |
            The callback
  - name: >-
      getEntityTag(string, string, Models.TemplateName,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.EmailTemplate.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the email template specified by
      its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.EmailTemplateGetEntityTagResponse" />&gt;
        description: Promise<Models.EmailTemplateGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, Models.TemplateName, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.EmailTemplate.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, Models.TemplateName, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.EmailTemplate.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, EmailTemplateListByServiceOptionalParams,
      ServiceCallback<EmailTemplateCollection>)
    uid: '@azure/arm-apimanagement.EmailTemplate.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: EmailTemplateListByServiceOptionalParams, callback:
        ServiceCallback<EmailTemplateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.EmailTemplateListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string,
      Models.EmailTemplateListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.EmailTemplate.listByService'
    package: '@azure/arm-apimanagement'
    summary: Gets all email templates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.EmailTemplateListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.EmailTemplateListByServiceOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.EmailTemplateListByServiceResponse"
          />&gt;
        description: Promise<Models.EmailTemplateListByServiceResponse>
  - name: 'listByService(string, string, ServiceCallback<EmailTemplateCollection>)'
    uid: '@azure/arm-apimanagement.EmailTemplate.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<EmailTemplateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, EmailTemplateListByServiceNextOptionalParams,
      ServiceCallback<EmailTemplateCollection>)
    uid: '@azure/arm-apimanagement.EmailTemplate.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        EmailTemplateListByServiceNextOptionalParams, callback:
        ServiceCallback<EmailTemplateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.EmailTemplateListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      Models.EmailTemplateListByServiceNextOptionalParams)
    uid: '@azure/arm-apimanagement.EmailTemplate.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Gets all email templates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.EmailTemplateListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.EmailTemplateListByServiceNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.EmailTemplateListByServiceNextResponse"
          />&gt;
        description: Promise<Models.EmailTemplateListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<EmailTemplateCollection>)'
    uid: '@azure/arm-apimanagement.EmailTemplate.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<EmailTemplateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateCollection" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, Models.TemplateName, string,
      EmailTemplateUpdateParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.EmailTemplate.update'
    package: '@azure/arm-apimanagement'
    summary: Updates API Management email template
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, ifMatch: string, parameters:
        EmailTemplateUpdateParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-apimanagement.EmailTemplateUpdateParameters"
            />
          description: Update parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.EmailTemplateUpdateResponse" />&gt;
        description: Promise<Models.EmailTemplateUpdateResponse>
  - name: >-
      update(string, string, Models.TemplateName, string,
      EmailTemplateUpdateParameters, RequestOptionsBase,
      ServiceCallback<EmailTemplateContract>)
    uid: '@azure/arm-apimanagement.EmailTemplate.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, ifMatch: string, parameters:
        EmailTemplateUpdateParameters, options: RequestOptionsBase, callback:
        ServiceCallback<EmailTemplateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-apimanagement.EmailTemplateUpdateParameters"
            />
          description: Update parameters.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, Models.TemplateName, string,
      EmailTemplateUpdateParameters, ServiceCallback<EmailTemplateContract>)
    uid: '@azure/arm-apimanagement.EmailTemplate.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        templateName: Models.TemplateName, ifMatch: string, parameters:
        EmailTemplateUpdateParameters, callback:
        ServiceCallback<EmailTemplateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: templateName
          type: <xref uid="Models.TemplateName" />
          description: >-
            Email Template Name Identifier. Possible values include:

            'applicationApprovedNotificationMessage', 'accountClosedDeveloper',

            'quotaLimitApproachingDeveloperNotificationMessage',
            'newDeveloperNotificationMessage',

            'emailChangeIdentityDefault', 'inviteUserNotificationMessage',
            'newCommentNotificationMessage',

            'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',

            'purchaseDeveloperNotificationMessage',
            'passwordResetIdentityDefault',

            'passwordResetByAdminNotificationMessage',
            'rejectDeveloperNotificationMessage',

            'requestDeveloperNotificationMessage'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-apimanagement.EmailTemplateUpdateParameters"
            />
          description: Update parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.EmailTemplateContract" />&gt;
          description: |
            The callback
