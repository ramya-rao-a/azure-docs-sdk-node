### YamlMime:TSType
name: GatewayCertificateAuthority
uid: '@azure/arm-apimanagement.GatewayCertificateAuthority'
package: '@azure/arm-apimanagement'
summary: Class representing a GatewayCertificateAuthority.
fullName: GatewayCertificateAuthority
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: GatewayCertificateAuthority(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a GatewayCertificateAuthority.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new GatewayCertificateAuthority(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, string,
      GatewayCertificateAuthorityContract,
      GatewayCertificateAuthorityCreateOrUpdateOptionalParams,
      ServiceCallback<GatewayCertificateAuthorityContract>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, parameters:
        GatewayCertificateAuthorityContract, options:
        GatewayCertificateAuthorityCreateOrUpdateOptionalParams, callback:
        ServiceCallback<GatewayCertificateAuthorityContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityContract"
            />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityContract"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, string,
      GatewayCertificateAuthorityContract,
      Models.GatewayCertificateAuthorityCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Assign Certificate entity to Gateway entity as Certificate Authority.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, parameters:
        GatewayCertificateAuthorityContract, options?:
        Models.GatewayCertificateAuthorityCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityContract"
            />
          description: ''
        - id: options
          type: >-
            <xref
            uid="Models.GatewayCertificateAuthorityCreateOrUpdateOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.GatewayCertificateAuthorityCreateOrUpdateResponse" />&gt;
        description: Promise<Models.GatewayCertificateAuthorityCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, string,
      GatewayCertificateAuthorityContract,
      ServiceCallback<GatewayCertificateAuthorityContract>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, parameters:
        GatewayCertificateAuthorityContract, callback:
        ServiceCallback<GatewayCertificateAuthorityContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityContract"
            />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityContract"
            />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Remove relationship between Certificate Authority and Gateway entity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.get'
    package: '@azure/arm-apimanagement'
    summary: Get assigned Gateway Certificate Authority details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, gatewayId:
        string, certificateId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.GatewayCertificateAuthorityGetResponse"
          />&gt;
        description: Promise<Models.GatewayCertificateAuthorityGetResponse>
  - name: >-
      get(string, string, string, string, RequestOptionsBase,
      ServiceCallback<GatewayCertificateAuthorityContract>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, gatewayId:
        string, certificateId: string, options: RequestOptionsBase, callback:
        ServiceCallback<GatewayCertificateAuthorityContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityContract"
            />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, string,
      ServiceCallback<GatewayCertificateAuthorityContract>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, gatewayId:
        string, certificateId: string, callback:
        ServiceCallback<GatewayCertificateAuthorityContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityContract"
            />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Checks if Certificate entity is assigned to Gateway entity as Certificate
      Authority.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.GatewayCertificateAuthorityGetEntityTagResponse" />&gt;
        description: Promise<Models.GatewayCertificateAuthorityGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        gatewayId: string, certificateId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string,
      GatewayCertificateAuthorityListByServiceOptionalParams,
      ServiceCallback<GatewayCertificateAuthorityCollection>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        gatewayId: string, options:
        GatewayCertificateAuthorityListByServiceOptionalParams, callback:
        ServiceCallback<GatewayCertificateAuthorityCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string,
      Models.GatewayCertificateAuthorityListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.listByService'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists the collection of Certificate Authorities for the specified Gateway
      entity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        gatewayId: string, options?:
        Models.GatewayCertificateAuthorityListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: options
          type: >-
            <xref
            uid="Models.GatewayCertificateAuthorityListByServiceOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.GatewayCertificateAuthorityListByServiceResponse" />&gt;
        description: Promise<Models.GatewayCertificateAuthorityListByServiceResponse>
  - name: >-
      listByService(string, string, string,
      ServiceCallback<GatewayCertificateAuthorityCollection>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        gatewayId: string, callback:
        ServiceCallback<GatewayCertificateAuthorityCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: gatewayId
          type: string
          description: >-
            Gateway entity identifier. Must be unique in the current API
            Management service

            instance. Must not have value 'managed'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      GatewayCertificateAuthorityListByServiceNextOptionalParams,
      ServiceCallback<GatewayCertificateAuthorityCollection>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        GatewayCertificateAuthorityListByServiceNextOptionalParams, callback:
        ServiceCallback<GatewayCertificateAuthorityCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityCollection"
            />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      Models.GatewayCertificateAuthorityListByServiceNextOptionalParams)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists the collection of Certificate Authorities for the specified Gateway
      entity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.GatewayCertificateAuthorityListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.GatewayCertificateAuthorityListByServiceNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.GatewayCertificateAuthorityListByServiceNextResponse"
          />&gt;
        description: Promise<Models.GatewayCertificateAuthorityListByServiceNextResponse>
  - name: >-
      listByServiceNext(string,
      ServiceCallback<GatewayCertificateAuthorityCollection>)
    uid: '@azure/arm-apimanagement.GatewayCertificateAuthority.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<GatewayCertificateAuthorityCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GatewayCertificateAuthorityCollection"
            />&gt;
          description: |
            The callback
