### YamlMime:TSType
name: DeletedServices
uid: '@azure/arm-apimanagement.DeletedServices'
package: '@azure/arm-apimanagement'
summary: Class representing a DeletedServices.
fullName: DeletedServices
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: DeletedServices(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.DeletedServices.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a DeletedServices.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DeletedServices(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'beginPurge(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.DeletedServices.beginPurge'
    package: '@azure/arm-apimanagement'
    summary: Purges Api Management Service (deletes it with no option to undelete).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurge(serviceName: string, location: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: location
          type: string
          description: The location of the deleted API Management service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'getByName(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.DeletedServices.getByName'
    package: '@azure/arm-apimanagement'
    summary: Get soft-deleted Api Management Service by name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByName(serviceName: string, location: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: location
          type: string
          description: The location of the deleted API Management service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DeletedServicesGetByNameResponse" />&gt;
        description: Promise<Models.DeletedServicesGetByNameResponse>
  - name: >-
      getByName(string, string, RequestOptionsBase,
      ServiceCallback<DeletedServiceContract>)
    uid: '@azure/arm-apimanagement.DeletedServices.getByName_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByName(serviceName: string, location: string, options:
        RequestOptionsBase, callback: ServiceCallback<DeletedServiceContract>)
      parameters:
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: location
          type: string
          description: The location of the deleted API Management service.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.DeletedServiceContract" />&gt;
          description: |
            The callback
  - name: 'getByName(string, string, ServiceCallback<DeletedServiceContract>)'
    uid: '@azure/arm-apimanagement.DeletedServices.getByName_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByName(serviceName: string, location: string, callback:
        ServiceCallback<DeletedServiceContract>)
      parameters:
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: location
          type: string
          description: The location of the deleted API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.DeletedServiceContract" />&gt;
          description: |
            The callback
  - name: listBySubscription(msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.DeletedServices.listBySubscription'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists all soft-deleted services available for undelete for the given
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DeletedServicesListBySubscriptionResponse" />&gt;
        description: Promise<Models.DeletedServicesListBySubscriptionResponse>
  - name: >-
      listBySubscription(RequestOptionsBase,
      ServiceCallback<DeletedServicesCollection>)
    uid: '@azure/arm-apimanagement.DeletedServices.listBySubscription_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<DeletedServicesCollection>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.DeletedServicesCollection" />&gt;
          description: |
            The callback
  - name: listBySubscription(ServiceCallback<DeletedServicesCollection>)
    uid: '@azure/arm-apimanagement.DeletedServices.listBySubscription_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<DeletedServicesCollection>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.DeletedServicesCollection" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.DeletedServices.listBySubscriptionNext'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists all soft-deleted services available for undelete for the given
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.DeletedServicesListBySubscriptionNextResponse" />&gt;
        description: Promise<Models.DeletedServicesListBySubscriptionNextResponse>
  - name: >-
      listBySubscriptionNext(string, RequestOptionsBase,
      ServiceCallback<DeletedServicesCollection>)
    uid: '@azure/arm-apimanagement.DeletedServices.listBySubscriptionNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<DeletedServicesCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.DeletedServicesCollection" />&gt;
          description: |
            The callback
  - name: 'listBySubscriptionNext(string, ServiceCallback<DeletedServicesCollection>)'
    uid: '@azure/arm-apimanagement.DeletedServices.listBySubscriptionNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<DeletedServicesCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.DeletedServicesCollection" />&gt;
          description: |
            The callback
  - name: 'purge(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.DeletedServices.purge'
    package: '@azure/arm-apimanagement'
    summary: Purges Api Management Service (deletes it with no option to undelete).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purge(serviceName: string, location: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: location
          type: string
          description: The location of the deleted API Management service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.DeletedServicesPurgeResponse" />&gt;
        description: Promise<Models.DeletedServicesPurgeResponse>
