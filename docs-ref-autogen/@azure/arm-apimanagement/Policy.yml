### YamlMime:TSType
name: Policy
uid: '@azure/arm-apimanagement.Policy'
package: '@azure/arm-apimanagement'
summary: Class representing a Policy.
fullName: Policy
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Policy(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.Policy.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a Policy.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Policy(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, PolicyContract,
      Models.PolicyCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Policy.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates or updates the global policy configuration of the Api Management
      service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        parameters: PolicyContract, options?:
        Models.PolicyCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.PolicyContract" />
          description: The policy contents to apply.
        - id: options
          type: <xref uid="Models.PolicyCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PolicyCreateOrUpdateResponse" />&gt;
        description: Promise<Models.PolicyCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, PolicyContract,
      PolicyCreateOrUpdateOptionalParams, ServiceCallback<PolicyContract>)
    uid: '@azure/arm-apimanagement.Policy.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        parameters: PolicyContract, options: PolicyCreateOrUpdateOptionalParams,
        callback: ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.PolicyContract" />
          description: The policy contents to apply.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.PolicyCreateOrUpdateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.PolicyContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, PolicyContract,
      ServiceCallback<PolicyContract>)
    uid: '@azure/arm-apimanagement.Policy.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        parameters: PolicyContract, callback: ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.PolicyContract" />
          description: The policy contents to apply.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.PolicyContract" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Policy.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes the global policy configuration of the Api Management Service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        ifMatch: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Policy.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        ifMatch: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Policy.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, Models.PolicyGetOptionalParams)'
    uid: '@azure/arm-apimanagement.Policy.get'
    package: '@azure/arm-apimanagement'
    summary: Get the Global policy definition of the Api Management service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, options?:
        Models.PolicyGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.PolicyGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PolicyGetResponse" />&gt;
        description: Promise<Models.PolicyGetResponse>
  - name: >-
      get(string, string, PolicyGetOptionalParams,
      ServiceCallback<PolicyContract>)
    uid: '@azure/arm-apimanagement.Policy.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, options:
        PolicyGetOptionalParams, callback: ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.PolicyGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.PolicyContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<PolicyContract>)'
    uid: '@azure/arm-apimanagement.Policy.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, callback:
        ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.PolicyContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Policy.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the Global policy definition in
      the Api Management

      service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PolicyGetEntityTagResponse" />&gt;
        description: Promise<Models.PolicyGetEntityTagResponse>
  - name: 'getEntityTag(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Policy.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Policy.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'listByService(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Policy.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists all the Global Policy definitions of the Api Management service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PolicyListByServiceResponse" />&gt;
        description: Promise<Models.PolicyListByServiceResponse>
  - name: >-
      listByService(string, string, RequestOptionsBase,
      ServiceCallback<PolicyCollection>)
    uid: '@azure/arm-apimanagement.Policy.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<PolicyCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.PolicyCollection" />&gt;
          description: |
            The callback
  - name: 'listByService(string, string, ServiceCallback<PolicyCollection>)'
    uid: '@azure/arm-apimanagement.Policy.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<PolicyCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.PolicyCollection" />&gt;
          description: |
            The callback
