### YamlMime:TSType
name: User
uid: '@azure/arm-apimanagement.User'
package: '@azure/arm-apimanagement'
summary: Class representing a User.
fullName: User
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: User(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.User.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a User.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new User(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, UserCreateParameters,
      Models.UserCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.User.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or Updates a user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        userId: string, parameters: UserCreateParameters, options?:
        Models.UserCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserCreateParameters" />
          description: Create or update parameters.
        - id: options
          type: <xref uid="Models.UserCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserCreateOrUpdateResponse" />&gt;
        description: Promise<Models.UserCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, UserCreateParameters,
      ServiceCallback<UserContract>)
    uid: '@azure/arm-apimanagement.User.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        userId: string, parameters: UserCreateParameters, callback:
        ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserCreateParameters" />
          description: Create or update parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, UserCreateParameters,
      UserCreateOrUpdateOptionalParams, ServiceCallback<UserContract>)
    uid: '@azure/arm-apimanagement.User.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        userId: string, parameters: UserCreateParameters, options:
        UserCreateOrUpdateOptionalParams, callback:
        ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserCreateParameters" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.UserCreateOrUpdateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string,
      Models.UserDeleteMethodOptionalParams)
    uid: '@azure/arm-apimanagement.User.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        userId: string, ifMatch: string, options?:
        Models.UserDeleteMethodOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="Models.UserDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.User.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        userId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string,
      UserDeleteMethodOptionalParams, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.User.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        userId: string, ifMatch: string, options:
        UserDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.UserDeleteMethodOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'generateSsoUrl(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.User.generateSsoUrl'
    package: '@azure/arm-apimanagement'
    summary: >-
      Retrieves a redirection URL containing an authentication token for signing
      a given user into the

      developer portal.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateSsoUrl(resourceGroupName: string, serviceName: string,
        userId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserGenerateSsoUrlResponse" />&gt;
        description: Promise<Models.UserGenerateSsoUrlResponse>
  - name: >-
      generateSsoUrl(string, string, string, RequestOptionsBase,
      ServiceCallback<GenerateSsoUrlResult>)
    uid: '@azure/arm-apimanagement.User.generateSsoUrl_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateSsoUrl(resourceGroupName: string, serviceName: string,
        userId: string, options: RequestOptionsBase, callback:
        ServiceCallback<GenerateSsoUrlResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GenerateSsoUrlResult" />&gt;
          description: |
            The callback
  - name: >-
      generateSsoUrl(string, string, string,
      ServiceCallback<GenerateSsoUrlResult>)
    uid: '@azure/arm-apimanagement.User.generateSsoUrl_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateSsoUrl(resourceGroupName: string, serviceName: string,
        userId: string, callback: ServiceCallback<GenerateSsoUrlResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.GenerateSsoUrlResult" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.User.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the user specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, userId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserGetResponse" />&gt;
        description: Promise<Models.UserGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<UserContract>)
    uid: '@azure/arm-apimanagement.User.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, userId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<UserContract>)'
    uid: '@azure/arm-apimanagement.User.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, userId:
        string, callback: ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.User.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the user specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        userId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserGetEntityTagResponse" />&gt;
        description: Promise<Models.UserGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.User.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        userId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.User.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        userId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getSharedAccessToken(string, string, string, UserTokenParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.User.getSharedAccessToken'
    package: '@azure/arm-apimanagement'
    summary: Gets the Shared Access Authorization Token for the User.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSharedAccessToken(resourceGroupName: string, serviceName:
        string, userId: string, parameters: UserTokenParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserTokenParameters" />
          description: Create Authorization Token parameters.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserGetSharedAccessTokenResponse" />&gt;
        description: Promise<Models.UserGetSharedAccessTokenResponse>
  - name: >-
      getSharedAccessToken(string, string, string, UserTokenParameters,
      RequestOptionsBase, ServiceCallback<UserTokenResult>)
    uid: '@azure/arm-apimanagement.User.getSharedAccessToken_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSharedAccessToken(resourceGroupName: string, serviceName:
        string, userId: string, parameters: UserTokenParameters, options:
        RequestOptionsBase, callback: ServiceCallback<UserTokenResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserTokenParameters" />
          description: Create Authorization Token parameters.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserTokenResult" />&gt;
          description: |
            The callback
  - name: >-
      getSharedAccessToken(string, string, string, UserTokenParameters,
      ServiceCallback<UserTokenResult>)
    uid: '@azure/arm-apimanagement.User.getSharedAccessToken_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSharedAccessToken(resourceGroupName: string, serviceName:
        string, userId: string, parameters: UserTokenParameters, callback:
        ServiceCallback<UserTokenResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserTokenParameters" />
          description: Create Authorization Token parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserTokenResult" />&gt;
          description: |
            The callback
  - name: 'listByService(string, string, Models.UserListByServiceOptionalParams)'
    uid: '@azure/arm-apimanagement.User.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of registered users in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.UserListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.UserListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserListByServiceResponse" />&gt;
        description: Promise<Models.UserListByServiceResponse>
  - name: 'listByService(string, string, ServiceCallback<UserCollection>)'
    uid: '@azure/arm-apimanagement.User.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, UserListByServiceOptionalParams,
      ServiceCallback<UserCollection>)
    uid: '@azure/arm-apimanagement.User.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: UserListByServiceOptionalParams, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.UserListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
  - name: 'listByServiceNext(string, Models.UserListByServiceNextOptionalParams)'
    uid: '@azure/arm-apimanagement.User.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of registered users in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.UserListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.UserListByServiceNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserListByServiceNextResponse" />&gt;
        description: Promise<Models.UserListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<UserCollection>)'
    uid: '@azure/arm-apimanagement.User.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, UserListByServiceNextOptionalParams,
      ServiceCallback<UserCollection>)
    uid: '@azure/arm-apimanagement.User.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        UserListByServiceNextOptionalParams, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.UserListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, UserUpdateParameters, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.User.update'
    package: '@azure/arm-apimanagement'
    summary: Updates the details of the user specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, userId:
        string, parameters: UserUpdateParameters, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.UserUpdateResponse" />&gt;
        description: Promise<Models.UserUpdateResponse>
  - name: >-
      update(string, string, string, UserUpdateParameters, string,
      RequestOptionsBase, ServiceCallback<UserContract>)
    uid: '@azure/arm-apimanagement.User.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, userId:
        string, parameters: UserUpdateParameters, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, UserUpdateParameters, string,
      ServiceCallback<UserContract>)
    uid: '@azure/arm-apimanagement.User.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, userId:
        string, parameters: UserUpdateParameters, ifMatch: string, callback:
        ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.UserUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
