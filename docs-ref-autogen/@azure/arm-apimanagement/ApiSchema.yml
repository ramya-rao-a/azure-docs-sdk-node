### YamlMime:TSType
name: ApiSchema
uid: '@azure/arm-apimanagement.ApiSchema'
package: '@azure/arm-apimanagement'
summary: Class representing a ApiSchema.
fullName: ApiSchema
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ApiSchema(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.ApiSchema.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a ApiSchema.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ApiSchema(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, string, SchemaContract,
      Models.ApiSchemaBeginCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.beginCreateOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or updates schema configuration for the API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serviceName:
        string, apiId: string, schemaId: string, parameters: SchemaContract,
        options?: Models.ApiSchemaBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.SchemaContract" />
          description: The schema contents to apply.
        - id: options
          type: <xref uid="Models.ApiSchemaBeginCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrUpdate(string, string, string, string, SchemaContract,
      Models.ApiSchemaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or updates schema configuration for the API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, parameters: SchemaContract, options?:
        Models.ApiSchemaCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.SchemaContract" />
          description: The schema contents to apply.
        - id: options
          type: <xref uid="Models.ApiSchemaCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiSchemaCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ApiSchemaCreateOrUpdateResponse>
  - name: >-
      deleteMethod(string, string, string, string, string,
      ApiSchemaDeleteMethodOptionalParams, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiSchema.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, ifMatch: string, options:
        ApiSchemaDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiSchemaDeleteMethodOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string,
      Models.ApiSchemaDeleteMethodOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes the schema configuration at the Api.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, ifMatch: string, options?:
        Models.ApiSchemaDeleteMethodOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="Models.ApiSchemaDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiSchema.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.ApiSchema.get'
    package: '@azure/arm-apimanagement'
    summary: Get the schema configuration at the API level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, schemaId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiSchemaGetResponse" />&gt;
        description: Promise<Models.ApiSchemaGetResponse>
  - name: >-
      get(string, string, string, string, RequestOptionsBase,
      ServiceCallback<SchemaContract>)
    uid: '@azure/arm-apimanagement.ApiSchema.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, schemaId: string, options: RequestOptionsBase, callback:
        ServiceCallback<SchemaContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.SchemaContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, ServiceCallback<SchemaContract>)'
    uid: '@azure/arm-apimanagement.ApiSchema.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, schemaId: string, callback: ServiceCallback<SchemaContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.SchemaContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.ApiSchema.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the schema specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiSchemaGetEntityTagResponse" />&gt;
        description: Promise<Models.ApiSchemaGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiSchema.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.ApiSchema.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: schemaId
          type: string
          description: >-
            Schema identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByApi(string, string, string, ApiSchemaListByApiOptionalParams,
      ServiceCallback<SchemaCollection>)
    uid: '@azure/arm-apimanagement.ApiSchema.listByApi_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByApi(resourceGroupName: string, serviceName: string,
        apiId: string, options: ApiSchemaListByApiOptionalParams, callback:
        ServiceCallback<SchemaCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiSchemaListByApiOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.SchemaCollection" />&gt;
          description: |
            The callback
  - name: 'listByApi(string, string, string, Models.ApiSchemaListByApiOptionalParams)'
    uid: '@azure/arm-apimanagement.ApiSchema.listByApi'
    package: '@azure/arm-apimanagement'
    summary: Get the schema configuration at the API level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByApi(resourceGroupName: string, serviceName: string,
        apiId: string, options?: Models.ApiSchemaListByApiOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: options
          type: <xref uid="Models.ApiSchemaListByApiOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiSchemaListByApiResponse" />&gt;
        description: Promise<Models.ApiSchemaListByApiResponse>
  - name: 'listByApi(string, string, string, ServiceCallback<SchemaCollection>)'
    uid: '@azure/arm-apimanagement.ApiSchema.listByApi_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByApi(resourceGroupName: string, serviceName: string,
        apiId: string, callback: ServiceCallback<SchemaCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service

            instance. Non-current revision has ;rev=n as a suffix where n is the
            revision number.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.SchemaCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByApiNext(string, ApiSchemaListByApiNextOptionalParams,
      ServiceCallback<SchemaCollection>)
    uid: '@azure/arm-apimanagement.ApiSchema.listByApiNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByApiNext(nextPageLink: string, options:
        ApiSchemaListByApiNextOptionalParams, callback:
        ServiceCallback<SchemaCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiSchemaListByApiNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.SchemaCollection" />&gt;
          description: |
            The callback
  - name: 'listByApiNext(string, Models.ApiSchemaListByApiNextOptionalParams)'
    uid: '@azure/arm-apimanagement.ApiSchema.listByApiNext'
    package: '@azure/arm-apimanagement'
    summary: Get the schema configuration at the API level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByApiNext(nextPageLink: string, options?:
        Models.ApiSchemaListByApiNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.ApiSchemaListByApiNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiSchemaListByApiNextResponse" />&gt;
        description: Promise<Models.ApiSchemaListByApiNextResponse>
  - name: 'listByApiNext(string, ServiceCallback<SchemaCollection>)'
    uid: '@azure/arm-apimanagement.ApiSchema.listByApiNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByApiNext(nextPageLink: string, callback:
        ServiceCallback<SchemaCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.SchemaCollection" />&gt;
          description: |
            The callback
