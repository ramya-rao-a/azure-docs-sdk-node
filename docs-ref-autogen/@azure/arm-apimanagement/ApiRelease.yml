### YamlMime:TSType
name: ApiRelease
uid: '@azure/arm-apimanagement.ApiRelease'
package: '@azure/arm-apimanagement'
summary: Class representing a ApiRelease.
fullName: ApiRelease
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ApiRelease(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.ApiRelease.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a ApiRelease.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ApiRelease(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, string, ApiReleaseContract,
      ApiReleaseCreateOrUpdateOptionalParams,
      ServiceCallback<ApiReleaseContract>)
    uid: '@azure/arm-apimanagement.ApiRelease.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, parameters: ApiReleaseContract,
        options: ApiReleaseCreateOrUpdateOptionalParams, callback:
        ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ApiReleaseContract" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiReleaseCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, string, ApiReleaseContract,
      Models.ApiReleaseCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiRelease.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates a new Release for the API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, parameters: ApiReleaseContract,
        options?: Models.ApiReleaseCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ApiReleaseContract" />
          description: Create parameters.
        - id: options
          type: <xref uid="Models.ApiReleaseCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiReleaseCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ApiReleaseCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, string, ApiReleaseContract,
      ServiceCallback<ApiReleaseContract>)
    uid: '@azure/arm-apimanagement.ApiRelease.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, parameters: ApiReleaseContract,
        callback: ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ApiReleaseContract" />
          description: Create parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseContract" />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.ApiRelease.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes the specified release in the API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiRelease.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiRelease.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.ApiRelease.get'
    package: '@azure/arm-apimanagement'
    summary: Returns the details of an API release.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiReleaseGetResponse" />&gt;
        description: Promise<Models.ApiReleaseGetResponse>
  - name: >-
      get(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ApiReleaseContract>)
    uid: '@azure/arm-apimanagement.ApiRelease.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, ServiceCallback<ApiReleaseContract>)'
    uid: '@azure/arm-apimanagement.ApiRelease.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, callback:
        ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.ApiRelease.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: Returns the etag of an API release.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiReleaseGetEntityTagResponse" />&gt;
        description: Promise<Models.ApiReleaseGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiRelease.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.ApiRelease.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string,
      ApiReleaseListByServiceOptionalParams,
      ServiceCallback<ApiReleaseCollection>)
    uid: '@azure/arm-apimanagement.ApiRelease.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options: ApiReleaseListByServiceOptionalParams, callback:
        ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiReleaseListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string,
      Models.ApiReleaseListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.ApiRelease.listByService'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists all releases of an API. An API release is created when making an API
      Revision current.

      Releases are also used to rollback to previous revisions. Results will be
      paged and can be

      constrained by the $top and $skip parameters.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options?: Models.ApiReleaseListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type: <xref uid="Models.ApiReleaseListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiReleaseListByServiceResponse" />&gt;
        description: Promise<Models.ApiReleaseListByServiceResponse>
  - name: >-
      listByService(string, string, string,
      ServiceCallback<ApiReleaseCollection>)
    uid: '@azure/arm-apimanagement.ApiRelease.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, callback: ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, ApiReleaseListByServiceNextOptionalParams,
      ServiceCallback<ApiReleaseCollection>)
    uid: '@azure/arm-apimanagement.ApiRelease.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        ApiReleaseListByServiceNextOptionalParams, callback:
        ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiReleaseListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      Models.ApiReleaseListByServiceNextOptionalParams)
    uid: '@azure/arm-apimanagement.ApiRelease.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists all releases of an API. An API release is created when making an API
      Revision current.

      Releases are also used to rollback to previous revisions. Results will be
      paged and can be

      constrained by the $top and $skip parameters.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.ApiReleaseListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.ApiReleaseListByServiceNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ApiReleaseListByServiceNextResponse"
          />&gt;
        description: Promise<Models.ApiReleaseListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<ApiReleaseCollection>)'
    uid: '@azure/arm-apimanagement.ApiRelease.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseCollection" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, string, ApiReleaseContract, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.ApiRelease.update'
    package: '@azure/arm-apimanagement'
    summary: Updates the details of the release of the API specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, ifMatch:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ApiReleaseContract" />
          description: API Release Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiReleaseUpdateResponse" />&gt;
        description: Promise<Models.ApiReleaseUpdateResponse>
  - name: >-
      update(string, string, string, string, ApiReleaseContract, string,
      RequestOptionsBase, ServiceCallback<ApiReleaseContract>)
    uid: '@azure/arm-apimanagement.ApiRelease.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, ifMatch:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ApiReleaseContract" />
          description: API Release Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, string, ApiReleaseContract, string,
      ServiceCallback<ApiReleaseContract>)
    uid: '@azure/arm-apimanagement.ApiRelease.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, ifMatch:
        string, callback: ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type: string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ApiReleaseContract" />
          description: API Release Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ApiReleaseContract" />&gt;
          description: |
            The callback
