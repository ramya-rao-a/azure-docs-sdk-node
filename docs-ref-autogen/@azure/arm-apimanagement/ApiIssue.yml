### YamlMime:TSType
name: ApiIssue
uid: '@azure/arm-apimanagement.ApiIssue'
package: '@azure/arm-apimanagement'
summary: Class representing a ApiIssue.
fullName: ApiIssue
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ApiIssue(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.ApiIssue.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a ApiIssue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ApiIssue(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, string, IssueContract,
      ApiIssueCreateOrUpdateOptionalParams, ServiceCallback<IssueContract>)
    uid: '@azure/arm-apimanagement.ApiIssue.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, options:
        ApiIssueCreateOrUpdateOptionalParams, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueContract" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, string, IssueContract,
      Models.ApiIssueCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssue.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates a new Issue for an API or updates an existing one.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, options?:
        Models.ApiIssueCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueContract" />
          description: Create parameters.
        - id: options
          type: <xref uid="Models.ApiIssueCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiIssueCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ApiIssueCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, string, IssueContract,
      ServiceCallback<IssueContract>)
    uid: '@azure/arm-apimanagement.ApiIssue.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueContract" />
          description: Create parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueContract" />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.ApiIssue.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes the specified Issue from an API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiIssue.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiIssue.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, string, ApiIssueGetOptionalParams,
      ServiceCallback<IssueContract>)
    uid: '@azure/arm-apimanagement.ApiIssue.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, options: ApiIssueGetOptionalParams, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.ApiIssueGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, Models.ApiIssueGetOptionalParams)'
    uid: '@azure/arm-apimanagement.ApiIssue.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the Issue for an API specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, options?: Models.ApiIssueGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="Models.ApiIssueGetOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiIssueGetResponse" />&gt;
        description: Promise<Models.ApiIssueGetResponse>
  - name: 'get(string, string, string, string, ServiceCallback<IssueContract>)'
    uid: '@azure/arm-apimanagement.ApiIssue.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, callback: ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.ApiIssue.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the Issue for an API specified by
      its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiIssueGetEntityTagResponse" />&gt;
        description: Promise<Models.ApiIssueGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiIssue.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.ApiIssue.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string, ApiIssueListByServiceOptionalParams,
      ServiceCallback<IssueCollection>)
    uid: '@azure/arm-apimanagement.ApiIssue.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options: ApiIssueListByServiceOptionalParams, callback:
        ServiceCallback<IssueCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string,
      Models.ApiIssueListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssue.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists all issues associated with the specified API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options?: Models.ApiIssueListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type: <xref uid="Models.ApiIssueListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiIssueListByServiceResponse" />&gt;
        description: Promise<Models.ApiIssueListByServiceResponse>
  - name: 'listByService(string, string, string, ServiceCallback<IssueCollection>)'
    uid: '@azure/arm-apimanagement.ApiIssue.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, callback: ServiceCallback<IssueCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, ApiIssueListByServiceNextOptionalParams,
      ServiceCallback<IssueCollection>)
    uid: '@azure/arm-apimanagement.ApiIssue.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        ApiIssueListByServiceNextOptionalParams, callback:
        ServiceCallback<IssueCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCollection" />&gt;
          description: |
            The callback
  - name: 'listByServiceNext(string, Models.ApiIssueListByServiceNextOptionalParams)'
    uid: '@azure/arm-apimanagement.ApiIssue.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Lists all issues associated with the specified API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.ApiIssueListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.ApiIssueListByServiceNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiIssueListByServiceNextResponse" />&gt;
        description: Promise<Models.ApiIssueListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<IssueCollection>)'
    uid: '@azure/arm-apimanagement.ApiIssue.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<IssueCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCollection" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, string, IssueUpdateContract, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.ApiIssue.update'
    package: '@azure/arm-apimanagement'
    summary: Updates an existing issue for an API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, parameters: IssueUpdateContract, ifMatch:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueUpdateContract" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiIssueUpdateResponse" />&gt;
        description: Promise<Models.ApiIssueUpdateResponse>
  - name: >-
      update(string, string, string, string, IssueUpdateContract, string,
      RequestOptionsBase, ServiceCallback<IssueContract>)
    uid: '@azure/arm-apimanagement.ApiIssue.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, parameters: IssueUpdateContract, ifMatch:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueUpdateContract" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, string, IssueUpdateContract, string,
      ServiceCallback<IssueContract>)
    uid: '@azure/arm-apimanagement.ApiIssue.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, parameters: IssueUpdateContract, ifMatch:
        string, callback: ServiceCallback<IssueContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueUpdateContract" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueContract" />&gt;
          description: |
            The callback
