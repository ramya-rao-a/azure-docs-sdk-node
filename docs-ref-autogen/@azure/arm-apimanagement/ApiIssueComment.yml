### YamlMime:TSType
name: ApiIssueComment
uid: '@azure/arm-apimanagement.ApiIssueComment'
package: '@azure/arm-apimanagement'
summary: Class representing a ApiIssueComment.
fullName: ApiIssueComment
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ApiIssueComment(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.ApiIssueComment.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a ApiIssueComment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ApiIssueComment(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, string, string,
      IssueCommentContract, ApiIssueCommentCreateOrUpdateOptionalParams,
      ServiceCallback<IssueCommentContract>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, parameters:
        IssueCommentContract, options:
        ApiIssueCommentCreateOrUpdateOptionalParams, callback:
        ServiceCallback<IssueCommentContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueCommentContract" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, string, string,
      IssueCommentContract, Models.ApiIssueCommentCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates a new Comment for the Issue in an API or updates an existing one.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, parameters:
        IssueCommentContract, options?:
        Models.ApiIssueCommentCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueCommentContract" />
          description: Create parameters.
        - id: options
          type: <xref uid="Models.ApiIssueCommentCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ApiIssueCommentCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.ApiIssueCommentCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, string, string,
      IssueCommentContract, ServiceCallback<IssueCommentContract>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, parameters:
        IssueCommentContract, callback: ServiceCallback<IssueCommentContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueCommentContract" />
          description: Create parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentContract" />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.ApiIssueComment.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes the specified comment from an Issue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, ifMatch: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, ifMatch: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, ifMatch: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.ApiIssueComment.get'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the details of the issue Comment for an API specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, commentId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ApiIssueCommentGetResponse" />&gt;
        description: Promise<Models.ApiIssueCommentGetResponse>
  - name: >-
      get(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<IssueCommentContract>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, commentId: string, options: RequestOptionsBase,
        callback: ServiceCallback<IssueCommentContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentContract" />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, string, string,
      ServiceCallback<IssueCommentContract>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, commentId: string, callback:
        ServiceCallback<IssueCommentContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentContract" />&gt;
          description: |
            The callback
  - name: >-
      getEntityTag(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.ApiIssueComment.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the issue Comment for an API
      specified by its

      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ApiIssueCommentGetEntityTagResponse"
          />&gt;
        description: Promise<Models.ApiIssueCommentGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getEntityTag(string, string, string, string, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string, string,
      ApiIssueCommentListByServiceOptionalParams,
      ServiceCallback<IssueCommentCollection>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options:
        ApiIssueCommentListByServiceOptionalParams, callback:
        ServiceCallback<IssueCommentCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, string, string,
      Models.ApiIssueCommentListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists all comments for the Issue associated with the specified API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options?:
        Models.ApiIssueCommentListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="Models.ApiIssueCommentListByServiceOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ApiIssueCommentListByServiceResponse"
          />&gt;
        description: Promise<Models.ApiIssueCommentListByServiceResponse>
  - name: >-
      listByService(string, string, string, string,
      ServiceCallback<IssueCommentCollection>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, callback:
        ServiceCallback<IssueCommentCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, ApiIssueCommentListByServiceNextOptionalParams,
      ServiceCallback<IssueCommentCollection>)
    uid: '@azure/arm-apimanagement.ApiIssueComment.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        ApiIssueCommentListByServiceNextOptionalParams, callback:
        ServiceCallback<IssueCommentCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      Models.ApiIssueCommentListByServiceNextOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Lists all comments for the Issue associated with the specified API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.ApiIssueCommentListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.ApiIssueCommentListByServiceNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.ApiIssueCommentListByServiceNextResponse"
          />&gt;
        description: Promise<Models.ApiIssueCommentListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<IssueCommentCollection>)'
    uid: '@azure/arm-apimanagement.ApiIssueComment.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<IssueCommentCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.IssueCommentCollection" />&gt;
          description: |
            The callback
