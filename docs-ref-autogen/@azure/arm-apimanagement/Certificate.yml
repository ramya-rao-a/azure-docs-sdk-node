### YamlMime:TSType
name: Certificate
uid: '@azure/arm-apimanagement.Certificate'
package: '@azure/arm-apimanagement'
summary: Class representing a Certificate.
fullName: Certificate
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Certificate(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.Certificate.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a Certificate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Certificate(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string,
      CertificateCreateOrUpdateParameters,
      CertificateCreateOrUpdateOptionalParams,
      ServiceCallback<CertificateContract>)
    uid: '@azure/arm-apimanagement.Certificate.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        certificateId: string, parameters: CertificateCreateOrUpdateParameters,
        options: CertificateCreateOrUpdateOptionalParams, callback:
        ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateCreateOrUpdateParameters"
            />
          description: Create or Update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string,
      CertificateCreateOrUpdateParameters,
      Models.CertificateCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates or updates the certificate being used for authentication with the
      backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        certificateId: string, parameters: CertificateCreateOrUpdateParameters,
        options?: Models.CertificateCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateCreateOrUpdateParameters"
            />
          description: Create or Update parameters.
        - id: options
          type: <xref uid="Models.CertificateCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CertificateCreateOrUpdateResponse" />&gt;
        description: Promise<Models.CertificateCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string,
      CertificateCreateOrUpdateParameters, ServiceCallback<CertificateContract>)
    uid: '@azure/arm-apimanagement.Certificate.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        certificateId: string, parameters: CertificateCreateOrUpdateParameters,
        callback: ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateCreateOrUpdateParameters"
            />
          description: Create or Update parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateContract" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Certificate.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific certificate.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        certificateId: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Certificate.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        certificateId: string, ifMatch: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Certificate.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        certificateId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Certificate.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the certificate specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        certificateId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CertificateGetResponse" />&gt;
        description: Promise<Models.CertificateGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<CertificateContract>)
    uid: '@azure/arm-apimanagement.Certificate.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        certificateId: string, options: RequestOptionsBase, callback:
        ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<CertificateContract>)'
    uid: '@azure/arm-apimanagement.Certificate.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        certificateId: string, callback: ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Certificate.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the certificate specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        certificateId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CertificateGetEntityTagResponse" />&gt;
        description: Promise<Models.CertificateGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Certificate.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        certificateId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Certificate.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        certificateId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, CertificateListByServiceOptionalParams,
      ServiceCallback<CertificateCollection>)
    uid: '@azure/arm-apimanagement.Certificate.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: CertificateListByServiceOptionalParams, callback:
        ServiceCallback<CertificateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string,
      Models.CertificateListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of all certificates in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.CertificateListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.CertificateListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CertificateListByServiceResponse" />&gt;
        description: Promise<Models.CertificateListByServiceResponse>
  - name: 'listByService(string, string, ServiceCallback<CertificateCollection>)'
    uid: '@azure/arm-apimanagement.Certificate.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<CertificateCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, CertificateListByServiceNextOptionalParams,
      ServiceCallback<CertificateCollection>)
    uid: '@azure/arm-apimanagement.Certificate.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        CertificateListByServiceNextOptionalParams, callback:
        ServiceCallback<CertificateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CertificateListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      Models.CertificateListByServiceNextOptionalParams)
    uid: '@azure/arm-apimanagement.Certificate.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of all certificates in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.CertificateListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.CertificateListByServiceNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CertificateListByServiceNextResponse"
          />&gt;
        description: Promise<Models.CertificateListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<CertificateCollection>)'
    uid: '@azure/arm-apimanagement.Certificate.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<CertificateCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateCollection" />&gt;
          description: |
            The callback
  - name: 'refreshSecret(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Certificate.refreshSecret'
    package: '@azure/arm-apimanagement'
    summary: >-
      From KeyVault, Refresh the certificate being used for authentication with
      the backend.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function refreshSecret(resourceGroupName: string, serviceName: string,
        certificateId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CertificateRefreshSecretResponse" />&gt;
        description: Promise<Models.CertificateRefreshSecretResponse>
  - name: >-
      refreshSecret(string, string, string, RequestOptionsBase,
      ServiceCallback<CertificateContract>)
    uid: '@azure/arm-apimanagement.Certificate.refreshSecret_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function refreshSecret(resourceGroupName: string, serviceName: string,
        certificateId: string, options: RequestOptionsBase, callback:
        ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateContract" />&gt;
          description: |
            The callback
  - name: >-
      refreshSecret(string, string, string,
      ServiceCallback<CertificateContract>)
    uid: '@azure/arm-apimanagement.Certificate.refreshSecret_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function refreshSecret(resourceGroupName: string, serviceName: string,
        certificateId: string, callback: ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: certificateId
          type: string
          description: >-
            Identifier of the certificate entity. Must be unique in the current
            API

            Management service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CertificateContract" />&gt;
          description: |
            The callback
