### YamlMime:TSType
name: Cache
uid: '@azure/arm-apimanagement.Cache'
package: '@azure/arm-apimanagement'
summary: Class representing a Cache.
fullName: Cache
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Cache(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.Cache.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Cache(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, CacheContract,
      CacheCreateOrUpdateOptionalParams, ServiceCallback<CacheContract>)
    uid: '@azure/arm-apimanagement.Cache.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        cacheId: string, parameters: CacheContract, options:
        CacheCreateOrUpdateOptionalParams, callback:
        ServiceCallback<CacheContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheContract" />
          description: Create or Update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CacheCreateOrUpdateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, CacheContract,
      Models.CacheCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Cache.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates or updates an External Cache to be used in Api Management
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        cacheId: string, parameters: CacheContract, options?:
        Models.CacheCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheContract" />
          description: Create or Update parameters.
        - id: options
          type: <xref uid="Models.CacheCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CacheCreateOrUpdateResponse" />&gt;
        description: Promise<Models.CacheCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, CacheContract,
      ServiceCallback<CacheContract>)
    uid: '@azure/arm-apimanagement.Cache.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        cacheId: string, parameters: CacheContract, callback:
        ServiceCallback<CacheContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheContract" />
          description: Create or Update parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheContract" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Cache.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        cacheId: string, ifMatch: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Cache.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        cacheId: string, ifMatch: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Cache.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        cacheId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Cache.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the Cache specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, cacheId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CacheGetResponse" />&gt;
        description: Promise<Models.CacheGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<CacheContract>)
    uid: '@azure/arm-apimanagement.Cache.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, cacheId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<CacheContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<CacheContract>)'
    uid: '@azure/arm-apimanagement.Cache.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, cacheId:
        string, callback: ServiceCallback<CacheContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Cache.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the Cache specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        cacheId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CacheGetEntityTagResponse" />&gt;
        description: Promise<Models.CacheGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Cache.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        cacheId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Cache.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        cacheId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, CacheListByServiceOptionalParams,
      ServiceCallback<CacheCollection>)
    uid: '@azure/arm-apimanagement.Cache.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: CacheListByServiceOptionalParams, callback:
        ServiceCallback<CacheCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CacheListByServiceOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheCollection" />&gt;
          description: |
            The callback
  - name: 'listByService(string, string, Models.CacheListByServiceOptionalParams)'
    uid: '@azure/arm-apimanagement.Cache.listByService'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists a collection of all external Caches in the specified service
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.CacheListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.CacheListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CacheListByServiceResponse" />&gt;
        description: Promise<Models.CacheListByServiceResponse>
  - name: 'listByService(string, string, ServiceCallback<CacheCollection>)'
    uid: '@azure/arm-apimanagement.Cache.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<CacheCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, CacheListByServiceNextOptionalParams,
      ServiceCallback<CacheCollection>)
    uid: '@azure/arm-apimanagement.Cache.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        CacheListByServiceNextOptionalParams, callback:
        ServiceCallback<CacheCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CacheListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheCollection" />&gt;
          description: |
            The callback
  - name: 'listByServiceNext(string, Models.CacheListByServiceNextOptionalParams)'
    uid: '@azure/arm-apimanagement.Cache.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists a collection of all external Caches in the specified service
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.CacheListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.CacheListByServiceNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CacheListByServiceNextResponse" />&gt;
        description: Promise<Models.CacheListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<CacheCollection>)'
    uid: '@azure/arm-apimanagement.Cache.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<CacheCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheCollection" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, CacheUpdateParameters, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.Cache.update'
    package: '@azure/arm-apimanagement'
    summary: Updates the details of the cache specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, cacheId:
        string, parameters: CacheUpdateParameters, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CacheUpdateResponse" />&gt;
        description: Promise<Models.CacheUpdateResponse>
  - name: >-
      update(string, string, string, CacheUpdateParameters, string,
      RequestOptionsBase, ServiceCallback<CacheContract>)
    uid: '@azure/arm-apimanagement.Cache.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, cacheId:
        string, parameters: CacheUpdateParameters, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<CacheContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, CacheUpdateParameters, string,
      ServiceCallback<CacheContract>)
    uid: '@azure/arm-apimanagement.Cache.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, cacheId:
        string, parameters: CacheUpdateParameters, ifMatch: string, callback:
        ServiceCallback<CacheContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or

            valid Azure region identifier).
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.CacheContract" />&gt;
          description: |
            The callback
