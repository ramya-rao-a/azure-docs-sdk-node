### YamlMime:TSType
name: AuthorizationServer
uid: '@azure/arm-apimanagement.AuthorizationServer'
package: '@azure/arm-apimanagement'
summary: Class representing a AuthorizationServer.
fullName: AuthorizationServer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: AuthorizationServer(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.AuthorizationServer.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a AuthorizationServer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AuthorizationServer(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, AuthorizationServerContract,
      AuthorizationServerCreateOrUpdateOptionalParams,
      ServiceCallback<AuthorizationServerContract>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        authsid: string, parameters: AuthorizationServerContract, options:
        AuthorizationServerCreateOrUpdateOptionalParams, callback:
        ServiceCallback<AuthorizationServerContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.AuthorizationServerContract" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AuthorizationServerCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, AuthorizationServerContract,
      Models.AuthorizationServerCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.AuthorizationServer.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates new authorization server or updates an existing authorization
      server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        authsid: string, parameters: AuthorizationServerContract, options?:
        Models.AuthorizationServerCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.AuthorizationServerContract" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref uid="Models.AuthorizationServerCreateOrUpdateOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AuthorizationServerCreateOrUpdateResponse" />&gt;
        description: Promise<Models.AuthorizationServerCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, AuthorizationServerContract,
      ServiceCallback<AuthorizationServerContract>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        authsid: string, parameters: AuthorizationServerContract, callback:
        ServiceCallback<AuthorizationServerContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.AuthorizationServerContract" />
          description: Create or update parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerContract" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific authorization server instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        authsid: string, ifMatch: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        authsid: string, ifMatch: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        authsid: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the authorization server specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, authsid:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AuthorizationServerGetResponse" />&gt;
        description: Promise<Models.AuthorizationServerGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationServerContract>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, authsid:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<AuthorizationServerContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<AuthorizationServerContract>)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, authsid:
        string, callback: ServiceCallback<AuthorizationServerContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the authorizationServer specified
      by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        authsid: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AuthorizationServerGetEntityTagResponse"
          />&gt;
        description: Promise<Models.AuthorizationServerGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        authsid: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        authsid: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string,
      AuthorizationServerListByServiceOptionalParams,
      ServiceCallback<AuthorizationServerCollection>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: AuthorizationServerListByServiceOptionalParams, callback:
        ServiceCallback<AuthorizationServerCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AuthorizationServerListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string,
      Models.AuthorizationServerListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.AuthorizationServer.listByService'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists a collection of authorization servers defined within a service
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.AuthorizationServerListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.AuthorizationServerListByServiceOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AuthorizationServerListByServiceResponse"
          />&gt;
        description: Promise<Models.AuthorizationServerListByServiceResponse>
  - name: >-
      listByService(string, string,
      ServiceCallback<AuthorizationServerCollection>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<AuthorizationServerCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      AuthorizationServerListByServiceNextOptionalParams,
      ServiceCallback<AuthorizationServerCollection>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        AuthorizationServerListByServiceNextOptionalParams, callback:
        ServiceCallback<AuthorizationServerCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AuthorizationServerListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      Models.AuthorizationServerListByServiceNextOptionalParams)
    uid: '@azure/arm-apimanagement.AuthorizationServer.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists a collection of authorization servers defined within a service
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.AuthorizationServerListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.AuthorizationServerListByServiceNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.AuthorizationServerListByServiceNextResponse" />&gt;
        description: Promise<Models.AuthorizationServerListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<AuthorizationServerCollection>)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<AuthorizationServerCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerCollection" />&gt;
          description: |
            The callback
  - name: 'listSecrets(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.AuthorizationServer.listSecrets'
    package: '@azure/arm-apimanagement'
    summary: Gets the client secret details of the authorization server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSecrets(resourceGroupName: string, serviceName: string,
        authsid: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.AuthorizationServerListSecretsResponse"
          />&gt;
        description: Promise<Models.AuthorizationServerListSecretsResponse>
  - name: >-
      listSecrets(string, string, string, RequestOptionsBase,
      ServiceCallback<AuthorizationServerSecretsContract>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.listSecrets_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSecrets(resourceGroupName: string, serviceName: string,
        authsid: string, options: RequestOptionsBase, callback:
        ServiceCallback<AuthorizationServerSecretsContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerSecretsContract"
            />&gt;
          description: |
            The callback
  - name: >-
      listSecrets(string, string, string,
      ServiceCallback<AuthorizationServerSecretsContract>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.listSecrets_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSecrets(resourceGroupName: string, serviceName: string,
        authsid: string, callback:
        ServiceCallback<AuthorizationServerSecretsContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerSecretsContract"
            />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, AuthorizationServerUpdateContract, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.AuthorizationServer.update'
    package: '@azure/arm-apimanagement'
    summary: >-
      Updates the details of the authorization server specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, authsid:
        string, parameters: AuthorizationServerUpdateContract, ifMatch: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AuthorizationServerUpdateContract" />
          description: OAuth2 Server settings Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.AuthorizationServerUpdateResponse" />&gt;
        description: Promise<Models.AuthorizationServerUpdateResponse>
  - name: >-
      update(string, string, string, AuthorizationServerUpdateContract, string,
      RequestOptionsBase, ServiceCallback<AuthorizationServerContract>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, authsid:
        string, parameters: AuthorizationServerUpdateContract, ifMatch: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<AuthorizationServerContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AuthorizationServerUpdateContract" />
          description: OAuth2 Server settings Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, AuthorizationServerUpdateContract, string,
      ServiceCallback<AuthorizationServerContract>)
    uid: '@azure/arm-apimanagement.AuthorizationServer.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, authsid:
        string, parameters: AuthorizationServerUpdateContract, ifMatch: string,
        callback: ServiceCallback<AuthorizationServerContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: authsid
          type: string
          description: Identifier of the authorization server.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AuthorizationServerUpdateContract" />
          description: OAuth2 Server settings Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AuthorizationServerContract" />&gt;
          description: |
            The callback
