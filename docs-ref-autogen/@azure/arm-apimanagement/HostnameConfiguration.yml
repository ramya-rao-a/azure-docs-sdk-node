### YamlMime:TSType
name: HostnameConfiguration
uid: '@azure/arm-apimanagement.HostnameConfiguration'
package: '@azure/arm-apimanagement'
summary: Custom hostname configuration.
fullName: HostnameConfiguration
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: certificate
    uid: '@azure/arm-apimanagement.HostnameConfiguration.certificate'
    package: '@azure/arm-apimanagement'
    summary: Certificate information.
    fullName: certificate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'certificate?: CertificateInformation'
      return:
        type: <xref uid="@azure/arm-apimanagement.CertificateInformation" />
        description: ''
  - name: certificatePassword
    uid: '@azure/arm-apimanagement.HostnameConfiguration.certificatePassword'
    package: '@azure/arm-apimanagement'
    summary: Certificate Password.
    fullName: certificatePassword
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'certificatePassword?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: defaultSslBinding
    uid: '@azure/arm-apimanagement.HostnameConfiguration.defaultSslBinding'
    package: '@azure/arm-apimanagement'
    summary: >-
      Specify true to setup the certificate associated with this Hostname as the
      Default SSL

      Certificate. If a client does not send the SNI header, then this will be
      the certificate that

      will be challenged. The property is useful if a service has multiple
      custom hostname enabled

      and it needs to decide on the default ssl certificate. The setting only
      applied to Proxy

      Hostname Type. Default value: false.
    fullName: defaultSslBinding
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultSslBinding?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: encodedCertificate
    uid: '@azure/arm-apimanagement.HostnameConfiguration.encodedCertificate'
    package: '@azure/arm-apimanagement'
    summary: Base64 Encoded certificate.
    fullName: encodedCertificate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'encodedCertificate?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: hostName
    uid: '@azure/arm-apimanagement.HostnameConfiguration.hostName'
    package: '@azure/arm-apimanagement'
    summary: Hostname to configure on the Api Management service.
    fullName: hostName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hostName: string'
      return:
        type: string
        description: ''
  - name: identityClientId
    uid: '@azure/arm-apimanagement.HostnameConfiguration.identityClientId'
    package: '@azure/arm-apimanagement'
    summary: >-
      System or User Assigned Managed identity clientId as generated by Azure
      AD, which has GET

      access to the keyVault containing the SSL certificate.
    fullName: identityClientId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'identityClientId?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: keyVaultId
    uid: '@azure/arm-apimanagement.HostnameConfiguration.keyVaultId'
    package: '@azure/arm-apimanagement'
    summary: >-
      Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url
      containing version

      is provided, auto-update of ssl certificate will not work. This requires
      Api Management

      service to be configured with aka.ms/apimmsi. The secret should be of type

      *application/x-pkcs12*
    fullName: keyVaultId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keyVaultId?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: negotiateClientCertificate
    uid: '@azure/arm-apimanagement.HostnameConfiguration.negotiateClientCertificate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Specify true to always negotiate client certificate on the hostname.
      Default Value is false.

      Default value: false.
    fullName: negotiateClientCertificate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'negotiateClientCertificate?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: type
    uid: '@azure/arm-apimanagement.HostnameConfiguration.type'
    package: '@azure/arm-apimanagement'
    summary: >-
      Hostname type. Possible values include: 'Proxy', 'Portal', 'Management',
      'Scm',

      'DeveloperPortal'
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: HostnameType'
      return:
        type: <xref uid="@azure/arm-apimanagement.HostnameType" />
        description: ''
