### YamlMime:TSType
name: NotificationRecipientUser
uid: '@azure/arm-apimanagement.NotificationRecipientUser'
package: '@azure/arm-apimanagement'
summary: Class representing a NotificationRecipientUser.
fullName: NotificationRecipientUser
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: NotificationRecipientUser(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a NotificationRecipientUser.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new NotificationRecipientUser(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      checkEntityExists(string, string, Models.NotificationName, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.checkEntityExists'
    package: '@azure/arm-apimanagement'
    summary: >-
      Determine if the Notification Recipient User is subscribed to the
      notification.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, userId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NotificationRecipientUserCheckEntityExistsResponse" />&gt;
        description: Promise<Models.NotificationRecipientUserCheckEntityExistsResponse>
  - name: >-
      checkEntityExists(string, string, Models.NotificationName, string,
      RequestOptionsBase, ServiceCallback<boolean>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.checkEntityExists_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, userId: string,
        options: RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      checkEntityExists(string, string, Models.NotificationName, string,
      ServiceCallback<boolean>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.checkEntityExists_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, userId: string,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, Models.NotificationName, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Adds the API Management User to the list of Recipients for the
      Notification.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, userId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NotificationRecipientUserCreateOrUpdateResponse" />&gt;
        description: Promise<Models.NotificationRecipientUserCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, Models.NotificationName, string,
      RequestOptionsBase, ServiceCallback<RecipientUserContract>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, userId: string, options:
        RequestOptionsBase, callback: ServiceCallback<RecipientUserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.RecipientUserContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, Models.NotificationName, string,
      ServiceCallback<RecipientUserContract>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, userId: string, callback:
        ServiceCallback<RecipientUserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.RecipientUserContract" />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, Models.NotificationName, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Removes the API Management user from the list of Notification.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, userId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, Models.NotificationName, string,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, userId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, Models.NotificationName, string,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        notificationName: Models.NotificationName, userId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByNotification(string, string, Models.NotificationName,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.listByNotification'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the list of the Notification Recipient User subscribed to the
      notification.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNotification(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.NotificationRecipientUserListByNotificationResponse"
          />&gt;
        description: Promise<Models.NotificationRecipientUserListByNotificationResponse>
  - name: >-
      listByNotification(string, string, Models.NotificationName,
      RequestOptionsBase, ServiceCallback<RecipientUserCollection>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.listByNotification_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNotification(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, options:
        RequestOptionsBase, callback: ServiceCallback<RecipientUserCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.RecipientUserCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByNotification(string, string, Models.NotificationName,
      ServiceCallback<RecipientUserCollection>)
    uid: '@azure/arm-apimanagement.NotificationRecipientUser.listByNotification_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNotification(resourceGroupName: string, serviceName:
        string, notificationName: Models.NotificationName, callback:
        ServiceCallback<RecipientUserCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: notificationName
          type: <xref uid="Models.NotificationName" />
          description: >-
            Notification Name Identifier. Possible values include:

            'RequestPublisherNotificationMessage',
            'PurchasePublisherNotificationMessage',

            'NewApplicationNotificationMessage', 'BCC',
            'NewIssuePublisherNotificationMessage',

            'AccountClosedPublisher',
            'QuotaLimitApproachingPublisherNotificationMessage'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.RecipientUserCollection" />&gt;
          description: |
            The callback
