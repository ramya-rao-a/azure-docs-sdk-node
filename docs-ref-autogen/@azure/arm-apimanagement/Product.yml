### YamlMime:TSType
name: Product
uid: '@azure/arm-apimanagement.Product'
package: '@azure/arm-apimanagement'
summary: Class representing a Product.
fullName: Product
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Product(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.Product.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a Product.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Product(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      createOrUpdate(string, string, string, ProductContract,
      Models.ProductCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Product.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or Updates a product.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        productId: string, parameters: ProductContract, options?:
        Models.ProductCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ProductContract" />
          description: Create or update parameters.
        - id: options
          type: <xref uid="Models.ProductCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductCreateOrUpdateResponse" />&gt;
        description: Promise<Models.ProductCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, string, ProductContract,
      ProductCreateOrUpdateOptionalParams, ServiceCallback<ProductContract>)
    uid: '@azure/arm-apimanagement.Product.createOrUpdate_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        productId: string, parameters: ProductContract, options:
        ProductCreateOrUpdateOptionalParams, callback:
        ServiceCallback<ProductContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ProductContract" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductCreateOrUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductContract" />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, string, ProductContract,
      ServiceCallback<ProductContract>)
    uid: '@azure/arm-apimanagement.Product.createOrUpdate_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        productId: string, parameters: ProductContract, callback:
        ServiceCallback<ProductContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ProductContract" />
          description: Create or update parameters.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductContract" />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string, string,
      Models.ProductDeleteMethodOptionalParams)
    uid: '@azure/arm-apimanagement.Product.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Delete product.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        productId: string, ifMatch: string, options?:
        Models.ProductDeleteMethodOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="Models.ProductDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string,
      ProductDeleteMethodOptionalParams, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Product.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        productId: string, ifMatch: string, options:
        ProductDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductDeleteMethodOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Product.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        productId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Product.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the product specified by its identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, productId:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductGetResponse" />&gt;
        description: Promise<Models.ProductGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<ProductContract>)
    uid: '@azure/arm-apimanagement.Product.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, productId:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ProductContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<ProductContract>)'
    uid: '@azure/arm-apimanagement.Product.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, productId:
        string, callback: ServiceCallback<ProductContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductContract" />&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.Product.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the product specified by its
      identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        productId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductGetEntityTagResponse" />&gt;
        description: Promise<Models.ProductGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.Product.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        productId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.Product.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        productId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'listByService(string, string, Models.ProductListByServiceOptionalParams)'
    uid: '@azure/arm-apimanagement.Product.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of products in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.ProductListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.ProductListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductListByServiceResponse" />&gt;
        description: Promise<Models.ProductListByServiceResponse>
  - name: >-
      listByService(string, string, ProductListByServiceOptionalParams,
      ServiceCallback<ProductCollection>)
    uid: '@azure/arm-apimanagement.Product.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: ProductListByServiceOptionalParams, callback:
        ServiceCallback<ProductCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductListByServiceOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductCollection" />&gt;
          description: |
            The callback
  - name: 'listByService(string, string, ServiceCallback<ProductCollection>)'
    uid: '@azure/arm-apimanagement.Product.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<ProductCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductCollection" />&gt;
          description: |
            The callback
  - name: 'listByServiceNext(string, Models.ProductListByServiceNextOptionalParams)'
    uid: '@azure/arm-apimanagement.Product.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of products in the specified service instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.ProductListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.ProductListByServiceNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductListByServiceNextResponse" />&gt;
        description: Promise<Models.ProductListByServiceNextResponse>
  - name: >-
      listByServiceNext(string, ProductListByServiceNextOptionalParams,
      ServiceCallback<ProductCollection>)
    uid: '@azure/arm-apimanagement.Product.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        ProductListByServiceNextOptionalParams, callback:
        ServiceCallback<ProductCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductCollection" />&gt;
          description: |
            The callback
  - name: 'listByServiceNext(string, ServiceCallback<ProductCollection>)'
    uid: '@azure/arm-apimanagement.Product.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<ProductCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductCollection" />&gt;
          description: |
            The callback
  - name: 'listByTags(string, string, Models.ProductListByTagsOptionalParams)'
    uid: '@azure/arm-apimanagement.Product.listByTags'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of products associated with tags.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByTags(resourceGroupName: string, serviceName: string,
        options?: Models.ProductListByTagsOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.ProductListByTagsOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductListByTagsResponse" />&gt;
        description: Promise<Models.ProductListByTagsResponse>
  - name: >-
      listByTags(string, string, ProductListByTagsOptionalParams,
      ServiceCallback<TagResourceCollection>)
    uid: '@azure/arm-apimanagement.Product.listByTags_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByTags(resourceGroupName: string, serviceName: string,
        options: ProductListByTagsOptionalParams, callback:
        ServiceCallback<TagResourceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.ProductListByTagsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.TagResourceCollection" />&gt;
          description: |
            The callback
  - name: 'listByTags(string, string, ServiceCallback<TagResourceCollection>)'
    uid: '@azure/arm-apimanagement.Product.listByTags_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByTags(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<TagResourceCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.TagResourceCollection" />&gt;
          description: |
            The callback
  - name: 'listByTagsNext(string, Models.ProductListByTagsNextOptionalParams)'
    uid: '@azure/arm-apimanagement.Product.listByTagsNext'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of products associated with tags.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByTagsNext(nextPageLink: string, options?:
        Models.ProductListByTagsNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.ProductListByTagsNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductListByTagsNextResponse" />&gt;
        description: Promise<Models.ProductListByTagsNextResponse>
  - name: >-
      listByTagsNext(string, ProductListByTagsNextOptionalParams,
      ServiceCallback<TagResourceCollection>)
    uid: '@azure/arm-apimanagement.Product.listByTagsNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByTagsNext(nextPageLink: string, options:
        ProductListByTagsNextOptionalParams, callback:
        ServiceCallback<TagResourceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductListByTagsNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.TagResourceCollection" />&gt;
          description: |
            The callback
  - name: 'listByTagsNext(string, ServiceCallback<TagResourceCollection>)'
    uid: '@azure/arm-apimanagement.Product.listByTagsNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByTagsNext(nextPageLink: string, callback:
        ServiceCallback<TagResourceCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.TagResourceCollection" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, ProductUpdateParameters, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.Product.update'
    package: '@azure/arm-apimanagement'
    summary: Update existing product details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        productId: string, parameters: ProductUpdateParameters, ifMatch: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ProductUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ProductUpdateResponse" />&gt;
        description: Promise<Models.ProductUpdateResponse>
  - name: >-
      update(string, string, string, ProductUpdateParameters, string,
      RequestOptionsBase, ServiceCallback<ProductContract>)
    uid: '@azure/arm-apimanagement.Product.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        productId: string, parameters: ProductUpdateParameters, ifMatch: string,
        options: RequestOptionsBase, callback: ServiceCallback<ProductContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ProductUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, ProductUpdateParameters, string,
      ServiceCallback<ProductContract>)
    uid: '@azure/arm-apimanagement.Product.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        productId: string, parameters: ProductUpdateParameters, ifMatch: string,
        callback: ServiceCallback<ProductContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service

            instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.ProductUpdateParameters" />
          description: Update parameters.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.ProductContract" />&gt;
          description: |
            The callback
