### YamlMime:TSType
name: GroupUser
uid: '@azure/arm-apimanagement.GroupUser'
package: '@azure/arm-apimanagement'
summary: Class representing a GroupUser.
fullName: GroupUser
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: GroupUser(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.GroupUser.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a GroupUser.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new GroupUser(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      checkEntityExists(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists'
    package: '@azure/arm-apimanagement'
    summary: >-
      Checks that user entity specified by identifier is associated with the
      group entity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, userId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.GroupUserCheckEntityExistsResponse"
          />&gt;
        description: Promise<Models.GroupUserCheckEntityExistsResponse>
  - name: >-
      checkEntityExists(string, string, string, string, RequestOptionsBase,
      ServiceCallback<boolean>)
    uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, userId: string, options: RequestOptionsBase,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: >-
      checkEntityExists(string, string, string, string,
      ServiceCallback<boolean>)
    uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, userId: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'create(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.GroupUser.create'
    package: '@azure/arm-apimanagement'
    summary: Add existing user to existing group
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GroupUserCreateResponse" />&gt;
        description: Promise<Models.GroupUserCreateResponse>
  - name: >-
      create(string, string, string, string, RequestOptionsBase,
      ServiceCallback<UserContract>)
    uid: '@azure/arm-apimanagement.GroupUser.create_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, options: RequestOptionsBase, callback:
        ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
  - name: 'create(string, string, string, string, ServiceCallback<UserContract>)'
    uid: '@azure/arm-apimanagement.GroupUser.create_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, callback: ServiceCallback<UserContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-apimanagement.UserContract"
            />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.GroupUser.deleteMethod'
    package: '@azure/arm-apimanagement'
    summary: Remove existing user from existing group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, userId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, userId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        groupId: string, userId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      list(string, string, string, GroupUserListOptionalParams,
      ServiceCallback<UserCollection>)
    uid: '@azure/arm-apimanagement.GroupUser.list_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, options: GroupUserListOptionalParams, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.GroupUserListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
  - name: 'list(string, string, string, Models.GroupUserListOptionalParams)'
    uid: '@azure/arm-apimanagement.GroupUser.list'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of user entities associated with the group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, options?: Models.GroupUserListOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="Models.GroupUserListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GroupUserListResponse" />&gt;
        description: Promise<Models.GroupUserListResponse>
  - name: 'list(string, string, string, ServiceCallback<UserCollection>)'
    uid: '@azure/arm-apimanagement.GroupUser.list_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, callback: ServiceCallback<UserCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
  - name: >-
      listNext(string, GroupUserListNextOptionalParams,
      ServiceCallback<UserCollection>)
    uid: '@azure/arm-apimanagement.GroupUser.listNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        GroupUserListNextOptionalParams, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.GroupUserListNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.GroupUserListNextOptionalParams)'
    uid: '@azure/arm-apimanagement.GroupUser.listNext'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of user entities associated with the group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.GroupUserListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.GroupUserListNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.GroupUserListNextResponse" />&gt;
        description: Promise<Models.GroupUserListNextResponse>
  - name: 'listNext(string, ServiceCallback<UserCollection>)'
    uid: '@azure/arm-apimanagement.GroupUser.listNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<UserCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.UserCollection" />&gt;
          description: |
            The callback
