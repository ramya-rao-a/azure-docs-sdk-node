### YamlMime:TSType
name: TenantAccess
uid: '@azure/arm-apimanagement.TenantAccess'
package: '@azure/arm-apimanagement'
summary: Class representing a TenantAccess.
fullName: TenantAccess
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: TenantAccess(ApiManagementClientContext)
    uid: '@azure/arm-apimanagement.TenantAccess.constructor'
    package: '@azure/arm-apimanagement'
    summary: Create a TenantAccess.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TenantAccess(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-apimanagement.ApiManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      create(string, string, AccessInformationCreateParameters,
      Models.AccessIdName, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.TenantAccess.create'
    package: '@azure/arm-apimanagement'
    summary: Update tenant access information details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string,
        parameters: AccessInformationCreateParameters, accessName:
        Models.AccessIdName, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AccessInformationCreateParameters" />
          description: Parameters supplied to retrieve the Tenant Access Information.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TenantAccessCreateResponse" />&gt;
        description: Promise<Models.TenantAccessCreateResponse>
  - name: >-
      create(string, string, AccessInformationCreateParameters,
      Models.AccessIdName, string, RequestOptionsBase,
      ServiceCallback<AccessInformationContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.create_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string,
        parameters: AccessInformationCreateParameters, accessName:
        Models.AccessIdName, ifMatch: string, options: RequestOptionsBase,
        callback: ServiceCallback<AccessInformationContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AccessInformationCreateParameters" />
          description: Parameters supplied to retrieve the Tenant Access Information.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationContract" />&gt;
          description: |
            The callback
  - name: >-
      create(string, string, AccessInformationCreateParameters,
      Models.AccessIdName, string, ServiceCallback<AccessInformationContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.create_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string,
        parameters: AccessInformationCreateParameters, accessName:
        Models.AccessIdName, ifMatch: string, callback:
        ServiceCallback<AccessInformationContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AccessInformationCreateParameters" />
          description: Parameters supplied to retrieve the Tenant Access Information.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationContract" />&gt;
          description: |
            The callback
  - name: 'get(string, string, Models.AccessIdName, msRest.RequestOptionsBase)'
    uid: '@azure/arm-apimanagement.TenantAccess.get'
    package: '@azure/arm-apimanagement'
    summary: Get tenant access information details without secrets.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, accessName:
        Models.AccessIdName, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TenantAccessGetResponse" />&gt;
        description: Promise<Models.TenantAccessGetResponse>
  - name: >-
      get(string, string, Models.AccessIdName, RequestOptionsBase,
      ServiceCallback<AccessInformationContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.get_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, accessName:
        Models.AccessIdName, options: RequestOptionsBase, callback:
        ServiceCallback<AccessInformationContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationContract" />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, Models.AccessIdName,
      ServiceCallback<AccessInformationContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.get_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, accessName:
        Models.AccessIdName, callback:
        ServiceCallback<AccessInformationContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationContract" />&gt;
          description: |
            The callback
  - name: >-
      getEntityTag(string, string, Models.AccessIdName,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.TenantAccess.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: Tenant access metadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        accessName: Models.AccessIdName, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TenantAccessGetEntityTagResponse" />&gt;
        description: Promise<Models.TenantAccessGetEntityTagResponse>
  - name: >-
      getEntityTag(string, string, Models.AccessIdName, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.TenantAccess.getEntityTag_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        accessName: Models.AccessIdName, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getEntityTag(string, string, Models.AccessIdName, ServiceCallback<void>)'
    uid: '@azure/arm-apimanagement.TenantAccess.getEntityTag_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        accessName: Models.AccessIdName, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string,
      Models.TenantAccessListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.TenantAccess.listByService'
    package: '@azure/arm-apimanagement'
    summary: Returns list of access infos - for Git and Management endpoints.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.TenantAccessListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: <xref uid="Models.TenantAccessListByServiceOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TenantAccessListByServiceResponse" />&gt;
        description: Promise<Models.TenantAccessListByServiceResponse>
  - name: >-
      listByService(string, string,
      ServiceCallback<AccessInformationCollection>)
    uid: '@azure/arm-apimanagement.TenantAccess.listByService_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<AccessInformationCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByService(string, string, TenantAccessListByServiceOptionalParams,
      ServiceCallback<AccessInformationCollection>)
    uid: '@azure/arm-apimanagement.TenantAccess.listByService_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: TenantAccessListByServiceOptionalParams, callback:
        ServiceCallback<AccessInformationCollection>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.TenantAccessListByServiceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string,
      Models.TenantAccessListByServiceNextOptionalParams)
    uid: '@azure/arm-apimanagement.TenantAccess.listByServiceNext'
    package: '@azure/arm-apimanagement'
    summary: Returns list of access infos - for Git and Management endpoints.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        Models.TenantAccessListByServiceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.TenantAccessListByServiceNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.TenantAccessListByServiceNextResponse"
          />&gt;
        description: Promise<Models.TenantAccessListByServiceNextResponse>
  - name: 'listByServiceNext(string, ServiceCallback<AccessInformationCollection>)'
    uid: '@azure/arm-apimanagement.TenantAccess.listByServiceNext_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<AccessInformationCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationCollection" />&gt;
          description: |
            The callback
  - name: >-
      listByServiceNext(string, TenantAccessListByServiceNextOptionalParams,
      ServiceCallback<AccessInformationCollection>)
    uid: '@azure/arm-apimanagement.TenantAccess.listByServiceNext_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        TenantAccessListByServiceNextOptionalParams, callback:
        ServiceCallback<AccessInformationCollection>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.TenantAccessListByServiceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationCollection" />&gt;
          description: |
            The callback
  - name: >-
      listSecrets(string, string, Models.AccessIdName,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.TenantAccess.listSecrets'
    package: '@azure/arm-apimanagement'
    summary: Get tenant access information details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSecrets(resourceGroupName: string, serviceName: string,
        accessName: Models.AccessIdName, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TenantAccessListSecretsResponse" />&gt;
        description: Promise<Models.TenantAccessListSecretsResponse>
  - name: >-
      listSecrets(string, string, Models.AccessIdName, RequestOptionsBase,
      ServiceCallback<AccessInformationSecretsContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.listSecrets_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSecrets(resourceGroupName: string, serviceName: string,
        accessName: Models.AccessIdName, options: RequestOptionsBase, callback:
        ServiceCallback<AccessInformationSecretsContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationSecretsContract"
            />&gt;
          description: |
            The callback
  - name: >-
      listSecrets(string, string, Models.AccessIdName,
      ServiceCallback<AccessInformationSecretsContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.listSecrets_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSecrets(resourceGroupName: string, serviceName: string,
        accessName: Models.AccessIdName, callback:
        ServiceCallback<AccessInformationSecretsContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationSecretsContract"
            />&gt;
          description: |
            The callback
  - name: >-
      regeneratePrimaryKey(string, string, Models.AccessIdName,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.TenantAccess.regeneratePrimaryKey'
    package: '@azure/arm-apimanagement'
    summary: Regenerate primary access key
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regeneratePrimaryKey(resourceGroupName: string, serviceName:
        string, accessName: Models.AccessIdName, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      regeneratePrimaryKey(string, string, Models.AccessIdName,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.TenantAccess.regeneratePrimaryKey_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regeneratePrimaryKey(resourceGroupName: string, serviceName:
        string, accessName: Models.AccessIdName, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      regeneratePrimaryKey(string, string, Models.AccessIdName,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.TenantAccess.regeneratePrimaryKey_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regeneratePrimaryKey(resourceGroupName: string, serviceName:
        string, accessName: Models.AccessIdName, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      regenerateSecondaryKey(string, string, Models.AccessIdName,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.TenantAccess.regenerateSecondaryKey'
    package: '@azure/arm-apimanagement'
    summary: Regenerate secondary access key
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateSecondaryKey(resourceGroupName: string, serviceName:
        string, accessName: Models.AccessIdName, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: >-
      regenerateSecondaryKey(string, string, Models.AccessIdName,
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.TenantAccess.regenerateSecondaryKey_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateSecondaryKey(resourceGroupName: string, serviceName:
        string, accessName: Models.AccessIdName, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      regenerateSecondaryKey(string, string, Models.AccessIdName,
      ServiceCallback<void>)
    uid: '@azure/arm-apimanagement.TenantAccess.regenerateSecondaryKey_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateSecondaryKey(resourceGroupName: string, serviceName:
        string, accessName: Models.AccessIdName, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      update(string, string, AccessInformationUpdateParameters,
      Models.AccessIdName, string, msRest.RequestOptionsBase)
    uid: '@azure/arm-apimanagement.TenantAccess.update'
    package: '@azure/arm-apimanagement'
    summary: Update tenant access information details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        parameters: AccessInformationUpdateParameters, accessName:
        Models.AccessIdName, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AccessInformationUpdateParameters" />
          description: Parameters supplied to retrieve the Tenant Access Information.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TenantAccessUpdateResponse" />&gt;
        description: Promise<Models.TenantAccessUpdateResponse>
  - name: >-
      update(string, string, AccessInformationUpdateParameters,
      Models.AccessIdName, string, RequestOptionsBase,
      ServiceCallback<AccessInformationContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.update_2'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        parameters: AccessInformationUpdateParameters, accessName:
        Models.AccessIdName, ifMatch: string, options: RequestOptionsBase,
        callback: ServiceCallback<AccessInformationContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AccessInformationUpdateParameters" />
          description: Parameters supplied to retrieve the Tenant Access Information.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationContract" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, AccessInformationUpdateParameters,
      Models.AccessIdName, string, ServiceCallback<AccessInformationContract>)
    uid: '@azure/arm-apimanagement.TenantAccess.update_1'
    package: '@azure/arm-apimanagement'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        parameters: AccessInformationUpdateParameters, accessName:
        Models.AccessIdName, ifMatch: string, callback:
        ServiceCallback<AccessInformationContract>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-apimanagement.AccessInformationUpdateParameters" />
          description: Parameters supplied to retrieve the Tenant Access Information.
        - id: accessName
          type: <xref uid="Models.AccessIdName" />
          description: >-
            The identifier of the Access configuration. Possible values include:
            'access',

            'gitAccess'
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-apimanagement.AccessInformationContract" />&gt;
          description: |
            The callback
