### YamlMime:TSType
name: Caches
uid: '@azure/arm-storagecache.Caches'
package: '@azure/arm-storagecache'
summary: Class representing a Caches.
fullName: Caches
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Caches(StorageCacheManagementClientContext)
    uid: '@azure/arm-storagecache.Caches.constructor'
    package: '@azure/arm-storagecache'
    summary: Create a Caches.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Caches(client: StorageCacheManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageCacheManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string,
      Models.CachesBeginCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginCreateOrUpdate'
    package: '@azure/arm-storagecache'
    summary: Create or update a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, cacheName:
        string, options?: Models.CachesBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="Models.CachesBeginCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDebugInfo(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.beginDebugInfo'
    package: '@azure/arm-storagecache'
    summary: Tells a Cache to write generate debug info for support to process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDebugInfo(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.beginDeleteMethod'
    package: '@azure/arm-storagecache'
    summary: Schedules a Cache for deletion.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginFlush(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.beginFlush'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells a Cache to write all dirty data to the Storage Target(s). During the
      flush, clients will

      see errors returned until the flush is complete.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFlush(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginStart(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.beginStart'
    package: '@azure/arm-storagecache'
    summary: Tells a Stopped state Cache to transition to Active state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginStop(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.beginStop'
    package: '@azure/arm-storagecache'
    summary: Tells an Active Cache to transition to Stopped state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginUpgradeFirmware(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.beginUpgradeFirmware'
    package: '@azure/arm-storagecache'
    summary: >-
      Upgrade a Cache's firmware if a new version is available. Otherwise, this
      operation has no

      effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeFirmware(resourceGroupName: string, cacheName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'createOrUpdate(string, string, Models.CachesCreateOrUpdateOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.createOrUpdate'
    package: '@azure/arm-storagecache'
    summary: Create or update a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, cacheName: string,
        options?: Models.CachesCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="Models.CachesCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CachesCreateOrUpdateResponse" />&gt;
        description: Promise<Models.CachesCreateOrUpdateResponse>
  - name: 'debugInfo(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.debugInfo'
    package: '@azure/arm-storagecache'
    summary: Tells a Cache to write generate debug info for support to process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function debugInfo(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.deleteMethod'
    package: '@azure/arm-storagecache'
    summary: Schedules a Cache for deletion.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'flush(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.flush'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells a Cache to write all dirty data to the Storage Target(s). During the
      flush, clients will

      see errors returned until the flush is complete.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function flush(resourceGroupName: string, cacheName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.get'
    package: '@azure/arm-storagecache'
    summary: Returns a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CachesGetResponse" />&gt;
        description: Promise<Models.CachesGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Cache>)'
    uid: '@azure/arm-storagecache.Caches.get_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Cache>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-storagecache.Cache" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Cache>)'
    uid: '@azure/arm-storagecache.Caches.get_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string, callback:
        ServiceCallback<Cache>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-storagecache.Cache" />&gt;
          description: |
            The callback
  - name: list(msRest.RequestOptionsBase)
    uid: '@azure/arm-storagecache.Caches.list'
    package: '@azure/arm-storagecache'
    summary: Returns all Caches the user has access to under a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CachesListResponse" />&gt;
        description: Promise<Models.CachesListResponse>
  - name: 'list(RequestOptionsBase, ServiceCallback<CachesListResult>)'
    uid: '@azure/arm-storagecache.Caches.list_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<CachesListResult>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<CachesListResult>)
    uid: '@azure/arm-storagecache.Caches.list_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<CachesListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.listByResourceGroup'
    package: '@azure/arm-storagecache'
    summary: Returns all Caches the user has access to under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CachesListByResourceGroupResponse" />&gt;
        description: Promise<Models.CachesListByResourceGroupResponse>
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<CachesListResult>)
    uid: '@azure/arm-storagecache.Caches.listByResourceGroup_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<CachesListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<CachesListResult>)'
    uid: '@azure/arm-storagecache.Caches.listByResourceGroup_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<CachesListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.listByResourceGroupNext'
    package: '@azure/arm-storagecache'
    summary: Returns all Caches the user has access to under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.CachesListByResourceGroupNextResponse"
          />&gt;
        description: Promise<Models.CachesListByResourceGroupNextResponse>
  - name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<CachesListResult>)
    uid: '@azure/arm-storagecache.Caches.listByResourceGroupNext_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<CachesListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroupNext(string, ServiceCallback<CachesListResult>)'
    uid: '@azure/arm-storagecache.Caches.listByResourceGroupNext_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<CachesListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.listNext'
    package: '@azure/arm-storagecache'
    summary: Returns all Caches the user has access to under a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CachesListNextResponse" />&gt;
        description: Promise<Models.CachesListNextResponse>
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<CachesListResult>)'
    uid: '@azure/arm-storagecache.Caches.listNext_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<CachesListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<CachesListResult>)'
    uid: '@azure/arm-storagecache.Caches.listNext_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CachesListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.CachesListResult" />&gt;
          description: |
            The callback
  - name: 'start(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.start'
    package: '@azure/arm-storagecache'
    summary: Tells a Stopped state Cache to transition to Active state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function start(resourceGroupName: string, cacheName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'stop(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.stop'
    package: '@azure/arm-storagecache'
    summary: Tells an Active Cache to transition to Stopped state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stop(resourceGroupName: string, cacheName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'update(string, string, CachesUpdateOptionalParams, ServiceCallback<Cache>)'
    uid: '@azure/arm-storagecache.Caches.update_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, cacheName: string, options:
        CachesUpdateOptionalParams, callback: ServiceCallback<Cache>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesUpdateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-storagecache.Cache" />&gt;
          description: |
            The callback
  - name: 'update(string, string, Models.CachesUpdateOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.update'
    package: '@azure/arm-storagecache'
    summary: Update a Cache instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, cacheName: string, options?:
        Models.CachesUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="Models.CachesUpdateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.CachesUpdateResponse" />&gt;
        description: Promise<Models.CachesUpdateResponse>
  - name: 'update(string, string, ServiceCallback<Cache>)'
    uid: '@azure/arm-storagecache.Caches.update_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, cacheName: string, callback:
        ServiceCallback<Cache>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-storagecache.Cache" />&gt;
          description: |
            The callback
  - name: 'upgradeFirmware(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.Caches.upgradeFirmware'
    package: '@azure/arm-storagecache'
    summary: >-
      Upgrade a Cache's firmware if a new version is available. Otherwise, this
      operation has no

      effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function upgradeFirmware(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
