### YamlMime:TSType
name: StorageCacheManagementClient
uid: '@azure/arm-storagecache.StorageCacheManagementClient'
package: '@azure/arm-storagecache'
summary: ''
fullName: StorageCacheManagementClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      StorageCacheManagementClient(ServiceClientCredentials, string,
      Models.StorageCacheManagementClientOptions)
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.constructor'
    package: '@azure/arm-storagecache'
    summary: Initializes a new instance of the StorageCacheManagementClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new StorageCacheManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?:
        Models.StorageCacheManagementClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type: string
          description: >-
            Subscription credentials which uniquely identify Microsoft Azure

            subscription. The subscription ID forms part of the URI for every
            service call.
        - id: options
          type: <xref uid="Models.StorageCacheManagementClientOptions" />
          description: ''
properties:
  - name: acceptLanguage
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.acceptLanguage'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        type: string
        description: ''
  - name: apiVersion
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.apiVersion'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: ascOperations
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.ascOperations'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: ascOperations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ascOperations: AscOperations'
      return:
        type: <xref uid="@azure/arm-storagecache.AscOperations" />
        description: ''
  - name: caches
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.caches'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: caches
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'caches: Caches'
      return:
        type: <xref uid="@azure/arm-storagecache.Caches" />
        description: ''
  - name: credentials
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.credentials'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type: ServiceClientCredentials
        description: ''
  - name: longRunningOperationRetryTimeout
    uid: >-
      @azure/arm-storagecache.StorageCacheManagementClient.longRunningOperationRetryTimeout
    package: '@azure/arm-storagecache'
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: operations
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.operations'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: operations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'operations: Operations'
      return:
        type: <xref uid="@azure/arm-storagecache.Operations" />
        description: ''
  - name: skus
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.skus'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: skus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'skus: Skus'
      return:
        type: <xref uid="@azure/arm-storagecache.Skus" />
        description: ''
  - name: storageTargets
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.storageTargets'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: storageTargets
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'storageTargets: StorageTargets'
      return:
        type: <xref uid="@azure/arm-storagecache.StorageTargets" />
        description: ''
  - name: subscriptionId
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.subscriptionId'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: subscriptionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionId: string'
      return:
        type: string
        description: ''
  - name: usageModels
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.usageModels'
    package: '@azure/arm-storagecache'
    summary: ''
    fullName: usageModels
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'usageModels: UsageModels'
      return:
        type: <xref uid="@azure/arm-storagecache.UsageModels" />
        description: ''
methods:
  - name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: >-
      @azure/arm-storagecache.StorageCacheManagementClient.beginLongRunningRequest
    package: '@azure/arm-storagecache'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
  - name: restoreLROPoller(LROPollState)
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.restoreLROPoller'
    package: '@azure/arm-storagecache'
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type: LROPollState
          description: ''
      return:
        type: LROPoller
        description: ''
  - name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: >-
      @azure/arm-storagecache.StorageCacheManagementClient.sendLongRunningRequest
    package: '@azure/arm-storagecache'
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
  - name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.sendLRORequest'
    package: '@azure/arm-storagecache'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type: OperationSpec
          description: The specification for the operation.
        - id: options
          type: RequestOptionsBase
          description: Additional options to be sent while making the request.
      return:
        type: Promise&lt;LROPoller&gt;
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.sendOperationRequest'
    package: '@azure/arm-storagecache'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/arm-storagecache.StorageCacheManagementClient.sendRequest'
    package: '@azure/arm-storagecache'
    summary: Send the provided httpRequest.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
extends: <xref uid="@azure/arm-storagecache.StorageCacheManagementClientContext" />
