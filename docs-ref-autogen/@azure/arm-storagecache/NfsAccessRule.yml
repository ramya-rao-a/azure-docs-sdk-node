### YamlMime:TSType
name: NfsAccessRule
uid: '@azure/arm-storagecache.NfsAccessRule'
package: '@azure/arm-storagecache'
summary: >-
  Rule to place restrictions on portions of the cache namespace being presented
  to clients.
fullName: NfsAccessRule
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: access
    uid: '@azure/arm-storagecache.NfsAccessRule.access'
    package: '@azure/arm-storagecache'
    summary: 'Access allowed by this rule. Possible values include: ''no'', ''ro'', ''rw'''
    fullName: access
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'access: NfsAccessRuleAccess'
      return:
        type: <xref uid="@azure/arm-storagecache.NfsAccessRuleAccess" />
        description: ''
  - name: anonymousGID
    uid: '@azure/arm-storagecache.NfsAccessRule.anonymousGID'
    package: '@azure/arm-storagecache'
    summary: >-
      GID value that replaces 0 when rootSquash is true. This will use the value
      of anonymousUID if

      not provided.
    fullName: anonymousGID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'anonymousGID?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: anonymousUID
    uid: '@azure/arm-storagecache.NfsAccessRule.anonymousUID'
    package: '@azure/arm-storagecache'
    summary: >-
      UID value that replaces 0 when rootSquash is true. 65534 will be used if
      not provided.
    fullName: anonymousUID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'anonymousUID?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: filter
    uid: '@azure/arm-storagecache.NfsAccessRule.filter'
    package: '@azure/arm-storagecache'
    summary: >-
      Filter applied to the scope for this rule. The filter's format depends on
      its scope. 'default'

      scope matches all clients and has no filter value. 'network' scope takes a
      filter in CIDR

      format (for example, 10.99.1.0/24). 'host' takes an IP address or fully
      qualified domain name

      as filter. If a client does not match any filter rule and there is no
      default rule, access is

      denied.
    fullName: filter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'filter?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: rootSquash
    uid: '@azure/arm-storagecache.NfsAccessRule.rootSquash'
    package: '@azure/arm-storagecache'
    summary: Map root accesses to anonymousUID and anonymousGID.
    fullName: rootSquash
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rootSquash?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: scope
    uid: '@azure/arm-storagecache.NfsAccessRule.scope'
    package: '@azure/arm-storagecache'
    summary: >-
      Scope for this rule. The scope and filter determine which clients match
      the rule. Possible

      values include: 'default', 'network', 'host'
    fullName: scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scope: NfsAccessRuleScope'
      return:
        type: <xref uid="@azure/arm-storagecache.NfsAccessRuleScope" />
        description: ''
  - name: submountAccess
    uid: '@azure/arm-storagecache.NfsAccessRule.submountAccess'
    package: '@azure/arm-storagecache'
    summary: >-
      For the default policy, allow access to subdirectories under the root
      export. If this is set

      to no, clients can only mount the path '/'. If set to yes, clients can
      mount a deeper path,

      like '/a/b'.
    fullName: submountAccess
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'submountAccess?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
  - name: suid
    uid: '@azure/arm-storagecache.NfsAccessRule.suid'
    package: '@azure/arm-storagecache'
    summary: Allow SUID semantics.
    fullName: suid
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suid?: undefined | false | true'
      return:
        type: undefined | false | true
        description: ''
