### YamlMime:TSType
name: StorageTargets
uid: '@azure/arm-storagecache.StorageTargets'
package: '@azure/arm-storagecache'
summary: Class representing a StorageTargets.
fullName: StorageTargets
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: StorageTargets(StorageCacheManagementClientContext)
    uid: '@azure/arm-storagecache.StorageTargets.constructor'
    package: '@azure/arm-storagecache'
    summary: Create a StorageTargets.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new StorageTargets(client: StorageCacheManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageCacheManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string,
      Models.StorageTargetsBeginCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginCreateOrUpdate'
    package: '@azure/arm-storagecache'
    summary: >-
      Create or update a Storage Target. This operation is allowed at any time,
      but if the Cache is

      down or unhealthy, the actual creation/modification of the Storage Target
      may be delayed until

      the Cache is healthy again.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        Models.StorageTargetsBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref uid="Models.StorageTargetsBeginCreateOrUpdateOptionalParams"
            />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageTargets.beginDeleteMethod'
    package: '@azure/arm-storagecache'
    summary: >-
      Removes a Storage Target from a Cache. This operation is allowed at any
      time, but if the Cache

      is down or unhealthy, the actual removal of the Storage Target may be
      delayed until the Cache is

      healthy again. Note that if the Cache has data to flush to the Storage
      Target, the data will be

      flushed before the Storage Target will be deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDnsRefresh(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageTargets.beginDnsRefresh'
    package: '@azure/arm-storagecache'
    summary: Tells a storage target to refresh its DNS information.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDnsRefresh(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrUpdate(string, string, string,
      Models.StorageTargetsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.createOrUpdate'
    package: '@azure/arm-storagecache'
    summary: >-
      Create or update a Storage Target. This operation is allowed at any time,
      but if the Cache is

      down or unhealthy, the actual creation/modification of the Storage Target
      may be delayed until

      the Cache is healthy again.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?:
        Models.StorageTargetsCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: <xref uid="Models.StorageTargetsCreateOrUpdateOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.StorageTargetsCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.StorageTargetsCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageTargets.deleteMethod'
    package: '@azure/arm-storagecache'
    summary: >-
      Removes a Storage Target from a Cache. This operation is allowed at any
      time, but if the Cache

      is down or unhealthy, the actual removal of the Storage Target may be
      delayed until the Cache is

      healthy again. Note that if the Cache has data to flush to the Storage
      Target, the data will be

      flushed before the Storage Target will be deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'dnsRefresh(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageTargets.dnsRefresh'
    package: '@azure/arm-storagecache'
    summary: Tells a storage target to refresh its DNS information.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function dnsRefresh(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageTargets.get'
    package: '@azure/arm-storagecache'
    summary: Returns a Storage Target from a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.StorageTargetsGetResponse" />&gt;
        description: Promise<Models.StorageTargetsGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<StorageTarget>)
    uid: '@azure/arm-storagecache.StorageTargets.get_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options: RequestOptionsBase, callback:
        ServiceCallback<StorageTarget>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-storagecache.StorageTarget"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<StorageTarget>)'
    uid: '@azure/arm-storagecache.StorageTargets.get_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        storageTargetName: string, callback: ServiceCallback<StorageTarget>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-storagecache.StorageTarget"
            />&gt;
          description: |
            The callback
  - name: 'listByCache(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageTargets.listByCache'
    package: '@azure/arm-storagecache'
    summary: Returns a list of Storage Targets for the specified Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByCache(resourceGroupName: string, cacheName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.StorageTargetsListByCacheResponse" />&gt;
        description: Promise<Models.StorageTargetsListByCacheResponse>
  - name: >-
      listByCache(string, string, RequestOptionsBase,
      ServiceCallback<StorageTargetsResult>)
    uid: '@azure/arm-storagecache.StorageTargets.listByCache_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByCache(resourceGroupName: string, cacheName: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.StorageTargetsResult" />&gt;
          description: |
            The callback
  - name: 'listByCache(string, string, ServiceCallback<StorageTargetsResult>)'
    uid: '@azure/arm-storagecache.StorageTargets.listByCache_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByCache(resourceGroupName: string, cacheName: string,
        callback: ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be

            from the [-0-9a-zA-Z_] char class.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.StorageTargetsResult" />&gt;
          description: |
            The callback
  - name: 'listByCacheNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-storagecache.StorageTargets.listByCacheNext'
    package: '@azure/arm-storagecache'
    summary: Returns a list of Storage Targets for the specified Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByCacheNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.StorageTargetsListByCacheNextResponse"
          />&gt;
        description: Promise<Models.StorageTargetsListByCacheNextResponse>
  - name: >-
      listByCacheNext(string, RequestOptionsBase,
      ServiceCallback<StorageTargetsResult>)
    uid: '@azure/arm-storagecache.StorageTargets.listByCacheNext_2'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByCacheNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.StorageTargetsResult" />&gt;
          description: |
            The callback
  - name: 'listByCacheNext(string, ServiceCallback<StorageTargetsResult>)'
    uid: '@azure/arm-storagecache.StorageTargets.listByCacheNext_1'
    package: '@azure/arm-storagecache'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByCacheNext(nextPageLink: string, callback:
        ServiceCallback<StorageTargetsResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-storagecache.StorageTargetsResult" />&gt;
          description: |
            The callback
