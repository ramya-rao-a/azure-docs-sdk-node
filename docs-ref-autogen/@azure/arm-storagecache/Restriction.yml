### YamlMime:TSType
name: Restriction
uid: '@azure/arm-storagecache.Restriction'
package: '@azure/arm-storagecache'
summary: The restrictions preventing this SKU from being used.
fullName: Restriction
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: reasonCode
    uid: '@azure/arm-storagecache.Restriction.reasonCode'
    package: '@azure/arm-storagecache'
    summary: >-
      The reason for the restriction. As of now this can be "QuotaId" or

      "NotAvailableForSubscription". "QuotaId" is set when the SKU has
      requiredQuotas parameter as

      the subscription does not belong to that quota.
      "NotAvailableForSubscription" is related to

      capacity at the datacenter. Possible values include: 'QuotaId',
      'NotAvailableForSubscription'
    fullName: reasonCode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'reasonCode?: ReasonCode'
      return:
        type: <xref uid="@azure/arm-storagecache.ReasonCode" />
        description: ''
  - name: type
    uid: '@azure/arm-storagecache.Restriction.type'
    package: '@azure/arm-storagecache'
    summary: >-
      The type of restrictions. In this version, the only possible value for
      this is location.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: values
    uid: '@azure/arm-storagecache.Restriction.values'
    package: '@azure/arm-storagecache'
    summary: >-
      The value of restrictions. If the restriction type is set to location,
      then this would be the

      different locations where the SKU is restricted.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: values
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'values?: string[]'
      return:
        type: 'string[]'
        description: ''
