### YamlMime:TSType
name: Relationships
uid: '@azure/arm-customerinsights.Relationships'
package: '@azure/arm-customerinsights'
summary: Class representing a Relationships.
fullName: Relationships
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Relationships(CustomerInsightsManagementClientContext)
    uid: '@azure/arm-customerinsights.Relationships.constructor'
    package: '@azure/arm-customerinsights'
    summary: Create a Relationships.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Relationships(client: CustomerInsightsManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-customerinsights.CustomerInsightsManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, RelationshipResourceFormat,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-customerinsights.Relationships.beginCreateOrUpdate'
    package: '@azure/arm-customerinsights'
    summary: Creates a relationship or updates an existing relationship within a hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, hubName: string,
        relationshipName: string, parameters: RelationshipResourceFormat,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: relationshipName
          type: string
          description: The name of the Relationship.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-customerinsights.RelationshipResourceFormat"
            />
          description: Parameters supplied to the CreateOrUpdate Relationship operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Relationships.beginDeleteMethod'
    package: '@azure/arm-customerinsights'
    summary: Deletes a relationship within a hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, hubName: string,
        relationshipName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: relationshipName
          type: string
          description: The name of the relationship.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrUpdate(string, string, string, RelationshipResourceFormat,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-customerinsights.Relationships.createOrUpdate'
    package: '@azure/arm-customerinsights'
    summary: Creates a relationship or updates an existing relationship within a hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, hubName: string,
        relationshipName: string, parameters: RelationshipResourceFormat,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: relationshipName
          type: string
          description: The name of the Relationship.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-customerinsights.RelationshipResourceFormat"
            />
          description: Parameters supplied to the CreateOrUpdate Relationship operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.RelationshipsCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.RelationshipsCreateOrUpdateResponse>
  - name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Relationships.deleteMethod'
    package: '@azure/arm-customerinsights'
    summary: Deletes a relationship within a hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, hubName: string,
        relationshipName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: relationshipName
          type: string
          description: The name of the relationship.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Relationships.get'
    package: '@azure/arm-customerinsights'
    summary: Gets information about the specified relationship.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string,
        relationshipName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: relationshipName
          type: string
          description: The name of the relationship.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RelationshipsGetResponse" />&gt;
        description: Promise<Models.RelationshipsGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<RelationshipResourceFormat>)
    uid: '@azure/arm-customerinsights.Relationships.get_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string,
        relationshipName: string, options: RequestOptionsBase, callback:
        ServiceCallback<RelationshipResourceFormat>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: relationshipName
          type: string
          description: The name of the relationship.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.RelationshipResourceFormat" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<RelationshipResourceFormat>)'
    uid: '@azure/arm-customerinsights.Relationships.get_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string,
        relationshipName: string, callback:
        ServiceCallback<RelationshipResourceFormat>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: relationshipName
          type: string
          description: The name of the relationship.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.RelationshipResourceFormat" />&gt;
          description: |
            The callback
  - name: 'listByHub(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Relationships.listByHub'
    package: '@azure/arm-customerinsights'
    summary: Gets all relationships in the hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.RelationshipsListByHubResponse" />&gt;
        description: Promise<Models.RelationshipsListByHubResponse>
  - name: >-
      listByHub(string, string, RequestOptionsBase,
      ServiceCallback<RelationshipListResult>)
    uid: '@azure/arm-customerinsights.Relationships.listByHub_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options:
        RequestOptionsBase, callback: ServiceCallback<RelationshipListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.RelationshipListResult" />&gt;
          description: |
            The callback
  - name: 'listByHub(string, string, ServiceCallback<RelationshipListResult>)'
    uid: '@azure/arm-customerinsights.Relationships.listByHub_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, callback:
        ServiceCallback<RelationshipListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.RelationshipListResult" />&gt;
          description: |
            The callback
  - name: 'listByHubNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.Relationships.listByHubNext'
    package: '@azure/arm-customerinsights'
    summary: Gets all relationships in the hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.RelationshipsListByHubNextResponse"
          />&gt;
        description: Promise<Models.RelationshipsListByHubNextResponse>
  - name: >-
      listByHubNext(string, RequestOptionsBase,
      ServiceCallback<RelationshipListResult>)
    uid: '@azure/arm-customerinsights.Relationships.listByHubNext_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RelationshipListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.RelationshipListResult" />&gt;
          description: |
            The callback
  - name: 'listByHubNext(string, ServiceCallback<RelationshipListResult>)'
    uid: '@azure/arm-customerinsights.Relationships.listByHubNext_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, callback:
        ServiceCallback<RelationshipListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.RelationshipListResult" />&gt;
          description: |
            The callback
