### YamlMime:TSType
name: WidgetTypes
uid: '@azure/arm-customerinsights.WidgetTypes'
package: '@azure/arm-customerinsights'
summary: Class representing a WidgetTypes.
fullName: WidgetTypes
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: WidgetTypes(CustomerInsightsManagementClientContext)
    uid: '@azure/arm-customerinsights.WidgetTypes.constructor'
    package: '@azure/arm-customerinsights'
    summary: Create a WidgetTypes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new WidgetTypes(client: CustomerInsightsManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-customerinsights.CustomerInsightsManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.WidgetTypes.get'
    package: '@azure/arm-customerinsights'
    summary: Gets a widget type in the specified hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, widgetTypeName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: widgetTypeName
          type: string
          description: The name of the widget type.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WidgetTypesGetResponse" />&gt;
        description: Promise<Models.WidgetTypesGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<WidgetTypeResourceFormat>)
    uid: '@azure/arm-customerinsights.WidgetTypes.get_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, widgetTypeName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<WidgetTypeResourceFormat>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: widgetTypeName
          type: string
          description: The name of the widget type.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.WidgetTypeResourceFormat" />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<WidgetTypeResourceFormat>)'
    uid: '@azure/arm-customerinsights.WidgetTypes.get_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, widgetTypeName:
        string, callback: ServiceCallback<WidgetTypeResourceFormat>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: widgetTypeName
          type: string
          description: The name of the widget type.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.WidgetTypeResourceFormat" />&gt;
          description: |
            The callback
  - name: 'listByHub(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.WidgetTypes.listByHub'
    package: '@azure/arm-customerinsights'
    summary: Gets all available widget types in the specified hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WidgetTypesListByHubResponse" />&gt;
        description: Promise<Models.WidgetTypesListByHubResponse>
  - name: >-
      listByHub(string, string, RequestOptionsBase,
      ServiceCallback<WidgetTypeListResult>)
    uid: '@azure/arm-customerinsights.WidgetTypes.listByHub_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options:
        RequestOptionsBase, callback: ServiceCallback<WidgetTypeListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.WidgetTypeListResult" />&gt;
          description: |
            The callback
  - name: 'listByHub(string, string, ServiceCallback<WidgetTypeListResult>)'
    uid: '@azure/arm-customerinsights.WidgetTypes.listByHub_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, callback:
        ServiceCallback<WidgetTypeListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.WidgetTypeListResult" />&gt;
          description: |
            The callback
  - name: 'listByHubNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-customerinsights.WidgetTypes.listByHubNext'
    package: '@azure/arm-customerinsights'
    summary: Gets all available widget types in the specified hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.WidgetTypesListByHubNextResponse" />&gt;
        description: Promise<Models.WidgetTypesListByHubNextResponse>
  - name: >-
      listByHubNext(string, RequestOptionsBase,
      ServiceCallback<WidgetTypeListResult>)
    uid: '@azure/arm-customerinsights.WidgetTypes.listByHubNext_2'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WidgetTypeListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.WidgetTypeListResult" />&gt;
          description: |
            The callback
  - name: 'listByHubNext(string, ServiceCallback<WidgetTypeListResult>)'
    uid: '@azure/arm-customerinsights.WidgetTypes.listByHubNext_1'
    package: '@azure/arm-customerinsights'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByHubNext(nextPageLink: string, callback:
        ServiceCallback<WidgetTypeListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-customerinsights.WidgetTypeListResult" />&gt;
          description: |
            The callback
