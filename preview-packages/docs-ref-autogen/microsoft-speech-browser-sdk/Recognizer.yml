### YamlMime:TSType
name: Recognizer
uid: microsoft-speech-browser-sdk.Recognizer
package: microsoft-speech-browser-sdk
summary: ''
fullName: Recognizer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      Recognizer(IAuthentication, IConnectionFactory, IAudioSource,
      RecognizerConfig)
    uid: microsoft-speech-browser-sdk.Recognizer.constructor
    package: microsoft-speech-browser-sdk
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new Recognizer(authentication: IAuthentication, connectionFactory:
        IConnectionFactory, audioSource: IAudioSource, recognizerConfig:
        RecognizerConfig)
      parameters:
        - id: authentication
          type: <xref uid="microsoft-speech-browser-sdk.IAuthentication" />
          description: ''
        - id: connectionFactory
          type: <xref uid="microsoft-speech-browser-sdk.IConnectionFactory" />
          description: ''
        - id: audioSource
          type: <xref uid="microsoft-speech-browser-sdk.IAudioSource" />
          description: ''
        - id: recognizerConfig
          type: <xref uid="microsoft-speech-browser-sdk.RecognizerConfig" />
          description: ''
properties:
  - name: AudioSource
    uid: microsoft-speech-browser-sdk.Recognizer.AudioSource
    package: microsoft-speech-browser-sdk
    summary: ''
    fullName: AudioSource
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'AudioSource: IAudioSource'
      return:
        type: <xref uid="microsoft-speech-browser-sdk.IAudioSource" />
        description: ''
  - name: Recognize
    uid: microsoft-speech-browser-sdk.Recognizer.Recognize
    package: microsoft-speech-browser-sdk
    summary: ''
    fullName: Recognize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        Recognize: (onEventCallback: (event: SpeechRecognitionEvent) => void,
        speechContextJson?: string) => Promise<boolean>
      return:
        type: >-
          (onEventCallback: (event: SpeechRecognitionEvent) =&gt; void,
          speechContextJson?: string) =&gt; Promise&lt;boolean&gt;
        description: ''
